{
  "models": {
    "installer.py": {
      "filename": "installer.py",
      "classes": [
        {
          "name": "Installer",
          "bases": [
            "<ast.Attribute object at 0x76cfff993d10>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9927d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff991e90>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff98b010>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "installer",
            "_description": "Installer",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9927d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff991e90>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "installer"
    },
    "account_move.py": {
      "filename": "account_move.py",
      "classes": [
        {
          "name": "AccountMove",
          "bases": [
            "<ast.Attribute object at 0x76cfff997bd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff996650>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff995dd0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9a4a10>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "account.move.records.extension",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff996650>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff995dd0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9a4a10>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "account.move.records.extension"
    },
    "bin_key_history.py": {
      "filename": "bin_key_history.py",
      "classes": [
        {
          "name": "BinKeyHistory",
          "bases": [
            "<ast.Attribute object at 0x76cfff9a7d50>"
          ],
          "fields": [
            {
              "name": "action_type",
              "type": "Selection",
              "attributes": {
                "string": "Action Type",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "partner_bin_key_id",
              "type": "Many2one",
              "attributes": {
                "string": "Partner Bin Key",
                "required": true,
                "ondelete": "cascade",
                "tracking": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "User",
                "default": "<ast.Lambda object at 0x76cfff9a65d0>",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Date Created",
                "default": "<ast.Attribute object at 0x76cfff989590>",
                "required": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "old_value",
              "type": "Char",
              "attributes": {
                "string": "Old Value"
              }
            },
            {
              "name": "new_value",
              "type": "Char",
              "attributes": {
                "string": "New Value"
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff991490>",
                "required": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9b2190>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "bin.key.history",
            "_description": "Bin Key History",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "date_created desc",
            "_rec_name": "action_type"
          }
        }
      ],
      "fields": [
        {
          "name": "action_type",
          "type": "Selection",
          "attributes": {
            "string": "Action Type",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "partner_bin_key_id",
          "type": "Many2one",
          "attributes": {
            "string": "Partner Bin Key",
            "required": true,
            "ondelete": "cascade",
            "tracking": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "User",
            "default": "<ast.Lambda object at 0x76cfff9a65d0>",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Date Created",
            "default": "<ast.Attribute object at 0x76cfff989590>",
            "required": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "old_value",
          "type": "Char",
          "attributes": {
            "string": "Old Value"
          }
        },
        {
          "name": "new_value",
          "type": "Char",
          "attributes": {
            "string": "New Value"
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff991490>",
            "required": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "bin.key.history"
    },
    "naid_destruction_record.py": {
      "filename": "naid_destruction_record.py",
      "classes": [
        {
          "name": "NaidDestructionRecord",
          "bases": [
            "<ast.Attribute object at 0x76cfff993190>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Record Number",
                "required": true
              }
            },
            {
              "name": "destruction_date",
              "type": "Date",
              "attributes": {
                "string": "Destruction Date",
                "required": true
              }
            },
            {
              "name": "certificate_id",
              "type": "Many2one",
              "attributes": {
                "string": "Certificate"
              }
            },
            {
              "name": "items_destroyed",
              "type": "Integer",
              "attributes": {
                "string": "Items Destroyed"
              }
            },
            {
              "name": "method",
              "type": "Selection",
              "attributes": {
                "string": "Destruction Method",
                "required": true
              }
            },
            {
              "name": "responsible_user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Destruction Manager"
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "default": "draft"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "naid.destruction.record",
            "_description": "NAID Destruction Record",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Record Number",
            "required": true
          }
        },
        {
          "name": "destruction_date",
          "type": "Date",
          "attributes": {
            "string": "Destruction Date",
            "required": true
          }
        },
        {
          "name": "certificate_id",
          "type": "Many2one",
          "attributes": {
            "string": "Certificate"
          }
        },
        {
          "name": "items_destroyed",
          "type": "Integer",
          "attributes": {
            "string": "Items Destroyed"
          }
        },
        {
          "name": "method",
          "type": "Selection",
          "attributes": {
            "string": "Destruction Method",
            "required": true
          }
        },
        {
          "name": "responsible_user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Destruction Manager"
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "default": "draft"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.destruction.record"
    },
    "advanced_billing.py": {
      "filename": "advanced_billing.py",
      "classes": [
        {
          "name": "AdvancedBilling",
          "bases": [
            "<ast.Attribute object at 0x76cfff9b3d50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9b3390>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "User",
                "default": "<ast.Lambda object at 0x76cfff9b0390>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "partner_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer",
                "required": true
              }
            },
            {
              "name": "billing_period_id",
              "type": "Many2one",
              "attributes": {
                "string": "Billing Period"
              }
            },
            {
              "name": "currency_id",
              "type": "Many2one",
              "attributes": {
                "string": "Currency"
              }
            },
            {
              "name": "invoice_id",
              "type": "Many2one",
              "attributes": {
                "string": "Invoice"
              }
            },
            {
              "name": "payment_term_id",
              "type": "Many2one",
              "attributes": {
                "string": "Payment Terms"
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "message_ids",
              "type": "One2many",
              "attributes": {
                "string": "Messages"
              }
            },
            {
              "name": "activity_ids",
              "type": "One2many",
              "attributes": {
                "string": "Activities"
              }
            },
            {
              "name": "message_follower_ids",
              "type": "One2many",
              "attributes": {
                "string": "Followers"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_generate_invoice",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "advanced.billing",
            "_description": "Advanced Billing",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        },
        {
          "name": "AdvancedBillingLine",
          "bases": [
            "<ast.Attribute object at 0x76cfff991510>"
          ],
          "fields": [
            {
              "name": "billing_id",
              "type": "Many2one",
              "attributes": {
                "string": "Billing",
                "required": true,
                "ondelete": "cascade"
              }
            },
            {
              "name": "product_id",
              "type": "Many2one",
              "attributes": {
                "string": "Product"
              }
            },
            {
              "name": "quantity",
              "type": "Float",
              "attributes": {
                "string": "Quantity",
                "default": 1.0
              }
            },
            {
              "name": "price_unit",
              "type": "Float",
              "attributes": {
                "string": "Unit Price"
              }
            },
            {
              "name": "price_total",
              "type": "Float",
              "attributes": {
                "string": "Total",
                "compute": "_compute_price_total",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_price_total",
              "decorators": [
                "<ast.Call object at 0x76cfff9bebd0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "advanced.billing.line",
            "_description": "Advanced Billing Line"
          }
        },
        {
          "name": "RecordsAdvancedBillingPeriod",
          "bases": [
            "<ast.Attribute object at 0x76cfff9be750>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true
              }
            },
            {
              "name": "start_date",
              "type": "Date",
              "attributes": {
                "string": "Start Date",
                "required": true
              }
            },
            {
              "name": "end_date",
              "type": "Date",
              "attributes": {
                "string": "End Date",
                "required": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9bca50>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "User",
                "default": "<ast.Lambda object at 0x76cfff9bc0d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "billing_ids",
              "type": "One2many",
              "attributes": {
                "string": "Billings"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "records.advanced.billing.period",
            "_description": "Advanced Billing Period",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true
          }
        },
        {
          "name": "start_date",
          "type": "Date",
          "attributes": {
            "string": "Start Date",
            "required": true
          }
        },
        {
          "name": "end_date",
          "type": "Date",
          "attributes": {
            "string": "End Date",
            "required": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9bca50>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "User",
            "default": "<ast.Lambda object at 0x76cfff9bc0d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "billing_ids",
          "type": "One2many",
          "attributes": {
            "string": "Billings"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.advanced.billing.period"
    },
    "records_approval_step.py": {
      "filename": "records_approval_step.py",
      "classes": [
        {
          "name": "RecordsApprovalStep",
          "bases": [
            "<ast.Attribute object at 0x76cfff9dfb90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Step Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Step Description",
                "tracking": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9dd490>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Step Manager",
                "default": "<ast.Lambda object at 0x76cfff9dca10>",
                "tracking": true
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10,
                "tracking": true
              }
            },
            {
              "name": "step_type",
              "type": "Selection",
              "attributes": {
                "string": "Step Type",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "approver_user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Approver",
                "tracking": true
              }
            },
            {
              "name": "approval_group_id",
              "type": "Many2one",
              "attributes": {
                "string": "Approval Group",
                "tracking": true
              }
            },
            {
              "name": "condition_field",
              "type": "Char",
              "attributes": {
                "string": "Condition Field",
                "tracking": true
              }
            },
            {
              "name": "condition_operator",
              "type": "Selection",
              "attributes": {
                "string": "Condition Operator",
                "tracking": true
              }
            },
            {
              "name": "condition_value",
              "type": "Char",
              "attributes": {
                "string": "Condition Value",
                "tracking": true
              }
            },
            {
              "name": "timeout_days",
              "type": "Integer",
              "attributes": {
                "string": "Timeout (Days)",
                "tracking": true
              }
            },
            {
              "name": "is_mandatory",
              "type": "Boolean",
              "attributes": {
                "string": "Mandatory Step",
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "pending",
                "tracking": true,
                "required": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes",
                "tracking": true
              }
            },
            {
              "name": "approval_notes",
              "type": "Text",
              "attributes": {
                "string": "Approval Notes",
                "tracking": true
              }
            }
          ],
          "methods": [
            {
              "name": "action_approve",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reject",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_skip",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.approval.step",
            "_description": "Records Approval Step",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "sequence, name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Step Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Step Description",
            "tracking": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9dd490>",
            "required": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Step Manager",
            "default": "<ast.Lambda object at 0x76cfff9dca10>",
            "tracking": true
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10,
            "tracking": true
          }
        },
        {
          "name": "step_type",
          "type": "Selection",
          "attributes": {
            "string": "Step Type",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "approver_user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Approver",
            "tracking": true
          }
        },
        {
          "name": "approval_group_id",
          "type": "Many2one",
          "attributes": {
            "string": "Approval Group",
            "tracking": true
          }
        },
        {
          "name": "condition_field",
          "type": "Char",
          "attributes": {
            "string": "Condition Field",
            "tracking": true
          }
        },
        {
          "name": "condition_operator",
          "type": "Selection",
          "attributes": {
            "string": "Condition Operator",
            "tracking": true
          }
        },
        {
          "name": "condition_value",
          "type": "Char",
          "attributes": {
            "string": "Condition Value",
            "tracking": true
          }
        },
        {
          "name": "timeout_days",
          "type": "Integer",
          "attributes": {
            "string": "Timeout (Days)",
            "tracking": true
          }
        },
        {
          "name": "is_mandatory",
          "type": "Boolean",
          "attributes": {
            "string": "Mandatory Step",
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "pending",
            "tracking": true,
            "required": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes",
            "tracking": true
          }
        },
        {
          "name": "approval_notes",
          "type": "Text",
          "attributes": {
            "string": "Approval Notes",
            "tracking": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.approval.step"
    },
    "hr_employee.py": {
      "filename": "hr_employee.py",
      "classes": [
        {
          "name": "HrEmployee",
          "bases": [
            "<ast.Attribute object at 0x76cfff992cd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff990f10>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff993490>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Records Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff98b6d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_inherit": "hr.employee",
            "_description": "Hr Employee",
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": []
    },
    "field_label_customization.py": {
      "filename": "field_label_customization.py",
      "classes": [
        {
          "name": "FieldLabelCustomization",
          "bases": [
            "<ast.Attribute object at 0x76cfff995610>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9be710>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9bcf10>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff9beb10>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9a69d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "field.label.customization",
            "_description": "Field Label Customization",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9be710>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9bcf10>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff9beb10>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "field.label.customization"
    },
    "records_container_transfer.py": {
      "filename": "records_container_transfer.py",
      "classes": [
        {
          "name": "RecordsContainerTransfer",
          "bases": [
            "<ast.Attribute object at 0x76cfff9bfd10>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9a7350>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9929d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff990ed0>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.container.transfer",
            "_description": "Records Container Transfer Log",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9a7350>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9929d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff990ed0>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.container.transfer"
    },
    "partner_bin_key.py": {
      "filename": "partner_bin_key.py",
      "classes": [
        {
          "name": "PartnerBinKey",
          "bases": [
            "<ast.Attribute object at 0x76cfff9db910>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Key ID",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9da690>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Key Manager",
                "default": "<ast.Lambda object at 0x76cfff9d9e10>",
                "tracking": true
              }
            },
            {
              "name": "partner_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer",
                "required": true,
                "tracking": true,
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ]
              }
            },
            {
              "name": "assigned_to_contact",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned To",
                "domain": [
                  [
                    "is_company",
                    "=",
                    false
                  ]
                ],
                "tracking": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "available",
                "tracking": true,
                "required": true
              }
            },
            {
              "name": "assignment_date",
              "type": "Date",
              "attributes": {
                "string": "Assignment Date",
                "tracking": true
              }
            },
            {
              "name": "return_date",
              "type": "Date",
              "attributes": {
                "string": "Return Date",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes",
                "tracking": true
              }
            },
            {
              "name": "action_issue_new_key",
              "type": "Char",
              "attributes": {
                "string": "Action Issue New Key"
              }
            },
            {
              "name": "action_report_lost_key",
              "type": "Char",
              "attributes": {
                "string": "Action Report Lost Key"
              }
            },
            {
              "name": "action_return_key",
              "type": "Char",
              "attributes": {
                "string": "Action Return Key"
              }
            },
            {
              "name": "action_view_active_key",
              "type": "Char",
              "attributes": {
                "string": "Action View Active Key"
              }
            },
            {
              "name": "action_view_bin_keys",
              "type": "Char",
              "attributes": {
                "string": "Action View Bin Keys"
              }
            },
            {
              "name": "action_view_unlock_services",
              "type": "Char",
              "attributes": {
                "string": "Action View Unlock Services"
              }
            },
            {
              "name": "active_bin_key_count",
              "type": "Integer",
              "attributes": {
                "string": "Active Bin Key Count",
                "compute": "_compute_active_bin_key_count",
                "store": true
              }
            },
            {
              "name": "billable",
              "type": "Boolean",
              "attributes": {
                "string": "Billable",
                "default": false
              }
            },
            {
              "name": "bin_key_history_ids",
              "type": "One2many",
              "attributes": {
                "string": "Bin Key History Ids"
              }
            },
            {
              "name": "bin_location",
              "type": "Char",
              "attributes": {
                "string": "Bin Location"
              }
            },
            {
              "name": "binding_view_types",
              "type": "Char",
              "attributes": {
                "string": "Binding View Types"
              }
            },
            {
              "name": "button_box",
              "type": "Char",
              "attributes": {
                "string": "Button Box"
              }
            },
            {
              "name": "category_id",
              "type": "Many2one",
              "attributes": {
                "string": "Partner Category"
              }
            },
            {
              "name": "charge_amount",
              "type": "Float",
              "attributes": {
                "string": "Charge Amount",
                "digits": [
                  12,
                  2
                ]
              }
            },
            {
              "name": "context",
              "type": "Char",
              "attributes": {
                "string": "Context"
              }
            },
            {
              "name": "country_id",
              "type": "Many2one",
              "attributes": {
                "string": "Country"
              }
            },
            {
              "name": "customer",
              "type": "Char",
              "attributes": {
                "string": "Customer Name"
              }
            },
            {
              "name": "emergency_contact",
              "type": "Char",
              "attributes": {
                "string": "Emergency Contact"
              }
            },
            {
              "name": "emergency_contacts",
              "type": "Char",
              "attributes": {
                "string": "Emergency Contacts"
              }
            },
            {
              "name": "has_bin_key",
              "type": "Char",
              "attributes": {
                "string": "Has Bin Key"
              }
            },
            {
              "name": "invoice_created",
              "type": "Char",
              "attributes": {
                "string": "Invoice Created"
              }
            },
            {
              "name": "is_emergency_key_contact",
              "type": "Char",
              "attributes": {
                "string": "Is Emergency Key Contact"
              }
            },
            {
              "name": "issue_date",
              "type": "Date",
              "attributes": {
                "string": "Issue Date"
              }
            },
            {
              "name": "issue_location",
              "type": "Char",
              "attributes": {
                "string": "Issue Location"
              }
            },
            {
              "name": "key_issue_date",
              "type": "Date",
              "attributes": {
                "string": "Key Issue Date"
              }
            },
            {
              "name": "key_number",
              "type": "Char",
              "attributes": {
                "string": "Key Number"
              }
            },
            {
              "name": "no_bin_key",
              "type": "Char",
              "attributes": {
                "string": "No Bin Key"
              }
            },
            {
              "name": "res_model",
              "type": "Char",
              "attributes": {
                "string": "Res Model"
              }
            },
            {
              "name": "service_date",
              "type": "Date",
              "attributes": {
                "string": "Service Date"
              }
            },
            {
              "name": "service_number",
              "type": "Char",
              "attributes": {
                "string": "Service Number"
              }
            },
            {
              "name": "status",
              "type": "Selection",
              "attributes": {
                "string": "Processing Status",
                "default": "new"
              }
            },
            {
              "name": "target",
              "type": "Char",
              "attributes": {
                "string": "Target"
              }
            },
            {
              "name": "total_bin_keys_issued",
              "type": "Integer",
              "attributes": {
                "string": "Total Bin Keys Issued",
                "compute": "_compute_total_bin_keys_issued",
                "store": true
              }
            },
            {
              "name": "total_unlock_charges",
              "type": "Float",
              "attributes": {
                "string": "Total Unlock Charges",
                "digits": [
                  12,
                  2
                ],
                "compute": "_compute_total_unlock_charges",
                "store": true
              }
            },
            {
              "name": "unlock_reason",
              "type": "Char",
              "attributes": {
                "string": "Unlock Reason"
              }
            },
            {
              "name": "unlock_service_count",
              "type": "Integer",
              "attributes": {
                "string": "Unlock Service Count",
                "compute": "_compute_unlock_service_count",
                "store": true
              }
            },
            {
              "name": "unlock_service_history_ids",
              "type": "One2many",
              "attributes": {
                "string": "Unlock Service History Ids"
              }
            },
            {
              "name": "view_mode",
              "type": "Char",
              "attributes": {
                "string": "View Mode"
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_active_bin_key_count",
              "decorators": [
                "<ast.Call object at 0x76cfff9a7910>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_total_bin_keys_issued",
              "decorators": [
                "<ast.Call object at 0x76cfff9bded0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_total_unlock_charges",
              "decorators": [
                "<ast.Call object at 0x76cfff9bf990>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_unlock_service_count",
              "decorators": [
                "<ast.Call object at 0x76cfff9d5190>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_assign_key",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_return_key",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_report_lost",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_make_available",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [
                "<ast.Attribute object at 0x76cfffa09110>"
              ],
              "args": [
                "self",
                "vals_list"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "partner.bin.key",
            "_description": "Partner Bin Key Management",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Key ID",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9da690>",
            "required": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Key Manager",
            "default": "<ast.Lambda object at 0x76cfff9d9e10>",
            "tracking": true
          }
        },
        {
          "name": "partner_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer",
            "required": true,
            "tracking": true,
            "domain": [
              [
                "is_company",
                "=",
                true
              ]
            ]
          }
        },
        {
          "name": "assigned_to_contact",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned To",
            "domain": [
              [
                "is_company",
                "=",
                false
              ]
            ],
            "tracking": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "available",
            "tracking": true,
            "required": true
          }
        },
        {
          "name": "assignment_date",
          "type": "Date",
          "attributes": {
            "string": "Assignment Date",
            "tracking": true
          }
        },
        {
          "name": "return_date",
          "type": "Date",
          "attributes": {
            "string": "Return Date",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes",
            "tracking": true
          }
        },
        {
          "name": "action_issue_new_key",
          "type": "Char",
          "attributes": {
            "string": "Action Issue New Key"
          }
        },
        {
          "name": "action_report_lost_key",
          "type": "Char",
          "attributes": {
            "string": "Action Report Lost Key"
          }
        },
        {
          "name": "action_return_key",
          "type": "Char",
          "attributes": {
            "string": "Action Return Key"
          }
        },
        {
          "name": "action_view_active_key",
          "type": "Char",
          "attributes": {
            "string": "Action View Active Key"
          }
        },
        {
          "name": "action_view_bin_keys",
          "type": "Char",
          "attributes": {
            "string": "Action View Bin Keys"
          }
        },
        {
          "name": "action_view_unlock_services",
          "type": "Char",
          "attributes": {
            "string": "Action View Unlock Services"
          }
        },
        {
          "name": "active_bin_key_count",
          "type": "Integer",
          "attributes": {
            "string": "Active Bin Key Count",
            "compute": "_compute_active_bin_key_count",
            "store": true
          }
        },
        {
          "name": "billable",
          "type": "Boolean",
          "attributes": {
            "string": "Billable",
            "default": false
          }
        },
        {
          "name": "bin_key_history_ids",
          "type": "One2many",
          "attributes": {
            "string": "Bin Key History Ids"
          }
        },
        {
          "name": "bin_location",
          "type": "Char",
          "attributes": {
            "string": "Bin Location"
          }
        },
        {
          "name": "binding_view_types",
          "type": "Char",
          "attributes": {
            "string": "Binding View Types"
          }
        },
        {
          "name": "button_box",
          "type": "Char",
          "attributes": {
            "string": "Button Box"
          }
        },
        {
          "name": "category_id",
          "type": "Many2one",
          "attributes": {
            "string": "Partner Category"
          }
        },
        {
          "name": "charge_amount",
          "type": "Float",
          "attributes": {
            "string": "Charge Amount",
            "digits": [
              12,
              2
            ]
          }
        },
        {
          "name": "context",
          "type": "Char",
          "attributes": {
            "string": "Context"
          }
        },
        {
          "name": "country_id",
          "type": "Many2one",
          "attributes": {
            "string": "Country"
          }
        },
        {
          "name": "customer",
          "type": "Char",
          "attributes": {
            "string": "Customer Name"
          }
        },
        {
          "name": "emergency_contact",
          "type": "Char",
          "attributes": {
            "string": "Emergency Contact"
          }
        },
        {
          "name": "emergency_contacts",
          "type": "Char",
          "attributes": {
            "string": "Emergency Contacts"
          }
        },
        {
          "name": "has_bin_key",
          "type": "Char",
          "attributes": {
            "string": "Has Bin Key"
          }
        },
        {
          "name": "invoice_created",
          "type": "Char",
          "attributes": {
            "string": "Invoice Created"
          }
        },
        {
          "name": "is_emergency_key_contact",
          "type": "Char",
          "attributes": {
            "string": "Is Emergency Key Contact"
          }
        },
        {
          "name": "issue_date",
          "type": "Date",
          "attributes": {
            "string": "Issue Date"
          }
        },
        {
          "name": "issue_location",
          "type": "Char",
          "attributes": {
            "string": "Issue Location"
          }
        },
        {
          "name": "key_issue_date",
          "type": "Date",
          "attributes": {
            "string": "Key Issue Date"
          }
        },
        {
          "name": "key_number",
          "type": "Char",
          "attributes": {
            "string": "Key Number"
          }
        },
        {
          "name": "no_bin_key",
          "type": "Char",
          "attributes": {
            "string": "No Bin Key"
          }
        },
        {
          "name": "res_model",
          "type": "Char",
          "attributes": {
            "string": "Res Model"
          }
        },
        {
          "name": "service_date",
          "type": "Date",
          "attributes": {
            "string": "Service Date"
          }
        },
        {
          "name": "service_number",
          "type": "Char",
          "attributes": {
            "string": "Service Number"
          }
        },
        {
          "name": "status",
          "type": "Selection",
          "attributes": {
            "string": "Processing Status",
            "default": "new"
          }
        },
        {
          "name": "target",
          "type": "Char",
          "attributes": {
            "string": "Target"
          }
        },
        {
          "name": "total_bin_keys_issued",
          "type": "Integer",
          "attributes": {
            "string": "Total Bin Keys Issued",
            "compute": "_compute_total_bin_keys_issued",
            "store": true
          }
        },
        {
          "name": "total_unlock_charges",
          "type": "Float",
          "attributes": {
            "string": "Total Unlock Charges",
            "digits": [
              12,
              2
            ],
            "compute": "_compute_total_unlock_charges",
            "store": true
          }
        },
        {
          "name": "unlock_reason",
          "type": "Char",
          "attributes": {
            "string": "Unlock Reason"
          }
        },
        {
          "name": "unlock_service_count",
          "type": "Integer",
          "attributes": {
            "string": "Unlock Service Count",
            "compute": "_compute_unlock_service_count",
            "store": true
          }
        },
        {
          "name": "unlock_service_history_ids",
          "type": "One2many",
          "attributes": {
            "string": "Unlock Service History Ids"
          }
        },
        {
          "name": "view_mode",
          "type": "Char",
          "attributes": {
            "string": "View Mode"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "partner.bin.key"
    },
    "transitory_items.py": {
      "filename": "transitory_items.py",
      "classes": [
        {
          "name": "TransitoryItems",
          "bases": [
            "<ast.Attribute object at 0x76cfffa0bdd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa0aa50>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa0a2d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9bc390>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "transitory.items",
            "_description": "Transitory Items",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa0aa50>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa0a2d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "transitory.items"
    },
    "revenue_forecaster.py": {
      "filename": "revenue_forecaster.py",
      "classes": [
        {
          "name": "RevenueForecaster",
          "bases": [
            "<ast.Attribute object at 0x76cfff9efad0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Forecast Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9ee850>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Created By",
                "default": "<ast.Lambda object at 0x76cfff9edfd0>",
                "tracking": true
              }
            },
            {
              "name": "scenario_type",
              "type": "Selection",
              "attributes": {
                "string": "Scenario Type",
                "required": true,
                "default": "global_increase",
                "tracking": true
              }
            },
            {
              "name": "forecast_period",
              "type": "Selection",
              "attributes": {
                "string": "Forecast Period",
                "default": "annual",
                "required": true
              }
            },
            {
              "name": "start_date",
              "type": "Date",
              "attributes": {
                "string": "Forecast Start Date",
                "required": true,
                "default": "<ast.Attribute object at 0x76cfff992450>",
                "tracking": true
              }
            },
            {
              "name": "end_date",
              "type": "Date",
              "attributes": {
                "string": "Forecast End Date",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "global_adjustment_type",
              "type": "Selection",
              "attributes": {
                "string": "Global Adjustment Type",
                "default": "percentage"
              }
            },
            {
              "name": "global_adjustment_value",
              "type": "Float",
              "attributes": {
                "string": "Adjustment Value",
                "help": "Enter percentage (e.g., 5 for 5%) or fixed amount"
              }
            },
            {
              "name": "service_category",
              "type": "Selection",
              "attributes": {
                "string": "Service Category"
              }
            },
            {
              "name": "category_adjustment_value",
              "type": "Float",
              "attributes": {
                "string": "Category Adjustment (%)",
                "help": "Percentage adjustment for this category"
              }
            },
            {
              "name": "specific_customer_ids",
              "type": "Many2many",
              "attributes": {
                "string": "Target Customers",
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ]
              }
            },
            {
              "name": "customer_adjustment_type",
              "type": "Selection",
              "attributes": {
                "string": "Customer Adjustment Type"
              }
            },
            {
              "name": "current_revenue",
              "type": "Float",
              "attributes": {
                "string": "Current Annual Revenue",
                "digits": [
                  12,
                  2
                ]
              }
            },
            {
              "name": "projected_revenue",
              "type": "Float",
              "attributes": {
                "string": "Projected Revenue",
                "compute": "_compute_projected_revenue",
                "store": true,
                "digits": [
                  12,
                  2
                ]
              }
            },
            {
              "name": "revenue_increase",
              "type": "Float",
              "attributes": {
                "string": "Revenue Increase",
                "compute": "_compute_revenue_increase",
                "store": true,
                "digits": [
                  12,
                  2
                ]
              }
            },
            {
              "name": "revenue_increase_percentage",
              "type": "Float",
              "attributes": {
                "string": "Revenue Increase %",
                "compute": "_compute_revenue_increase_percentage",
                "store": true,
                "digits": [
                  12,
                  2
                ]
              }
            },
            {
              "name": "market_growth_rate",
              "type": "Float",
              "attributes": {
                "string": "Market Growth Rate (%)",
                "digits": [
                  12,
                  2
                ]
              }
            },
            {
              "name": "competitor_analysis",
              "type": "Text",
              "attributes": {
                "string": "Competitor Analysis"
              }
            },
            {
              "name": "market_position",
              "type": "Selection",
              "attributes": {
                "string": "Market Position",
                "default": "competitive"
              }
            },
            {
              "name": "risk_level",
              "type": "Selection",
              "attributes": {
                "string": "Risk Level",
                "compute": "_compute_risk_level",
                "store": true
              }
            },
            {
              "name": "customer_retention_risk",
              "type": "Float",
              "attributes": {
                "string": "Customer Retention Risk (%)",
                "digits": [
                  12,
                  2
                ],
                "default": 5.0
              }
            },
            {
              "name": "competitive_response_risk",
              "type": "Float",
              "attributes": {
                "string": "Competitive Response Risk (%)",
                "digits": [
                  12,
                  2
                ],
                "default": 10.0
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "implementation_date",
              "type": "Date",
              "attributes": {
                "string": "Implementation Date",
                "tracking": true
              }
            },
            {
              "name": "actual_revenue_impact",
              "type": "Float",
              "attributes": {
                "string": "Actual Revenue Impact",
                "digits": [
                  12,
                  2
                ]
              }
            },
            {
              "name": "rate_change_wizard_ids",
              "type": "One2many",
              "attributes": {
                "string": "Rate Change Wizards"
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_projected_revenue",
              "decorators": [
                "<ast.Call object at 0x76cfff9a7290>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_revenue_increase",
              "decorators": [
                "<ast.Call object at 0x76cfff9a7850>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_revenue_increase_percentage",
              "decorators": [
                "<ast.Call object at 0x76cfff996dd0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_risk_level",
              "decorators": [
                "<ast.Call object at 0x76cfff9b0d90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_get_target_customers",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_start_analysis",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_submit_for_review",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_approve",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_implement",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_create_rate_change_wizard",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_dates",
              "decorators": [
                "<ast.Call object at 0x76cfffa31b90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "revenue.forecaster",
            "_description": "Revenue Forecaster",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Forecast Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9ee850>",
            "required": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Created By",
            "default": "<ast.Lambda object at 0x76cfff9edfd0>",
            "tracking": true
          }
        },
        {
          "name": "scenario_type",
          "type": "Selection",
          "attributes": {
            "string": "Scenario Type",
            "required": true,
            "default": "global_increase",
            "tracking": true
          }
        },
        {
          "name": "forecast_period",
          "type": "Selection",
          "attributes": {
            "string": "Forecast Period",
            "default": "annual",
            "required": true
          }
        },
        {
          "name": "start_date",
          "type": "Date",
          "attributes": {
            "string": "Forecast Start Date",
            "required": true,
            "default": "<ast.Attribute object at 0x76cfff992450>",
            "tracking": true
          }
        },
        {
          "name": "end_date",
          "type": "Date",
          "attributes": {
            "string": "Forecast End Date",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "global_adjustment_type",
          "type": "Selection",
          "attributes": {
            "string": "Global Adjustment Type",
            "default": "percentage"
          }
        },
        {
          "name": "global_adjustment_value",
          "type": "Float",
          "attributes": {
            "string": "Adjustment Value",
            "help": "Enter percentage (e.g., 5 for 5%) or fixed amount"
          }
        },
        {
          "name": "service_category",
          "type": "Selection",
          "attributes": {
            "string": "Service Category"
          }
        },
        {
          "name": "category_adjustment_value",
          "type": "Float",
          "attributes": {
            "string": "Category Adjustment (%)",
            "help": "Percentage adjustment for this category"
          }
        },
        {
          "name": "specific_customer_ids",
          "type": "Many2many",
          "attributes": {
            "string": "Target Customers",
            "domain": [
              [
                "is_company",
                "=",
                true
              ]
            ]
          }
        },
        {
          "name": "customer_adjustment_type",
          "type": "Selection",
          "attributes": {
            "string": "Customer Adjustment Type"
          }
        },
        {
          "name": "current_revenue",
          "type": "Float",
          "attributes": {
            "string": "Current Annual Revenue",
            "digits": [
              12,
              2
            ]
          }
        },
        {
          "name": "projected_revenue",
          "type": "Float",
          "attributes": {
            "string": "Projected Revenue",
            "compute": "_compute_projected_revenue",
            "store": true,
            "digits": [
              12,
              2
            ]
          }
        },
        {
          "name": "revenue_increase",
          "type": "Float",
          "attributes": {
            "string": "Revenue Increase",
            "compute": "_compute_revenue_increase",
            "store": true,
            "digits": [
              12,
              2
            ]
          }
        },
        {
          "name": "revenue_increase_percentage",
          "type": "Float",
          "attributes": {
            "string": "Revenue Increase %",
            "compute": "_compute_revenue_increase_percentage",
            "store": true,
            "digits": [
              12,
              2
            ]
          }
        },
        {
          "name": "market_growth_rate",
          "type": "Float",
          "attributes": {
            "string": "Market Growth Rate (%)",
            "digits": [
              12,
              2
            ]
          }
        },
        {
          "name": "competitor_analysis",
          "type": "Text",
          "attributes": {
            "string": "Competitor Analysis"
          }
        },
        {
          "name": "market_position",
          "type": "Selection",
          "attributes": {
            "string": "Market Position",
            "default": "competitive"
          }
        },
        {
          "name": "risk_level",
          "type": "Selection",
          "attributes": {
            "string": "Risk Level",
            "compute": "_compute_risk_level",
            "store": true
          }
        },
        {
          "name": "customer_retention_risk",
          "type": "Float",
          "attributes": {
            "string": "Customer Retention Risk (%)",
            "digits": [
              12,
              2
            ],
            "default": 5.0
          }
        },
        {
          "name": "competitive_response_risk",
          "type": "Float",
          "attributes": {
            "string": "Competitive Response Risk (%)",
            "digits": [
              12,
              2
            ],
            "default": 10.0
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "implementation_date",
          "type": "Date",
          "attributes": {
            "string": "Implementation Date",
            "tracking": true
          }
        },
        {
          "name": "actual_revenue_impact",
          "type": "Float",
          "attributes": {
            "string": "Actual Revenue Impact",
            "digits": [
              12,
              2
            ]
          }
        },
        {
          "name": "rate_change_wizard_ids",
          "type": "One2many",
          "attributes": {
            "string": "Rate Change Wizards"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "revenue.forecaster"
    },
    "stock_picking.py": {
      "filename": "stock_picking.py",
      "classes": [
        {
          "name": "StockPicking",
          "bases": [
            "<ast.Attribute object at 0x76cfff9cef10>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa0a210>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa0ad90>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff98b010>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "stock.picking.records.extension",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa0a210>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa0ad90>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff98b010>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "stock.picking.records.extension"
    },
    "department_billing.py": {
      "filename": "department_billing.py",
      "classes": [
        {
          "name": "RecordsDepartmentBillingContact",
          "bases": [
            "<ast.Attribute object at 0x76cfff98a450>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9db390>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9db3d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d8850>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.department.billing.enhanced",
            "_description": "Department Billing Contact - FIELD ENHANCEMENT COMPLETE \u2705",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9db390>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9db3d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9d8850>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.department.billing.enhanced"
    },
    "records_chain_of_custody.py": {
      "filename": "records_chain_of_custody.py",
      "classes": [
        {
          "name": "RecordsChainOfCustody",
          "bases": [
            "<ast.Attribute object at 0x76cfff9a6f90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9a4fd0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9a57d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9be9d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.chain.of.custody",
            "_description": "Records Chain Of Custody",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9a4fd0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9a57d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.chain.of.custody"
    },
    "records_deletion_request.py": {
      "filename": "records_deletion_request.py",
      "classes": [
        {
          "name": "RecordsDeletionRequest",
          "bases": [
            "<ast.Attribute object at 0x76cfffa03650>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa02b50>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa02790>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d8cd0>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.deletion.request.enhanced",
            "_description": "Records Deletion Request",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa02b50>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa02790>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9d8cd0>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.deletion.request.enhanced"
    },
    "barcode_models.py": {
      "filename": "barcode_models.py",
      "classes": [
        {
          "name": "ResPartnerDepartmentBilling",
          "bases": [
            "<ast.Attribute object at 0x76cfffa01050>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9a7990>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9a7310>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9bfa90>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "barcode.models.enhanced",
            "_description": "Partner Department Billing",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9a7990>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9a7310>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9bfa90>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "barcode.models.enhanced"
    },
    "barcode_product.py": {
      "filename": "barcode_product.py",
      "classes": [
        {
          "name": "BarcodeProduct",
          "bases": [
            "<ast.Attribute object at 0x76cfff9d85d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9dbb90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9da910>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa01110>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "barcode.product",
            "_description": "Barcode Product for Records Management - FIELD ENHANCEMENT COMPLETE \u2705",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9dbb90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9da910>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa01110>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "barcode.product"
    },
    "naid_compliance.py": {
      "filename": "naid_compliance.py",
      "classes": [
        {
          "name": "NaidCompliance",
          "bases": [
            "<ast.Attribute object at 0x76cfff989250>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Compliance Check",
                "required": true
              }
            },
            {
              "name": "check_date",
              "type": "Date",
              "attributes": {
                "string": "Check Date",
                "required": true
              }
            },
            {
              "name": "compliance_level",
              "type": "Selection",
              "attributes": {
                "string": "NAID Level"
              }
            },
            {
              "name": "certificate_id",
              "type": "Many2one",
              "attributes": {
                "string": "Certificate"
              }
            },
            {
              "name": "audit_results",
              "type": "Text",
              "attributes": {
                "string": "Audit Results"
              }
            },
            {
              "name": "corrective_actions",
              "type": "Text",
              "attributes": {
                "string": "Corrective Actions"
              }
            },
            {
              "name": "next_review_date",
              "type": "Date",
              "attributes": {
                "string": "Next Review Date"
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "default": "pending"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "naid.compliance",
            "_description": "NAID Compliance Management",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Compliance Check",
            "required": true
          }
        },
        {
          "name": "check_date",
          "type": "Date",
          "attributes": {
            "string": "Check Date",
            "required": true
          }
        },
        {
          "name": "compliance_level",
          "type": "Selection",
          "attributes": {
            "string": "NAID Level"
          }
        },
        {
          "name": "certificate_id",
          "type": "Many2one",
          "attributes": {
            "string": "Certificate"
          }
        },
        {
          "name": "audit_results",
          "type": "Text",
          "attributes": {
            "string": "Audit Results"
          }
        },
        {
          "name": "corrective_actions",
          "type": "Text",
          "attributes": {
            "string": "Corrective Actions"
          }
        },
        {
          "name": "next_review_date",
          "type": "Date",
          "attributes": {
            "string": "Next Review Date"
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "default": "pending"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.compliance"
    },
    "survey_user_input.py": {
      "filename": "survey_user_input.py",
      "classes": [
        {
          "name": "SurveyUserInput",
          "bases": [
            "<ast.Attribute object at 0x76cfff9d85d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9db7d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9dae50>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9bd850>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "survey.user.input.enhanced",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9db7d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9dae50>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9bd850>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "survey.user.input.enhanced"
    },
    "records_management_base_menus.py": {
      "filename": "records_management_base_menus.py",
      "classes": [
        {
          "name": "RecordsManagementBaseMenus",
          "bases": [
            "<ast.Attribute object at 0x76cfff9cc610>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9cd3d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "User",
                "default": "<ast.Lambda object at 0x76cfff9cde50>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "message_ids",
              "type": "One2many",
              "attributes": {
                "string": "Messages",
                "auto_join": true
              }
            },
            {
              "name": "activity_ids",
              "type": "One2many",
              "attributes": {
                "string": "Activities",
                "auto_join": true
              }
            },
            {
              "name": "message_follower_ids",
              "type": "One2many",
              "attributes": {
                "string": "Followers",
                "auto_join": true
              }
            },
            {
              "name": "Configuration",
              "type": "Char",
              "attributes": {
                "string": "Configuration"
              }
            },
            {
              "name": "Inventory",
              "type": "Char",
              "attributes": {
                "string": "Inventory"
              }
            },
            {
              "name": "Operations",
              "type": "Char",
              "attributes": {
                "string": "Operations"
              }
            },
            {
              "name": "Reporting",
              "type": "Char",
              "attributes": {
                "string": "Reporting"
              }
            },
            {
              "name": "Settings",
              "type": "Char",
              "attributes": {
                "string": "Settings"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "records.management.base.menus",
            "_description": "Records Management Base Menus",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9cd3d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "User",
            "default": "<ast.Lambda object at 0x76cfff9cde50>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "message_ids",
          "type": "One2many",
          "attributes": {
            "string": "Messages",
            "auto_join": true
          }
        },
        {
          "name": "activity_ids",
          "type": "One2many",
          "attributes": {
            "string": "Activities",
            "auto_join": true
          }
        },
        {
          "name": "message_follower_ids",
          "type": "One2many",
          "attributes": {
            "string": "Followers",
            "auto_join": true
          }
        },
        {
          "name": "Configuration",
          "type": "Char",
          "attributes": {
            "string": "Configuration"
          }
        },
        {
          "name": "Inventory",
          "type": "Char",
          "attributes": {
            "string": "Inventory"
          }
        },
        {
          "name": "Operations",
          "type": "Char",
          "attributes": {
            "string": "Operations"
          }
        },
        {
          "name": "Reporting",
          "type": "Char",
          "attributes": {
            "string": "Reporting"
          }
        },
        {
          "name": "Settings",
          "type": "Char",
          "attributes": {
            "string": "Settings"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.management.base.menus"
    },
    "survey_improvement_action.py": {
      "filename": "survey_improvement_action.py",
      "classes": [
        {
          "name": "SurveyImprovementAction",
          "bases": [
            "<ast.Attribute object at 0x76cfff98a9d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa01510>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa038d0>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff9a7090>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9da010>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "survey.improvement.action",
            "_description": "Survey Improvement Action",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa01510>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa038d0>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff9a7090>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "survey.improvement.action"
    },
    "records_container.py": {
      "filename": "records_container.py",
      "classes": [
        {
          "name": "RecordsContainer",
          "bases": [
            "<ast.Attribute object at 0x76cfff9dec50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Container Number",
                "required": true
              }
            },
            {
              "name": "container_type",
              "type": "Selection",
              "attributes": {
                "string": "Container Type",
                "required": true
              }
            },
            {
              "name": "location_id",
              "type": "Many2one",
              "attributes": {
                "string": "Location"
              }
            },
            {
              "name": "customer_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer"
              }
            },
            {
              "name": "customer_inventory_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer Inventory"
              }
            },
            {
              "name": "capacity",
              "type": "Float",
              "attributes": {
                "string": "Capacity"
              }
            },
            {
              "name": "current_usage",
              "type": "Float",
              "attributes": {
                "string": "Current Usage"
              }
            },
            {
              "name": "creation_date",
              "type": "Date",
              "attributes": {
                "string": "Creation Date",
                "default": "<ast.Attribute object at 0x76cfff9cdc50>"
              }
            },
            {
              "name": "destruction_date",
              "type": "Date",
              "attributes": {
                "string": "Destruction Date"
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "default": "active"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "records.container",
            "_description": "Records Container",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Container Number",
            "required": true
          }
        },
        {
          "name": "container_type",
          "type": "Selection",
          "attributes": {
            "string": "Container Type",
            "required": true
          }
        },
        {
          "name": "location_id",
          "type": "Many2one",
          "attributes": {
            "string": "Location"
          }
        },
        {
          "name": "customer_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer"
          }
        },
        {
          "name": "customer_inventory_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer Inventory"
          }
        },
        {
          "name": "capacity",
          "type": "Float",
          "attributes": {
            "string": "Capacity"
          }
        },
        {
          "name": "current_usage",
          "type": "Float",
          "attributes": {
            "string": "Current Usage"
          }
        },
        {
          "name": "creation_date",
          "type": "Date",
          "attributes": {
            "string": "Creation Date",
            "default": "<ast.Attribute object at 0x76cfff9cdc50>"
          }
        },
        {
          "name": "destruction_date",
          "type": "Date",
          "attributes": {
            "string": "Destruction Date"
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "default": "active"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.container"
    },
    "billing_automation.py": {
      "filename": "billing_automation.py",
      "classes": [
        {
          "name": "RecordsBillingService",
          "bases": [
            "<ast.Attribute object at 0x76cfff9d9e90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9d9650>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9dbb50>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "billing_id",
              "type": "Many2one",
              "attributes": {
                "string": "Related Billing",
                "tracking": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa01790>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.billing.service",
            "_description": "Billing Generation Service",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9d9650>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9dbb50>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "billing_id",
          "type": "Many2one",
          "attributes": {
            "string": "Related Billing",
            "tracking": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa01790>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.billing.service"
    },
    "document_retrieval_work_order.py": {
      "filename": "document_retrieval_work_order.py",
      "classes": [
        {
          "name": "DocumentRetrievalWorkOrder",
          "bases": [
            "<ast.Attribute object at 0x76cfff9bf190>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9945d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9977d0>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff9a4f90>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9dc990>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "document.retrieval.work.order",
            "_description": "Document Retrieval Work Order",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9945d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9977d0>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff9a4f90>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "document.retrieval.work.order"
    },
    "shredding_hard_drive.py": {
      "filename": "shredding_hard_drive.py",
      "classes": [
        {
          "name": "ShreddingHardDrive",
          "bases": [
            "<ast.Attribute object at 0x76cfff98a010>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa03a10>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa011d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d8e10>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "shredding.hard_drive",
            "_description": "Hard Drive Destruction",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa03a10>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa011d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9d8e10>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "shredding.hard_drive"
    },
    "shredding_rates.py": {
      "filename": "shredding_rates.py",
      "classes": [
        {
          "name": "ShreddingRates",
          "bases": [
            "<ast.Attribute object at 0x76cfff9931d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff990510>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "User",
                "default": "<ast.Lambda object at 0x76cfff9e6290>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "message_ids",
              "type": "One2many",
              "attributes": {
                "string": "Messages",
                "auto_join": true
              }
            },
            {
              "name": "activity_ids",
              "type": "One2many",
              "attributes": {
                "string": "Activities",
                "auto_join": true
              }
            },
            {
              "name": "message_follower_ids",
              "type": "One2many",
              "attributes": {
                "string": "Followers",
                "auto_join": true
              }
            },
            {
              "name": "discount_percentage",
              "type": "Float",
              "attributes": {
                "string": "Discount Percentage",
                "tracking": true
              }
            },
            {
              "name": "effective_date",
              "type": "Date",
              "attributes": {
                "string": "Effective Date",
                "tracking": true
              }
            },
            {
              "name": "expiry_date",
              "type": "Date",
              "attributes": {
                "string": "Expiry Date",
                "tracking": true
              }
            },
            {
              "name": "external_per_bin_rate",
              "type": "Float",
              "attributes": {
                "string": "External Per Bin Rate",
                "digits": [
                  12,
                  2
                ],
                "tracking": true
              }
            },
            {
              "name": "external_service_call_rate",
              "type": "Float",
              "attributes": {
                "string": "External Service Call Rate",
                "digits": [
                  12,
                  2
                ],
                "tracking": true
              }
            },
            {
              "name": "managed_permanent_removal_rate",
              "type": "Float",
              "attributes": {
                "string": "Managed Permanent Removal Rate",
                "digits": [
                  12,
                  2
                ],
                "tracking": true
              }
            },
            {
              "name": "managed_retrieval_rate",
              "type": "Float",
              "attributes": {
                "string": "Managed Retrieval Rate",
                "digits": [
                  12,
                  2
                ],
                "tracking": true
              }
            },
            {
              "name": "managed_service_call_rate",
              "type": "Float",
              "attributes": {
                "string": "Managed Service Call Rate",
                "digits": [
                  12,
                  2
                ],
                "tracking": true
              }
            },
            {
              "name": "managed_shredding_rate",
              "type": "Float",
              "attributes": {
                "string": "Managed Shredding Rate",
                "digits": [
                  12,
                  2
                ],
                "tracking": true
              }
            },
            {
              "name": "partner_id",
              "type": "Many2one",
              "attributes": {
                "string": "Partner",
                "tracking": true
              }
            },
            {
              "name": "type",
              "type": "Selection",
              "attributes": {
                "string": "Type",
                "default": "standard",
                "tracking": true
              }
            },
            {
              "name": "use_custom_external_rates",
              "type": "Boolean",
              "attributes": {
                "string": "Use Custom External Rates",
                "tracking": true
              }
            },
            {
              "name": "use_custom_managed_rates",
              "type": "Boolean",
              "attributes": {
                "string": "Use Custom Managed Rates",
                "tracking": true
              }
            }
          ],
          "methods": [
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "shredding.rates",
            "_description": "Shredding Rates",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff990510>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "User",
            "default": "<ast.Lambda object at 0x76cfff9e6290>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "message_ids",
          "type": "One2many",
          "attributes": {
            "string": "Messages",
            "auto_join": true
          }
        },
        {
          "name": "activity_ids",
          "type": "One2many",
          "attributes": {
            "string": "Activities",
            "auto_join": true
          }
        },
        {
          "name": "message_follower_ids",
          "type": "One2many",
          "attributes": {
            "string": "Followers",
            "auto_join": true
          }
        },
        {
          "name": "discount_percentage",
          "type": "Float",
          "attributes": {
            "string": "Discount Percentage",
            "tracking": true
          }
        },
        {
          "name": "effective_date",
          "type": "Date",
          "attributes": {
            "string": "Effective Date",
            "tracking": true
          }
        },
        {
          "name": "expiry_date",
          "type": "Date",
          "attributes": {
            "string": "Expiry Date",
            "tracking": true
          }
        },
        {
          "name": "external_per_bin_rate",
          "type": "Float",
          "attributes": {
            "string": "External Per Bin Rate",
            "digits": [
              12,
              2
            ],
            "tracking": true
          }
        },
        {
          "name": "external_service_call_rate",
          "type": "Float",
          "attributes": {
            "string": "External Service Call Rate",
            "digits": [
              12,
              2
            ],
            "tracking": true
          }
        },
        {
          "name": "managed_permanent_removal_rate",
          "type": "Float",
          "attributes": {
            "string": "Managed Permanent Removal Rate",
            "digits": [
              12,
              2
            ],
            "tracking": true
          }
        },
        {
          "name": "managed_retrieval_rate",
          "type": "Float",
          "attributes": {
            "string": "Managed Retrieval Rate",
            "digits": [
              12,
              2
            ],
            "tracking": true
          }
        },
        {
          "name": "managed_service_call_rate",
          "type": "Float",
          "attributes": {
            "string": "Managed Service Call Rate",
            "digits": [
              12,
              2
            ],
            "tracking": true
          }
        },
        {
          "name": "managed_shredding_rate",
          "type": "Float",
          "attributes": {
            "string": "Managed Shredding Rate",
            "digits": [
              12,
              2
            ],
            "tracking": true
          }
        },
        {
          "name": "partner_id",
          "type": "Many2one",
          "attributes": {
            "string": "Partner",
            "tracking": true
          }
        },
        {
          "name": "type",
          "type": "Selection",
          "attributes": {
            "string": "Type",
            "default": "standard",
            "tracking": true
          }
        },
        {
          "name": "use_custom_external_rates",
          "type": "Boolean",
          "attributes": {
            "string": "Use Custom External Rates",
            "tracking": true
          }
        },
        {
          "name": "use_custom_managed_rates",
          "type": "Boolean",
          "attributes": {
            "string": "Use Custom Managed Rates",
            "tracking": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "shredding.rates"
    },
    "fsm_notification.py": {
      "filename": "fsm_notification.py",
      "classes": [
        {
          "name": "FsmNotificationPlaceholder",
          "bases": [
            "<ast.Attribute object at 0x76cfffa24390>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "default": "FSM Notification Placeholder"
              }
            }
          ],
          "methods": [
            {
              "name": "_log_fsm_disabled",
              "decorators": [
                "<ast.Attribute object at 0x76cfff9d82d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "fsm.notification.placeholder",
            "_description": "Placeholder for FSM Notification Manager"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "default": "FSM Notification Placeholder"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": [],
      "model_name": "fsm.notification.placeholder"
    },
    "ir_module.py": {
      "filename": "ir_module.py",
      "classes": [
        {
          "name": "IrModule",
          "bases": [
            "<ast.Attribute object at 0x76cfff9e5050>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9e7250>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9e5a50>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9ec290>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "ir.module.ext",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9e7250>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9e5a50>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9ec290>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "ir.module.ext"
    },
    "records_storage_department_user.py": {
      "filename": "records_storage_department_user.py",
      "classes": [
        {
          "name": "RecordsStorageDepartmentUser",
          "bases": [
            "<ast.Attribute object at 0x76cfff990ed0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9dd8d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9dc610>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9ed150>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.storage.department.user",
            "_description": "Storage Department User Assignment",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9dd8d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9dc610>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9ed150>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.storage.department.user"
    },
    "shredding_service_log.py": {
      "filename": "shredding_service_log.py",
      "classes": [
        {
          "name": "ShreddingServiceLog",
          "bases": [
            "<ast.Attribute object at 0x76cfffa00dd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9be310>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9be5d0>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff9beb10>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa25a90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "shredding.service.log",
            "_description": "Shredding Service Log",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9be310>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9be5d0>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff9beb10>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "shredding.service.log"
    },
    "paper_bale.py": {
      "filename": "paper_bale.py",
      "classes": [
        {
          "name": "PaperBale",
          "bases": [
            "<ast.Attribute object at 0x76cfff989750>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Bale Number",
                "required": true
              }
            },
            {
              "name": "weight",
              "type": "Float",
              "attributes": {
                "string": "Weight (kg)"
              }
            },
            {
              "name": "creation_date",
              "type": "Date",
              "attributes": {
                "string": "Creation Date",
                "default": "<ast.Attribute object at 0x76cfff993b90>"
              }
            },
            {
              "name": "load_id",
              "type": "Many2one",
              "attributes": {
                "string": "Load"
              }
            },
            {
              "name": "recycling_facility",
              "type": "Char",
              "attributes": {
                "string": "Recycling Facility"
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "default": "created"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "paper.bale",
            "_description": "Paper Bale",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Bale Number",
            "required": true
          }
        },
        {
          "name": "weight",
          "type": "Float",
          "attributes": {
            "string": "Weight (kg)"
          }
        },
        {
          "name": "creation_date",
          "type": "Date",
          "attributes": {
            "string": "Creation Date",
            "default": "<ast.Attribute object at 0x76cfff993b90>"
          }
        },
        {
          "name": "load_id",
          "type": "Many2one",
          "attributes": {
            "string": "Load"
          }
        },
        {
          "name": "recycling_facility",
          "type": "Char",
          "attributes": {
            "string": "Recycling Facility"
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "default": "created"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "paper.bale"
    },
    "records_location.py": {
      "filename": "records_location.py",
      "classes": [
        {
          "name": "RecordsLocation",
          "bases": [
            "<ast.Attribute object at 0x76cfff98a9d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Location Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "code",
              "type": "Char",
              "attributes": {
                "string": "Location Code",
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "status",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "available",
                "tracking": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9d8e10>"
              }
            },
            {
              "name": "capacity",
              "type": "Float",
              "attributes": {
                "string": "Capacity"
              }
            },
            {
              "name": "current_usage",
              "type": "Float",
              "attributes": {
                "string": "Current Usage"
              }
            },
            {
              "name": "container_ids",
              "type": "One2many",
              "attributes": {
                "string": "Containers"
              }
            }
          ],
          "methods": [
            {
              "name": "action_set_maintenance",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_set_available",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.location",
            "_description": "Records Storage Location",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Location Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "code",
          "type": "Char",
          "attributes": {
            "string": "Location Code",
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "status",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "available",
            "tracking": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9d8e10>"
          }
        },
        {
          "name": "capacity",
          "type": "Float",
          "attributes": {
            "string": "Capacity"
          }
        },
        {
          "name": "current_usage",
          "type": "Float",
          "attributes": {
            "string": "Current Usage"
          }
        },
        {
          "name": "container_ids",
          "type": "One2many",
          "attributes": {
            "string": "Containers"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.location"
    },
    "ir_actions_report.py": {
      "filename": "ir_actions_report.py",
      "classes": [
        {
          "name": "IrActionsReport",
          "bases": [
            "<ast.Attribute object at 0x76cfff993fd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa00950>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa017d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9e4b10>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "stock.report_reception_report_label",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa00950>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa017d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9e4b10>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "stock.report_reception_report_label"
    },
    "res_config_settings.py": {
      "filename": "res_config_settings.py",
      "classes": [
        {
          "name": "ResConfigSettings",
          "bases": [
            "<ast.Attribute object at 0x76cfff989890>"
          ],
          "fields": [
            {
              "name": "module_records_management_setting",
              "type": "Boolean",
              "attributes": {
                "config_parameter": "records_management.setting"
              }
            },
            {
              "name": "default_retention_period",
              "type": "Integer",
              "attributes": {
                "config_parameter": "records_management.default_retention_period",
                "default": 7
              }
            },
            {
              "name": "auto_shredding_enabled",
              "type": "Boolean",
              "attributes": {
                "config_parameter": "records_management.auto_shredding_enabled"
              }
            },
            {
              "name": "naid_compliance_enabled",
              "type": "Boolean",
              "attributes": {
                "config_parameter": "records_management.naid_compliance_enabled",
                "default": true
              }
            },
            {
              "name": "portal_feedback_enabled",
              "type": "Boolean",
              "attributes": {
                "config_parameter": "records_management.portal_feedback_enabled",
                "default": true
              }
            },
            {
              "name": "auto_billing_enabled",
              "type": "Boolean",
              "attributes": {
                "config_parameter": "records_management.auto_billing_enabled",
                "default": true
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_inherit": "res.config.settings"
          }
        }
      ],
      "fields": [],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": []
    },
    "paper_bale_recycling.py": {
      "filename": "paper_bale_recycling.py",
      "classes": [
        {
          "name": "PaperBaleRecycling",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ef9d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9ec0d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9ee950>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff9dec10>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa24750>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "paper.bale.recycling",
            "_description": "Paper Bale Recycling",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9ec0d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9ee950>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff9dec10>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "paper.bale.recycling"
    },
    "mobile_bin_key_wizard.py": {
      "filename": "mobile_bin_key_wizard.py",
      "classes": [
        {
          "name": "MobileBinKeyWizard",
          "bases": [
            "<ast.Attribute object at 0x76cfff9d5c10>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9d6f90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9d6310>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9b2a10>"
              }
            },
            {
              "name": "action_execute",
              "type": "Char",
              "attributes": {
                "string": "Action Execute"
              }
            },
            {
              "name": "action_type",
              "type": "Selection",
              "attributes": {
                "string": "Action Type"
              }
            },
            {
              "name": "billable",
              "type": "Boolean",
              "attributes": {
                "string": "Billable",
                "default": false
              }
            },
            {
              "name": "bin_locations",
              "type": "Char",
              "attributes": {
                "string": "Bin Locations"
              }
            },
            {
              "name": "code",
              "type": "Char",
              "attributes": {
                "string": "Code"
              }
            },
            {
              "name": "contact_email",
              "type": "Char",
              "attributes": {
                "string": "Contact Email"
              }
            },
            {
              "name": "contact_id",
              "type": "Many2one",
              "attributes": {
                "string": "Contact"
              }
            },
            {
              "name": "contact_mobile",
              "type": "Char",
              "attributes": {
                "string": "Contact Mobile"
              }
            },
            {
              "name": "contact_name",
              "type": "Char",
              "attributes": {
                "string": "Contact Name"
              }
            },
            {
              "name": "contact_phone",
              "type": "Char",
              "attributes": {
                "string": "Contact Phone"
              }
            },
            {
              "name": "contact_title",
              "type": "Char",
              "attributes": {
                "string": "Contact Title"
              }
            },
            {
              "name": "context",
              "type": "Char",
              "attributes": {
                "string": "Context"
              }
            },
            {
              "name": "create_new_contact",
              "type": "Char",
              "attributes": {
                "string": "Create New Contact"
              }
            },
            {
              "name": "customer_company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer Company"
              }
            },
            {
              "name": "emergency_contact",
              "type": "Char",
              "attributes": {
                "string": "Emergency Contact"
              }
            },
            {
              "name": "issue_location",
              "type": "Char",
              "attributes": {
                "string": "Issue Location"
              }
            },
            {
              "name": "items_retrieved",
              "type": "Char",
              "attributes": {
                "string": "Items Retrieved"
              }
            },
            {
              "name": "key_lookup_results",
              "type": "Char",
              "attributes": {
                "string": "Key Lookup Results"
              }
            },
            {
              "name": "key_notes",
              "type": "Char",
              "attributes": {
                "string": "Key Notes"
              }
            },
            {
              "name": "photo_ids",
              "type": "One2many",
              "attributes": {
                "string": "Photo Ids"
              }
            },
            {
              "name": "res_model",
              "type": "Char",
              "attributes": {
                "string": "Res Model"
              }
            },
            {
              "name": "service_notes",
              "type": "Char",
              "attributes": {
                "string": "Service Notes"
              }
            },
            {
              "name": "show_contact_creation",
              "type": "Char",
              "attributes": {
                "string": "Show Contact Creation"
              }
            },
            {
              "name": "show_key_assignment",
              "type": "Char",
              "attributes": {
                "string": "Show Key Assignment"
              }
            },
            {
              "name": "show_lookup_results",
              "type": "Char",
              "attributes": {
                "string": "Show Lookup Results"
              }
            },
            {
              "name": "show_unlock_service",
              "type": "Char",
              "attributes": {
                "string": "Show Unlock Service"
              }
            },
            {
              "name": "target",
              "type": "Char",
              "attributes": {
                "string": "Target"
              }
            },
            {
              "name": "unlock_bin_location",
              "type": "Char",
              "attributes": {
                "string": "Unlock Bin Location"
              }
            },
            {
              "name": "unlock_charge",
              "type": "Char",
              "attributes": {
                "string": "Unlock Charge"
              }
            },
            {
              "name": "unlock_reason",
              "type": "Char",
              "attributes": {
                "string": "Unlock Reason"
              }
            },
            {
              "name": "unlock_reason_description",
              "type": "Char",
              "attributes": {
                "string": "Unlock Reason Description"
              }
            },
            {
              "name": "view_mode",
              "type": "Char",
              "attributes": {
                "string": "View Mode"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_execute",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "mobile.bin.key.wizard",
            "_description": "Mobile Bin Key Management Wizard",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9d6f90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9d6310>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9b2a10>"
          }
        },
        {
          "name": "action_execute",
          "type": "Char",
          "attributes": {
            "string": "Action Execute"
          }
        },
        {
          "name": "action_type",
          "type": "Selection",
          "attributes": {
            "string": "Action Type"
          }
        },
        {
          "name": "billable",
          "type": "Boolean",
          "attributes": {
            "string": "Billable",
            "default": false
          }
        },
        {
          "name": "bin_locations",
          "type": "Char",
          "attributes": {
            "string": "Bin Locations"
          }
        },
        {
          "name": "code",
          "type": "Char",
          "attributes": {
            "string": "Code"
          }
        },
        {
          "name": "contact_email",
          "type": "Char",
          "attributes": {
            "string": "Contact Email"
          }
        },
        {
          "name": "contact_id",
          "type": "Many2one",
          "attributes": {
            "string": "Contact"
          }
        },
        {
          "name": "contact_mobile",
          "type": "Char",
          "attributes": {
            "string": "Contact Mobile"
          }
        },
        {
          "name": "contact_name",
          "type": "Char",
          "attributes": {
            "string": "Contact Name"
          }
        },
        {
          "name": "contact_phone",
          "type": "Char",
          "attributes": {
            "string": "Contact Phone"
          }
        },
        {
          "name": "contact_title",
          "type": "Char",
          "attributes": {
            "string": "Contact Title"
          }
        },
        {
          "name": "context",
          "type": "Char",
          "attributes": {
            "string": "Context"
          }
        },
        {
          "name": "create_new_contact",
          "type": "Char",
          "attributes": {
            "string": "Create New Contact"
          }
        },
        {
          "name": "customer_company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer Company"
          }
        },
        {
          "name": "emergency_contact",
          "type": "Char",
          "attributes": {
            "string": "Emergency Contact"
          }
        },
        {
          "name": "issue_location",
          "type": "Char",
          "attributes": {
            "string": "Issue Location"
          }
        },
        {
          "name": "items_retrieved",
          "type": "Char",
          "attributes": {
            "string": "Items Retrieved"
          }
        },
        {
          "name": "key_lookup_results",
          "type": "Char",
          "attributes": {
            "string": "Key Lookup Results"
          }
        },
        {
          "name": "key_notes",
          "type": "Char",
          "attributes": {
            "string": "Key Notes"
          }
        },
        {
          "name": "photo_ids",
          "type": "One2many",
          "attributes": {
            "string": "Photo Ids"
          }
        },
        {
          "name": "res_model",
          "type": "Char",
          "attributes": {
            "string": "Res Model"
          }
        },
        {
          "name": "service_notes",
          "type": "Char",
          "attributes": {
            "string": "Service Notes"
          }
        },
        {
          "name": "show_contact_creation",
          "type": "Char",
          "attributes": {
            "string": "Show Contact Creation"
          }
        },
        {
          "name": "show_key_assignment",
          "type": "Char",
          "attributes": {
            "string": "Show Key Assignment"
          }
        },
        {
          "name": "show_lookup_results",
          "type": "Char",
          "attributes": {
            "string": "Show Lookup Results"
          }
        },
        {
          "name": "show_unlock_service",
          "type": "Char",
          "attributes": {
            "string": "Show Unlock Service"
          }
        },
        {
          "name": "target",
          "type": "Char",
          "attributes": {
            "string": "Target"
          }
        },
        {
          "name": "unlock_bin_location",
          "type": "Char",
          "attributes": {
            "string": "Unlock Bin Location"
          }
        },
        {
          "name": "unlock_charge",
          "type": "Char",
          "attributes": {
            "string": "Unlock Charge"
          }
        },
        {
          "name": "unlock_reason",
          "type": "Char",
          "attributes": {
            "string": "Unlock Reason"
          }
        },
        {
          "name": "unlock_reason_description",
          "type": "Char",
          "attributes": {
            "string": "Unlock Reason Description"
          }
        },
        {
          "name": "view_mode",
          "type": "Char",
          "attributes": {
            "string": "View Mode"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "mobile.bin.key.wizard"
    },
    "photo.py": {
      "filename": "photo.py",
      "classes": [
        {
          "name": "Photo",
          "bases": [
            "<ast.Attribute object at 0x76cfff9b1690>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Photo Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "image",
              "type": "Binary",
              "attributes": {
                "string": "Photo",
                "required": true
              }
            },
            {
              "name": "filename",
              "type": "Char",
              "attributes": {
                "string": "Filename"
              }
            },
            {
              "name": "mobile_bin_key_wizard_id",
              "type": "Many2one",
              "attributes": {
                "string": "Mobile Bin Key Wizard",
                "ondelete": "cascade"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Uploaded By",
                "default": "<ast.Lambda object at 0x76cfff9ec450>",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Upload Date",
                "default": "<ast.Attribute object at 0x76cfff9ed3d0>",
                "required": true
              }
            },
            {
              "name": "photo_type",
              "type": "Selection",
              "attributes": {
                "string": "Photo Type",
                "default": "documentation"
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa03ad0>",
                "required": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9e7810>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "photo",
            "_description": "Photo Attachment",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "date_created desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Photo Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "image",
          "type": "Binary",
          "attributes": {
            "string": "Photo",
            "required": true
          }
        },
        {
          "name": "filename",
          "type": "Char",
          "attributes": {
            "string": "Filename"
          }
        },
        {
          "name": "mobile_bin_key_wizard_id",
          "type": "Many2one",
          "attributes": {
            "string": "Mobile Bin Key Wizard",
            "ondelete": "cascade"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Uploaded By",
            "default": "<ast.Lambda object at 0x76cfff9ec450>",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Upload Date",
            "default": "<ast.Attribute object at 0x76cfff9ed3d0>",
            "required": true
          }
        },
        {
          "name": "photo_type",
          "type": "Selection",
          "attributes": {
            "string": "Photo Type",
            "default": "documentation"
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa03ad0>",
            "required": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "photo"
    },
    "scrm_records_management.py": {
      "filename": "scrm_records_management.py",
      "classes": [
        {
          "name": "ScrmRecordsManagement",
          "bases": [
            "<ast.Attribute object at 0x76cfff9b1450>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9b1f90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9b06d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa0b950>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "scrm.records.management",
            "_description": "SCRM Records Management",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9b1f90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9b06d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa0b950>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "scrm.records.management"
    },
    "billing_models.py": {
      "filename": "billing_models.py",
      "classes": [
        {
          "name": "RecordsBillingConfig",
          "bases": [
            "<ast.Attribute object at 0x76cfff9b1010>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa263d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa24890>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9ed810>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.billing.config",
            "_description": "Records Billing Configuration",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa263d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa24890>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9ed810>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.billing.config"
    },
    "records_location_inspection.py": {
      "filename": "records_location_inspection.py",
      "classes": [
        {
          "name": "RecordsLocationInspection",
          "bases": [
            "<ast.Attribute object at 0x76cfffa094d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa09510>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa09810>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa0ae50>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.location.inspection",
            "_description": "Records Location Inspection",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa09510>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa09810>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa0ae50>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.location.inspection"
    },
    "records_digital_scan.py": {
      "filename": "records_digital_scan.py",
      "classes": [
        {
          "name": "RecordsDigitalScan",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ded90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9de590>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9de490>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa03c90>"
              }
            },
            {
              "name": "document_id",
              "type": "Many2one",
              "attributes": {
                "string": "Document",
                "required": true
              }
            },
            {
              "name": "scan_date",
              "type": "Datetime",
              "attributes": {
                "string": "Scan Date",
                "default": "<ast.Attribute object at 0x76cfff9d7d50>"
              }
            },
            {
              "name": "file_format",
              "type": "Selection",
              "attributes": {
                "string": "File Format",
                "default": "pdf"
              }
            },
            {
              "name": "resolution",
              "type": "Integer",
              "attributes": {
                "string": "Resolution (DPI)",
                "default": 300
              }
            },
            {
              "name": "file_size",
              "type": "Float",
              "attributes": {
                "string": "File Size (MB)"
              }
            },
            {
              "name": "scan_quality",
              "type": "Selection",
              "attributes": {
                "string": "Scan Quality",
                "default": "normal"
              }
            },
            {
              "name": "scanner_id",
              "type": "Char",
              "attributes": {
                "string": "Scanner ID"
              }
            },
            {
              "name": "scanned_by",
              "type": "Many2one",
              "attributes": {
                "string": "Scanned By",
                "default": "<ast.Lambda object at 0x76cfff9be9d0>"
              }
            },
            {
              "name": "action_confirm",
              "type": "Char",
              "attributes": {
                "string": "Action Confirm"
              }
            },
            {
              "name": "action_done",
              "type": "Char",
              "attributes": {
                "string": "Action Done"
              }
            },
            {
              "name": "activity_ids",
              "type": "One2many",
              "attributes": {
                "string": "Activities",
                "auto_join": true
              }
            },
            {
              "name": "confirmed",
              "type": "Boolean",
              "attributes": {
                "string": "Confirmed",
                "default": false
              }
            },
            {
              "name": "done",
              "type": "Char",
              "attributes": {
                "string": "Done"
              }
            },
            {
              "name": "draft",
              "type": "Char",
              "attributes": {
                "string": "Draft"
              }
            },
            {
              "name": "group_document",
              "type": "Char",
              "attributes": {
                "string": "Group Document"
              }
            },
            {
              "name": "group_format",
              "type": "Char",
              "attributes": {
                "string": "Group Format"
              }
            },
            {
              "name": "group_scanned_by",
              "type": "Char",
              "attributes": {
                "string": "Group Scanned By"
              }
            },
            {
              "name": "group_state",
              "type": "Selection",
              "attributes": {
                "string": "Group State"
              }
            },
            {
              "name": "help",
              "type": "Char",
              "attributes": {
                "string": "Help"
              }
            },
            {
              "name": "message_follower_ids",
              "type": "One2many",
              "attributes": {
                "string": "Followers",
                "auto_join": true
              }
            },
            {
              "name": "message_ids",
              "type": "One2many",
              "attributes": {
                "string": "Messages",
                "auto_join": true
              }
            },
            {
              "name": "my_scans",
              "type": "Char",
              "attributes": {
                "string": "My Scans"
              }
            },
            {
              "name": "res_model",
              "type": "Char",
              "attributes": {
                "string": "Res Model"
              }
            },
            {
              "name": "search_view_id",
              "type": "Many2one",
              "attributes": {
                "string": "Search View"
              }
            },
            {
              "name": "view_mode",
              "type": "Char",
              "attributes": {
                "string": "View Mode"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "records.digital.scan",
            "_description": "Digital Scan of Document",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9de590>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9de490>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa03c90>"
          }
        },
        {
          "name": "document_id",
          "type": "Many2one",
          "attributes": {
            "string": "Document",
            "required": true
          }
        },
        {
          "name": "scan_date",
          "type": "Datetime",
          "attributes": {
            "string": "Scan Date",
            "default": "<ast.Attribute object at 0x76cfff9d7d50>"
          }
        },
        {
          "name": "file_format",
          "type": "Selection",
          "attributes": {
            "string": "File Format",
            "default": "pdf"
          }
        },
        {
          "name": "resolution",
          "type": "Integer",
          "attributes": {
            "string": "Resolution (DPI)",
            "default": 300
          }
        },
        {
          "name": "file_size",
          "type": "Float",
          "attributes": {
            "string": "File Size (MB)"
          }
        },
        {
          "name": "scan_quality",
          "type": "Selection",
          "attributes": {
            "string": "Scan Quality",
            "default": "normal"
          }
        },
        {
          "name": "scanner_id",
          "type": "Char",
          "attributes": {
            "string": "Scanner ID"
          }
        },
        {
          "name": "scanned_by",
          "type": "Many2one",
          "attributes": {
            "string": "Scanned By",
            "default": "<ast.Lambda object at 0x76cfff9be9d0>"
          }
        },
        {
          "name": "action_confirm",
          "type": "Char",
          "attributes": {
            "string": "Action Confirm"
          }
        },
        {
          "name": "action_done",
          "type": "Char",
          "attributes": {
            "string": "Action Done"
          }
        },
        {
          "name": "activity_ids",
          "type": "One2many",
          "attributes": {
            "string": "Activities",
            "auto_join": true
          }
        },
        {
          "name": "confirmed",
          "type": "Boolean",
          "attributes": {
            "string": "Confirmed",
            "default": false
          }
        },
        {
          "name": "done",
          "type": "Char",
          "attributes": {
            "string": "Done"
          }
        },
        {
          "name": "draft",
          "type": "Char",
          "attributes": {
            "string": "Draft"
          }
        },
        {
          "name": "group_document",
          "type": "Char",
          "attributes": {
            "string": "Group Document"
          }
        },
        {
          "name": "group_format",
          "type": "Char",
          "attributes": {
            "string": "Group Format"
          }
        },
        {
          "name": "group_scanned_by",
          "type": "Char",
          "attributes": {
            "string": "Group Scanned By"
          }
        },
        {
          "name": "group_state",
          "type": "Selection",
          "attributes": {
            "string": "Group State"
          }
        },
        {
          "name": "help",
          "type": "Char",
          "attributes": {
            "string": "Help"
          }
        },
        {
          "name": "message_follower_ids",
          "type": "One2many",
          "attributes": {
            "string": "Followers",
            "auto_join": true
          }
        },
        {
          "name": "message_ids",
          "type": "One2many",
          "attributes": {
            "string": "Messages",
            "auto_join": true
          }
        },
        {
          "name": "my_scans",
          "type": "Char",
          "attributes": {
            "string": "My Scans"
          }
        },
        {
          "name": "res_model",
          "type": "Char",
          "attributes": {
            "string": "Res Model"
          }
        },
        {
          "name": "search_view_id",
          "type": "Many2one",
          "attributes": {
            "string": "Search View"
          }
        },
        {
          "name": "view_mode",
          "type": "Char",
          "attributes": {
            "string": "View Mode"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.digital.scan"
    },
    "bin_unlock_service.py": {
      "filename": "bin_unlock_service.py",
      "classes": [
        {
          "name": "BinUnlockService",
          "bases": [
            "<ast.Attribute object at 0x76cfff9eb310>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9ea690>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa24d10>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa25510>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa0b6d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "bin.unlock.service",
            "_description": "Bin Unlock Service",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9ea690>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa24d10>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa25510>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "bin.unlock.service"
    },
    "destruction_item.py": {
      "filename": "destruction_item.py",
      "classes": [
        {
          "name": "DestructionItem",
          "bases": [
            "<ast.Attribute object at 0x76cfff9b1350>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9968d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9a6610>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff98b590>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9befd0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "destruction.item",
            "_description": "Destruction Item",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9968d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9a6610>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff98b590>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "destruction.item"
    },
    "naid_custody.py": {
      "filename": "naid_custody.py",
      "classes": [
        {
          "name": "NAIDChainOfCustody",
          "bases": [
            "<ast.Attribute object at 0x76cfff9edbd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff993990>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa27610>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d6ad0>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "naid.chain.custody",
            "_description": "NAID Chain of Custody",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff993990>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa27610>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9d6ad0>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.chain.custody"
    },
    "naid_audit.py": {
      "filename": "naid_audit.py",
      "classes": [
        {
          "name": "NAIDAuditLog",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ce650>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9cea90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9cd710>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff994950>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "naid.audit.log",
            "_description": "NAID AAA Compliance Audit Log",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9cea90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9cd710>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff994950>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.audit.log"
    },
    "container_contents.py": {
      "filename": "container_contents.py",
      "classes": [
        {
          "name": "ContainerContents",
          "bases": [
            "<ast.Attribute object at 0x76cfff9d7c50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa256d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa266d0>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff9b07d0>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9ee650>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "container.contents",
            "_description": "Container Contents",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa256d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa266d0>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff9b07d0>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "container.contents"
    },
    "stock_lot.py": {
      "filename": "stock_lot.py",
      "classes": [
        {
          "name": "StockLot",
          "bases": [
            "<ast.Attribute object at 0x76cfffa09cd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9d93d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9ced50>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9a6990>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "stock.lot.attribute",
            "_description": "Stock Lot Attribute",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9d93d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9ced50>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9a6990>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "stock.lot.attribute"
    },
    "product.py": {
      "filename": "product.py",
      "classes": [
        {
          "name": "ProductTemplate",
          "bases": [
            "<ast.Attribute object at 0x76cfffa09410>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9df2d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9bef10>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9b0610>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "prod.ext",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9df2d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9bef10>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9b0610>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "prod.ext"
    },
    "shredding_inventory.py": {
      "filename": "shredding_inventory.py",
      "classes": [
        {
          "name": "ShreddingInventoryItem",
          "bases": [
            "<ast.Attribute object at 0x76cfff9a6750>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9ec3d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9ef790>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d6fd0>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "shredding.inventory.item",
            "_description": "Shredding Inventory Item",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        },
        {
          "name": "ShreddingPicklistItem",
          "bases": [
            "<ast.Attribute object at 0x76cfff9d4c90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa0b250>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff994dd0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9e82d0>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "shredding.picklist.item",
            "_description": "Shredding Picklist Item",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa0b250>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff994dd0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9e82d0>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "shredding.picklist.item"
    },
    "paper_load_shipment.py": {
      "filename": "paper_load_shipment.py",
      "classes": [
        {
          "name": "PaperLoadShipment",
          "bases": [
            "<ast.Attribute object at 0x76cfffa33d50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa32a90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa31e10>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa32c10>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa08dd0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "paper.load.shipment",
            "_description": "Paper Load Shipment",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa32a90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa31e10>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa32c10>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "paper.load.shipment"
    },
    "shredding_bin_models.py": {
      "filename": "shredding_bin_models.py",
      "classes": [
        {
          "name": "ShreddingBin",
          "bases": [
            "<ast.Attribute object at 0x76cfff996c50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa08e10>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa03710>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9eef10>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "shredding.bin",
            "_description": "Shredding Bin",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa08e10>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa03710>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9eef10>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "shredding.bin"
    },
    "bale.py": {
      "filename": "bale.py",
      "classes": [
        {
          "name": "Bale",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ce290>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9e6c90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9bf150>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa256d0>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records_management.bale",
            "_description": "Shredded Paper Bale",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9e6c90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9bf150>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa256d0>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records_management.bale"
    },
    "billing.py": {
      "filename": "billing.py",
      "classes": [
        {
          "name": "Billing",
          "bases": [
            "<ast.Attribute object at 0x76cfffa070d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Billing Reference",
                "required": true,
                "tracking": true,
                "default": "<ast.Lambda object at 0x76cfffa06910>"
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa06550>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Billing Manager",
                "default": "<ast.Lambda object at 0x76cfffa05e10>",
                "tracking": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "partner_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "department_id",
              "type": "Many2one",
              "attributes": {
                "string": "Department",
                "tracking": true
              }
            },
            {
              "name": "invoice_date",
              "type": "Date",
              "attributes": {
                "string": "Invoice Date",
                "default": "<ast.Attribute object at 0x76cfffa04690>",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "due_date",
              "type": "Date",
              "attributes": {
                "string": "Due Date",
                "tracking": true
              }
            },
            {
              "name": "period_start",
              "type": "Date",
              "attributes": {
                "string": "Billing Period Start",
                "tracking": true
              }
            },
            {
              "name": "period_end",
              "type": "Date",
              "attributes": {
                "string": "Billing Period End",
                "tracking": true
              }
            },
            {
              "name": "subtotal",
              "type": "Float",
              "attributes": {
                "string": "Subtotal",
                "tracking": true
              }
            },
            {
              "name": "tax_amount",
              "type": "Float",
              "attributes": {
                "string": "Tax Amount",
                "tracking": true
              }
            },
            {
              "name": "total_amount",
              "type": "Float",
              "attributes": {
                "string": "Total Amount",
                "compute": "_compute_total_amount",
                "store": true,
                "tracking": true
              }
            },
            {
              "name": "paid_amount",
              "type": "Float",
              "attributes": {
                "string": "Paid Amount",
                "tracking": true
              }
            },
            {
              "name": "balance_due",
              "type": "Float",
              "attributes": {
                "string": "Balance Due",
                "compute": "_compute_balance_due",
                "store": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "billing_type",
              "type": "Selection",
              "attributes": {
                "string": "Billing Type",
                "default": "monthly",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "invoice_id",
              "type": "Many2one",
              "attributes": {
                "string": "Related Invoice",
                "tracking": true
              }
            },
            {
              "name": "service_ids",
              "type": "One2many",
              "attributes": {
                "string": "Billing Services"
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes",
                "tracking": true
              }
            },
            {
              "name": "internal_notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "discount_amount",
              "type": "Float",
              "attributes": {
                "string": "Discount Amount",
                "default": 0.0,
                "help": "Discount amount"
              }
            },
            {
              "name": "payment_status",
              "type": "Char",
              "attributes": {
                "string": "Payment Status",
                "help": "Payment status"
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_total_amount",
              "decorators": [
                "<ast.Call object at 0x76cfff9d5ad0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_balance_due",
              "decorators": [
                "<ast.Call object at 0x76cfff9d5d50>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_onchange_partner_id",
              "decorators": [
                "<ast.Call object at 0x76cfff9e9690>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_onchange_billing_period",
              "decorators": [
                "<ast.Call object at 0x76cfff9eab10>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_send_invoice",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_mark_paid",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [
                "<ast.Attribute object at 0x76cfffa58990>"
              ],
              "args": [
                "self",
                "vals_list"
              ],
              "returns": null
            },
            {
              "name": "_check_amounts",
              "decorators": [
                "<ast.Call object at 0x76cfffa5a790>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_billing_period",
              "decorators": [
                "<ast.Call object at 0x76cfffa5bd50>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.billing",
            "_description": "General Billing Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "invoice_date desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Billing Reference",
            "required": true,
            "tracking": true,
            "default": "<ast.Lambda object at 0x76cfffa06910>"
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa06550>",
            "required": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Billing Manager",
            "default": "<ast.Lambda object at 0x76cfffa05e10>",
            "tracking": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "partner_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "department_id",
          "type": "Many2one",
          "attributes": {
            "string": "Department",
            "tracking": true
          }
        },
        {
          "name": "invoice_date",
          "type": "Date",
          "attributes": {
            "string": "Invoice Date",
            "default": "<ast.Attribute object at 0x76cfffa04690>",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "due_date",
          "type": "Date",
          "attributes": {
            "string": "Due Date",
            "tracking": true
          }
        },
        {
          "name": "period_start",
          "type": "Date",
          "attributes": {
            "string": "Billing Period Start",
            "tracking": true
          }
        },
        {
          "name": "period_end",
          "type": "Date",
          "attributes": {
            "string": "Billing Period End",
            "tracking": true
          }
        },
        {
          "name": "subtotal",
          "type": "Float",
          "attributes": {
            "string": "Subtotal",
            "tracking": true
          }
        },
        {
          "name": "tax_amount",
          "type": "Float",
          "attributes": {
            "string": "Tax Amount",
            "tracking": true
          }
        },
        {
          "name": "total_amount",
          "type": "Float",
          "attributes": {
            "string": "Total Amount",
            "compute": "_compute_total_amount",
            "store": true,
            "tracking": true
          }
        },
        {
          "name": "paid_amount",
          "type": "Float",
          "attributes": {
            "string": "Paid Amount",
            "tracking": true
          }
        },
        {
          "name": "balance_due",
          "type": "Float",
          "attributes": {
            "string": "Balance Due",
            "compute": "_compute_balance_due",
            "store": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "billing_type",
          "type": "Selection",
          "attributes": {
            "string": "Billing Type",
            "default": "monthly",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "invoice_id",
          "type": "Many2one",
          "attributes": {
            "string": "Related Invoice",
            "tracking": true
          }
        },
        {
          "name": "service_ids",
          "type": "One2many",
          "attributes": {
            "string": "Billing Services"
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes",
            "tracking": true
          }
        },
        {
          "name": "internal_notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "discount_amount",
          "type": "Float",
          "attributes": {
            "string": "Discount Amount",
            "default": 0.0,
            "help": "Discount amount"
          }
        },
        {
          "name": "payment_status",
          "type": "Char",
          "attributes": {
            "string": "Payment Status",
            "help": "Payment status"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.billing"
    },
    "res_partner_key_restriction.py": {
      "filename": "res_partner_key_restriction.py",
      "classes": [
        {
          "name": "ResPartnerKeyRestriction",
          "bases": [
            "<ast.Attribute object at 0x76cfff82be50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff82aed0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff82a750>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa07d90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "res.partner.key.restriction",
            "_description": "Res Partner Key Restriction",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff82aed0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff82a750>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "res.partner.key.restriction"
    },
    "naid_audit_log.py": {
      "filename": "naid_audit_log.py",
      "classes": [
        {
          "name": "NAIDAuditLog",
          "bases": [
            "<ast.Attribute object at 0x76cfff9b3190>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa33e90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa339d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa30490>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "naid.audit.log",
            "_description": "NAID Audit Log",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa33e90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa339d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa30490>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.audit.log"
    },
    "fsm_task.py": {
      "filename": "fsm_task.py",
      "classes": [
        {
          "name": "FsmTaskPlaceholder",
          "bases": [
            "<ast.Attribute object at 0x76cfff9d5c50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "default": "FSM Task Placeholder"
              }
            }
          ],
          "methods": [
            {
              "name": "_log_fsm_disabled",
              "decorators": [
                "<ast.Attribute object at 0x76cfff9d6b90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "fsm.task.placeholder",
            "_description": "Placeholder for FSM Task Extensions"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "default": "FSM Task Placeholder"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": [],
      "model_name": "fsm.task.placeholder"
    },
    "records_approval_workflow.py": {
      "filename": "records_approval_workflow.py",
      "classes": [
        {
          "name": "RecordsApprovalWorkflow",
          "bases": [
            "<ast.Attribute object at 0x76cfffa320d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa32390>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa31950>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d6e90>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.approval.workflow",
            "_description": "Records Approval Workflow",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa32390>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa31950>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9d6e90>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.approval.workflow"
    },
    "visitor.py": {
      "filename": "visitor.py",
      "classes": [
        {
          "name": "Visitor",
          "bases": [
            "<ast.Attribute object at 0x76cfffa04510>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Visitor Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Visit Details",
                "tracking": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa06410>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Host/Escort",
                "default": "<ast.Lambda object at 0x76cfffa07010>",
                "tracking": true
              }
            },
            {
              "name": "visitor_company",
              "type": "Char",
              "attributes": {
                "string": "Visitor Company",
                "tracking": true
              }
            },
            {
              "name": "phone",
              "type": "Char",
              "attributes": {
                "string": "Phone Number",
                "tracking": true
              }
            },
            {
              "name": "email",
              "type": "Char",
              "attributes": {
                "string": "Email",
                "tracking": true
              }
            },
            {
              "name": "id_type",
              "type": "Selection",
              "attributes": {
                "string": "ID Type",
                "tracking": true
              }
            },
            {
              "name": "id_number",
              "type": "Char",
              "attributes": {
                "string": "ID Number",
                "tracking": true
              }
            },
            {
              "name": "visit_date",
              "type": "Date",
              "attributes": {
                "string": "Visit Date",
                "default": "<ast.Attribute object at 0x76cfffa5b010>",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "check_in_time",
              "type": "Datetime",
              "attributes": {
                "string": "Check-in Time",
                "tracking": true
              }
            },
            {
              "name": "check_out_time",
              "type": "Datetime",
              "attributes": {
                "string": "Check-out Time",
                "tracking": true
              }
            },
            {
              "name": "visit_purpose",
              "type": "Selection",
              "attributes": {
                "string": "Visit Purpose",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "areas_accessed",
              "type": "Text",
              "attributes": {
                "string": "Areas Accessed",
                "tracking": true
              }
            },
            {
              "name": "escort_required",
              "type": "Boolean",
              "attributes": {
                "string": "Escort Required",
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "escort_assigned",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned Escort",
                "tracking": true
              }
            },
            {
              "name": "status",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "scheduled",
                "tracking": true,
                "required": true
              }
            },
            {
              "name": "customer_id",
              "type": "Many2one",
              "attributes": {
                "string": "Related Customer",
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ],
                "tracking": true
              }
            },
            {
              "name": "background_check",
              "type": "Boolean",
              "attributes": {
                "string": "Background Check Required",
                "tracking": true
              }
            },
            {
              "name": "background_check_passed",
              "type": "Boolean",
              "attributes": {
                "string": "Background Check Passed",
                "tracking": true
              }
            },
            {
              "name": "safety_briefing",
              "type": "Boolean",
              "attributes": {
                "string": "Safety Briefing Given",
                "tracking": true
              }
            },
            {
              "name": "badge_number",
              "type": "Char",
              "attributes": {
                "string": "Visitor Badge Number",
                "tracking": true
              }
            },
            {
              "name": "badge_returned",
              "type": "Boolean",
              "attributes": {
                "string": "Badge Returned",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Visit Notes",
                "tracking": true
              }
            },
            {
              "name": "security_notes",
              "type": "Text",
              "attributes": {
                "string": "Security Notes",
                "tracking": true
              }
            }
          ],
          "methods": [
            {
              "name": "action_check_in",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_enter_facility",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_check_out",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_mark_no_show",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_visit_times",
              "decorators": [
                "<ast.Call object at 0x76cfffa2b450>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "visitor",
            "_description": "Visitor",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "visit_date desc, name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Visitor Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Visit Details",
            "tracking": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa06410>",
            "required": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Host/Escort",
            "default": "<ast.Lambda object at 0x76cfffa07010>",
            "tracking": true
          }
        },
        {
          "name": "visitor_company",
          "type": "Char",
          "attributes": {
            "string": "Visitor Company",
            "tracking": true
          }
        },
        {
          "name": "phone",
          "type": "Char",
          "attributes": {
            "string": "Phone Number",
            "tracking": true
          }
        },
        {
          "name": "email",
          "type": "Char",
          "attributes": {
            "string": "Email",
            "tracking": true
          }
        },
        {
          "name": "id_type",
          "type": "Selection",
          "attributes": {
            "string": "ID Type",
            "tracking": true
          }
        },
        {
          "name": "id_number",
          "type": "Char",
          "attributes": {
            "string": "ID Number",
            "tracking": true
          }
        },
        {
          "name": "visit_date",
          "type": "Date",
          "attributes": {
            "string": "Visit Date",
            "default": "<ast.Attribute object at 0x76cfffa5b010>",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "check_in_time",
          "type": "Datetime",
          "attributes": {
            "string": "Check-in Time",
            "tracking": true
          }
        },
        {
          "name": "check_out_time",
          "type": "Datetime",
          "attributes": {
            "string": "Check-out Time",
            "tracking": true
          }
        },
        {
          "name": "visit_purpose",
          "type": "Selection",
          "attributes": {
            "string": "Visit Purpose",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "areas_accessed",
          "type": "Text",
          "attributes": {
            "string": "Areas Accessed",
            "tracking": true
          }
        },
        {
          "name": "escort_required",
          "type": "Boolean",
          "attributes": {
            "string": "Escort Required",
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "escort_assigned",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned Escort",
            "tracking": true
          }
        },
        {
          "name": "status",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "scheduled",
            "tracking": true,
            "required": true
          }
        },
        {
          "name": "customer_id",
          "type": "Many2one",
          "attributes": {
            "string": "Related Customer",
            "domain": [
              [
                "is_company",
                "=",
                true
              ]
            ],
            "tracking": true
          }
        },
        {
          "name": "background_check",
          "type": "Boolean",
          "attributes": {
            "string": "Background Check Required",
            "tracking": true
          }
        },
        {
          "name": "background_check_passed",
          "type": "Boolean",
          "attributes": {
            "string": "Background Check Passed",
            "tracking": true
          }
        },
        {
          "name": "safety_briefing",
          "type": "Boolean",
          "attributes": {
            "string": "Safety Briefing Given",
            "tracking": true
          }
        },
        {
          "name": "badge_number",
          "type": "Char",
          "attributes": {
            "string": "Visitor Badge Number",
            "tracking": true
          }
        },
        {
          "name": "badge_returned",
          "type": "Boolean",
          "attributes": {
            "string": "Badge Returned",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Visit Notes",
            "tracking": true
          }
        },
        {
          "name": "security_notes",
          "type": "Text",
          "attributes": {
            "string": "Security Notes",
            "tracking": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "visitor"
    },
    "survey_feedback_theme.py": {
      "filename": "survey_feedback_theme.py",
      "classes": [
        {
          "name": "SurveyFeedbackTheme",
          "bases": [
            "<ast.Attribute object at 0x76cfff82bcd0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9d4dd0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa31510>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa33790>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "survey.feedback.theme",
            "_description": "Survey Feedback Theme",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9d4dd0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa31510>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa33790>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "survey.feedback.theme"
    },
    "portal_request.py": {
      "filename": "portal_request.py",
      "classes": [
        {
          "name": "PortalRequest",
          "bases": [
            "<ast.Attribute object at 0x76cfffa09590>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa50a10>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa51950>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa51750>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9a49d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "portal.request",
            "_description": "Portal Request",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa50a10>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa51950>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa51750>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "portal.request"
    },
    "shredding_service.py": {
      "filename": "shredding_service.py",
      "classes": [
        {
          "name": "ShreddingService",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ded90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa294d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa2bed0>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa2b0d0>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "service_type",
              "type": "Selection",
              "attributes": {
                "string": "Service Type",
                "required": true,
                "default": "on_site",
                "tracking": true
              }
            },
            {
              "name": "shredding_method",
              "type": "Selection",
              "attributes": {
                "string": "Shredding Method",
                "default": "strip_cut",
                "tracking": true
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa06250>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "shredding.service",
            "_description": "Shredding Service",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa294d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa2bed0>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa2b0d0>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "service_type",
          "type": "Selection",
          "attributes": {
            "string": "Service Type",
            "required": true,
            "default": "on_site",
            "tracking": true
          }
        },
        {
          "name": "shredding_method",
          "type": "Selection",
          "attributes": {
            "string": "Shredding Method",
            "default": "strip_cut",
            "tracking": true
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "shredding.service"
    },
    "naid_performance_history.py": {
      "filename": "naid_performance_history.py",
      "classes": [
        {
          "name": "NAIDPerformanceHistory",
          "bases": [
            "<ast.Attribute object at 0x76cfff9cd190>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9be110>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa018d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9a6450>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "naid.performance.history",
            "_description": "NAID Performance History",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9be110>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa018d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9a6450>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.performance.history"
    },
    "work_order_shredding.py": {
      "filename": "work_order_shredding.py",
      "classes": [
        {
          "name": "WorkOrderShredding",
          "bases": [
            "<ast.Attribute object at 0x76cfff9dfc50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff82ae50>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Work Order Manager",
                "default": "<ast.Lambda object at 0x76cfff8283d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "customer_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer",
                "tracking": true,
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ]
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa05e90>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "work.order.shredding",
            "_description": "Shredding Work Order",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff82ae50>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Work Order Manager",
            "default": "<ast.Lambda object at 0x76cfff8283d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "customer_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer",
            "tracking": true,
            "domain": [
              [
                "is_company",
                "=",
                true
              ]
            ]
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa05e90>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "work.order.shredding"
    },
    "hr_employee_naid.py": {
      "filename": "hr_employee_naid.py",
      "classes": [
        {
          "name": "HREmployeeNAID",
          "bases": [
            "<ast.Attribute object at 0x76cfff9e7790>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9cca90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9be950>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa32790>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "hr.emp.naid",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9cca90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9be950>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa32790>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "hr.emp.naid"
    },
    "records_security_audit.py": {
      "filename": "records_security_audit.py",
      "classes": [
        {
          "name": "RecordsSecurityAudit",
          "bases": [
            "<ast.Attribute object at 0x76cfffa24890>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff82a010>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff82ad90>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9de110>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.security.audit",
            "_description": "Records Security Audit",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff82a010>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff82ad90>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9de110>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.security.audit"
    },
    "records_retention_policy.py": {
      "filename": "records_retention_policy.py",
      "classes": [
        {
          "name": "RecordsRetentionPolicy",
          "bases": [
            "<ast.Attribute object at 0x76cfff9a4a50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa2b010>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa299d0>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa29510>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa31310>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.retention.policy",
            "_description": "Records Retention Policy",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa2b010>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa299d0>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa29510>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.retention.policy"
    },
    "customer_billing_profile.py": {
      "filename": "customer_billing_profile.py",
      "classes": [
        {
          "name": "CustomerBillingProfile",
          "bases": [
            "<ast.Attribute object at 0x76cfff8576d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Profile Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff856550>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Billing Manager",
                "default": "<ast.Lambda object at 0x76cfff855cd0>",
                "tracking": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "partner_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer",
                "required": true,
                "tracking": true,
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ]
              }
            },
            {
              "name": "contact_count",
              "type": "Integer",
              "attributes": {
                "string": "Contact Count",
                "compute": "_compute_contact_count"
              }
            },
            {
              "name": "storage_billing_cycle",
              "type": "Selection",
              "attributes": {
                "string": "Storage Billing Cycle",
                "default": "monthly",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "storage_bill_in_advance",
              "type": "Boolean",
              "attributes": {
                "string": "Bill Storage in Advance",
                "default": false,
                "tracking": true
              }
            },
            {
              "name": "storage_advance_months",
              "type": "Integer",
              "attributes": {
                "string": "Advance Months",
                "default": 1,
                "tracking": true
              }
            },
            {
              "name": "auto_generate_storage_invoices",
              "type": "Boolean",
              "attributes": {
                "string": "Auto Generate Storage Invoices",
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "service_billing_cycle",
              "type": "Selection",
              "attributes": {
                "string": "Service Billing Cycle",
                "default": "monthly",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "auto_generate_service_invoices",
              "type": "Boolean",
              "attributes": {
                "string": "Auto Generate Service Invoices",
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "prepaid_enabled",
              "type": "Boolean",
              "attributes": {
                "string": "Prepaid Enabled",
                "default": false,
                "tracking": true
              }
            },
            {
              "name": "prepaid_months",
              "type": "Integer",
              "attributes": {
                "string": "Prepaid Months",
                "default": 12,
                "tracking": true
              }
            },
            {
              "name": "prepaid_discount_percent",
              "type": "Float",
              "attributes": {
                "string": "Prepaid Discount %",
                "default": 0.0,
                "tracking": true
              }
            },
            {
              "name": "billing_day",
              "type": "Integer",
              "attributes": {
                "string": "Billing Day of Month",
                "default": 1,
                "tracking": true
              }
            },
            {
              "name": "invoice_due_days",
              "type": "Integer",
              "attributes": {
                "string": "Invoice Due Days",
                "default": 30,
                "tracking": true
              }
            },
            {
              "name": "payment_term_id",
              "type": "Many2one",
              "attributes": {
                "string": "Payment Terms",
                "tracking": true
              }
            },
            {
              "name": "next_storage_billing_date",
              "type": "Date",
              "attributes": {
                "string": "Next Storage Billing Date",
                "tracking": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "storage_bill_in_advance",
              "type": "Boolean",
              "attributes": {
                "string": "Bill Storage in Advance",
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "storage_advance_months",
              "type": "Integer",
              "attributes": {
                "string": "Storage Advance Months",
                "default": 1,
                "tracking": true
              }
            },
            {
              "name": "service_billing_cycle",
              "type": "Selection",
              "attributes": {
                "string": "Service Billing Cycle",
                "default": "monthly",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "prepaid_enabled",
              "type": "Boolean",
              "attributes": {
                "string": "Prepaid Billing Enabled",
                "tracking": true
              }
            },
            {
              "name": "prepaid_months",
              "type": "Integer",
              "attributes": {
                "string": "Prepaid Months",
                "default": 12,
                "tracking": true
              }
            },
            {
              "name": "prepaid_discount_percent",
              "type": "Float",
              "attributes": {
                "string": "Prepaid Discount %",
                "digits": [
                  5,
                  2
                ],
                "tracking": true
              }
            },
            {
              "name": "billing_day",
              "type": "Integer",
              "attributes": {
                "string": "Billing Day of Month",
                "default": 1,
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "invoice_due_days",
              "type": "Integer",
              "attributes": {
                "string": "Invoice Due Days",
                "default": 30,
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "auto_generate_storage_invoices",
              "type": "Boolean",
              "attributes": {
                "string": "Auto Generate Storage Invoices",
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "auto_generate_service_invoices",
              "type": "Boolean",
              "attributes": {
                "string": "Auto Generate Service Invoices",
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "auto_send_invoices",
              "type": "Boolean",
              "attributes": {
                "string": "Auto Send Invoices",
                "default": false,
                "tracking": true
              }
            },
            {
              "name": "auto_send_statements",
              "type": "Boolean",
              "attributes": {
                "string": "Auto Send Statements",
                "default": false,
                "tracking": true
              }
            },
            {
              "name": "payment_term_id",
              "type": "Many2one",
              "attributes": {
                "string": "Payment Terms"
              }
            },
            {
              "name": "billing_contact_ids",
              "type": "One2many",
              "attributes": {
                "string": "Billing Contacts"
              }
            },
            {
              "name": "contact_count",
              "type": "Integer",
              "attributes": {
                "string": "Contact Count",
                "compute": "_compute_contact_count"
              }
            },
            {
              "name": "next_storage_billing_date",
              "type": "Date",
              "attributes": {
                "string": "Next Storage Billing Date",
                "compute": "_compute_next_storage_billing_date"
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true,
                "required": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_contact_count",
              "decorators": [
                "<ast.Call object at 0x76cfffa53390>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_contact_count",
              "decorators": [
                "<ast.Call object at 0x76cfffa06810>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_next_storage_billing_date",
              "decorators": [
                "<ast.Call object at 0x76cfff82afd0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_onchange_storage_billing_cycle",
              "decorators": [
                "<ast.Call object at 0x76cfff845610>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_onchange_prepaid_enabled",
              "decorators": [
                "<ast.Call object at 0x76cfff844790>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_suspend",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_terminate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "generate_storage_invoice",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "generate_service_invoice",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_billing_day",
              "decorators": [
                "<ast.Call object at 0x76cfff863550>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_invoice_due_days",
              "decorators": [
                "<ast.Call object at 0x76cfff86c610>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_storage_advance_months",
              "decorators": [
                "<ast.Call object at 0x76cfff86d690>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_prepaid_months",
              "decorators": [
                "<ast.Call object at 0x76cfff86e8d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_check_prepaid_discount_percent",
              "decorators": [
                "<ast.Call object at 0x76cfff86fc90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.customer.billing.profile",
            "_description": "Customer Billing Profile",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "partner_id, name",
            "_rec_name": "name"
          }
        },
        {
          "name": "BillingContact",
          "bases": [
            "<ast.Attribute object at 0x76cfff8740d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Contact Name",
                "required": true
              }
            },
            {
              "name": "email",
              "type": "Char",
              "attributes": {
                "string": "Email",
                "required": true
              }
            },
            {
              "name": "phone",
              "type": "Char",
              "attributes": {
                "string": "Phone"
              }
            },
            {
              "name": "billing_profile_id",
              "type": "Many2one",
              "attributes": {
                "string": "Billing Profile",
                "required": true,
                "ondelete": "cascade"
              }
            },
            {
              "name": "receive_storage_invoices",
              "type": "Boolean",
              "attributes": {
                "string": "Receive Storage Invoices",
                "default": true
              }
            },
            {
              "name": "receive_service_invoices",
              "type": "Boolean",
              "attributes": {
                "string": "Receive Service Invoices",
                "default": true
              }
            },
            {
              "name": "receive_statements",
              "type": "Boolean",
              "attributes": {
                "string": "Receive Statements",
                "default": false
              }
            },
            {
              "name": "receive_notifications",
              "type": "Boolean",
              "attributes": {
                "string": "Receive Notifications",
                "default": true
              }
            },
            {
              "name": "primary_contact",
              "type": "Boolean",
              "attributes": {
                "string": "Primary Contact",
                "default": false
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            }
          ],
          "methods": [
            {
              "name": "_check_email",
              "decorators": [
                "<ast.Call object at 0x76cfff881350>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.billing.contact",
            "_description": "Billing Contact",
            "_order": "billing_profile_id, sequence, name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Contact Name",
            "required": true
          }
        },
        {
          "name": "email",
          "type": "Char",
          "attributes": {
            "string": "Email",
            "required": true
          }
        },
        {
          "name": "phone",
          "type": "Char",
          "attributes": {
            "string": "Phone"
          }
        },
        {
          "name": "billing_profile_id",
          "type": "Many2one",
          "attributes": {
            "string": "Billing Profile",
            "required": true,
            "ondelete": "cascade"
          }
        },
        {
          "name": "receive_storage_invoices",
          "type": "Boolean",
          "attributes": {
            "string": "Receive Storage Invoices",
            "default": true
          }
        },
        {
          "name": "receive_service_invoices",
          "type": "Boolean",
          "attributes": {
            "string": "Receive Service Invoices",
            "default": true
          }
        },
        {
          "name": "receive_statements",
          "type": "Boolean",
          "attributes": {
            "string": "Receive Statements",
            "default": false
          }
        },
        {
          "name": "receive_notifications",
          "type": "Boolean",
          "attributes": {
            "string": "Receive Notifications",
            "default": true
          }
        },
        {
          "name": "primary_contact",
          "type": "Boolean",
          "attributes": {
            "string": "Primary Contact",
            "default": false
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": [],
      "model_name": "records.billing.contact"
    },
    "bin_key_management.py": {
      "filename": "bin_key_management.py",
      "classes": [
        {
          "name": "BinKeyManagement",
          "bases": [
            "<ast.Attribute object at 0x76cfffa45a90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9ea550>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa09250>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa30310>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa28850>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "bin.key.management",
            "_description": "Bin Key Management",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9ea550>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa09250>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa30310>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "bin.key.management"
    },
    "records_vehicle.py": {
      "filename": "records_vehicle.py",
      "classes": [
        {
          "name": "RecordsVehicle",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ddf10>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff82b750>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff993c50>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa44790>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "vin",
              "type": "Char",
              "attributes": {
                "string": "VIN",
                "tracking": true,
                "help": "Vehicle Identification Number."
              }
            },
            {
              "name": "license_plate",
              "type": "Char",
              "attributes": {
                "string": "License Plate",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "driver_id",
              "type": "Many2one",
              "attributes": {
                "string": "Driver",
                "tracking": true,
                "help": "Assigned driver for the vehicle."
              }
            },
            {
              "name": "driver_contact",
              "type": "Char",
              "attributes": {
                "related": "driver_id.mobile_phone",
                "string": "Driver Contact",
                "readonly": true
              }
            },
            {
              "name": "vehicle_type",
              "type": "Selection",
              "attributes": {
                "string": "Vehicle Type",
                "default": "truck",
                "tracking": true
              }
            },
            {
              "name": "total_capacity",
              "type": "Float",
              "attributes": {
                "string": "Total Capacity (cubic meters)",
                "tracking": true
              }
            },
            {
              "name": "max_boxes",
              "type": "Integer",
              "attributes": {
                "string": "Max Boxes",
                "tracking": true,
                "help": "Maximum number of standard boxes the vehicle can hold."
              }
            },
            {
              "name": "last_service_date",
              "type": "Date",
              "attributes": {
                "string": "Last Service Date",
                "tracking": true
              }
            },
            {
              "name": "next_service_date",
              "type": "Date",
              "attributes": {
                "string": "Next Service Date",
                "tracking": true
              }
            },
            {
              "name": "service_notes",
              "type": "Text",
              "attributes": {
                "string": "Service Notes"
              }
            },
            {
              "name": "status",
              "type": "Selection",
              "attributes": {
                "string": "Operational Status",
                "default": "available",
                "tracking": true
              }
            },
            {
              "name": "pickup_route_ids",
              "type": "One2many",
              "attributes": {
                "string": "Pickup Routes"
              }
            },
            {
              "name": "length",
              "type": "Float",
              "attributes": {}
            },
            {
              "name": "width",
              "type": "Float",
              "attributes": {}
            },
            {
              "name": "height",
              "type": "Float",
              "attributes": {}
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa513d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.vehicle",
            "_description": "Records Vehicle",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff82b750>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff993c50>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa44790>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "vin",
          "type": "Char",
          "attributes": {
            "string": "VIN",
            "tracking": true,
            "help": "Vehicle Identification Number."
          }
        },
        {
          "name": "license_plate",
          "type": "Char",
          "attributes": {
            "string": "License Plate",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "driver_id",
          "type": "Many2one",
          "attributes": {
            "string": "Driver",
            "tracking": true,
            "help": "Assigned driver for the vehicle."
          }
        },
        {
          "name": "driver_contact",
          "type": "Char",
          "attributes": {
            "related": "driver_id.mobile_phone",
            "string": "Driver Contact",
            "readonly": true
          }
        },
        {
          "name": "vehicle_type",
          "type": "Selection",
          "attributes": {
            "string": "Vehicle Type",
            "default": "truck",
            "tracking": true
          }
        },
        {
          "name": "total_capacity",
          "type": "Float",
          "attributes": {
            "string": "Total Capacity (cubic meters)",
            "tracking": true
          }
        },
        {
          "name": "max_boxes",
          "type": "Integer",
          "attributes": {
            "string": "Max Boxes",
            "tracking": true,
            "help": "Maximum number of standard boxes the vehicle can hold."
          }
        },
        {
          "name": "last_service_date",
          "type": "Date",
          "attributes": {
            "string": "Last Service Date",
            "tracking": true
          }
        },
        {
          "name": "next_service_date",
          "type": "Date",
          "attributes": {
            "string": "Next Service Date",
            "tracking": true
          }
        },
        {
          "name": "service_notes",
          "type": "Text",
          "attributes": {
            "string": "Service Notes"
          }
        },
        {
          "name": "status",
          "type": "Selection",
          "attributes": {
            "string": "Operational Status",
            "default": "available",
            "tracking": true
          }
        },
        {
          "name": "pickup_route_ids",
          "type": "One2many",
          "attributes": {
            "string": "Pickup Routes"
          }
        },
        {
          "name": "length",
          "type": "Float",
          "attributes": {}
        },
        {
          "name": "width",
          "type": "Float",
          "attributes": {}
        },
        {
          "name": "height",
          "type": "Float",
          "attributes": {}
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.vehicle"
    },
    "pos_config.py": {
      "filename": "pos_config.py",
      "classes": [
        {
          "name": "PosConfig",
          "bases": [
            "<ast.Attribute object at 0x76cfff86f550>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft"
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff86c650>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff86d690>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff86d310>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa45ad0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_inherit": "pos.config",
            "_description": "Pos Config",
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": []
    },
    "wizard_template.py": {
      "filename": "wizard_template.py",
      "classes": [
        {
          "name": "WizardTemplate",
          "bases": [
            "<ast.Attribute object at 0x76cfff8297d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true
              }
            }
          ],
          "methods": [
            {
              "name": "action_execute",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_name": "wizard.template",
            "_description": "Wizard Template"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "wizard.template"
    },
    "unlock_service_history.py": {
      "filename": "unlock_service_history.py",
      "classes": [
        {
          "name": "UnlockServiceHistory",
          "bases": [
            "<ast.Attribute object at 0x76cfffa0bd90>"
          ],
          "fields": [
            {
              "name": "partner_bin_key_id",
              "type": "Many2one",
              "attributes": {
                "string": "Partner Bin Key",
                "required": true,
                "ondelete": "cascade",
                "tracking": true
              }
            },
            {
              "name": "service_type",
              "type": "Selection",
              "attributes": {
                "string": "Service Type",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Service User",
                "default": "<ast.Lambda object at 0x76cfff9e88d0>",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Service Date",
                "default": "<ast.Attribute object at 0x76cfffa47f50>",
                "required": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Service Notes"
              }
            },
            {
              "name": "success",
              "type": "Boolean",
              "attributes": {
                "string": "Service Successful",
                "default": true
              }
            },
            {
              "name": "cost",
              "type": "Float",
              "attributes": {
                "string": "Service Cost"
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa46990>",
                "required": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff82aa10>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "unlock.service.history",
            "_description": "Unlock Service History",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "date_created desc",
            "_rec_name": "service_type"
          }
        }
      ],
      "fields": [
        {
          "name": "partner_bin_key_id",
          "type": "Many2one",
          "attributes": {
            "string": "Partner Bin Key",
            "required": true,
            "ondelete": "cascade",
            "tracking": true
          }
        },
        {
          "name": "service_type",
          "type": "Selection",
          "attributes": {
            "string": "Service Type",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Service User",
            "default": "<ast.Lambda object at 0x76cfff9e88d0>",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Service Date",
            "default": "<ast.Attribute object at 0x76cfffa47f50>",
            "required": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Service Notes"
          }
        },
        {
          "name": "success",
          "type": "Boolean",
          "attributes": {
            "string": "Service Successful",
            "default": true
          }
        },
        {
          "name": "cost",
          "type": "Float",
          "attributes": {
            "string": "Service Cost"
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa46990>",
            "required": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "unlock.service.history"
    },
    "stock_move_sms_validation.py": {
      "filename": "stock_move_sms_validation.py",
      "classes": [
        {
          "name": "StockMoveSMSValidation",
          "bases": [
            "<ast.Attribute object at 0x76cfff9e4390>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "required": true
              }
            },
            {
              "name": "move_id",
              "type": "Many2one",
              "attributes": {
                "string": "Stock Move"
              }
            },
            {
              "name": "sms_code",
              "type": "Char",
              "attributes": {
                "string": "SMS Code"
              }
            },
            {
              "name": "validated",
              "type": "Boolean",
              "attributes": {
                "string": "Validated"
              }
            }
          ],
          "methods": [],
          "model_attributes": {
            "_name": "stock.move.sms.validation",
            "_description": "Stock Move SMS Validation"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "required": true
          }
        },
        {
          "name": "move_id",
          "type": "Many2one",
          "attributes": {
            "string": "Stock Move"
          }
        },
        {
          "name": "sms_code",
          "type": "Char",
          "attributes": {
            "string": "SMS Code"
          }
        },
        {
          "name": "validated",
          "type": "Boolean",
          "attributes": {
            "string": "Validated"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": [],
      "model_name": "stock.move.sms.validation"
    },
    "records_access_log.py": {
      "filename": "records_access_log.py",
      "classes": [
        {
          "name": "RecordsAccessLog",
          "bases": [
            "<ast.Attribute object at 0x76cfffa45910>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa46590>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa469d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa47a50>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.access.log",
            "_description": "Records Access Log",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa46590>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa469d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa47a50>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.access.log"
    },
    "customer_rate_profile.py": {
      "filename": "customer_rate_profile.py",
      "classes": [
        {
          "name": "CustomerRateProfile",
          "bases": [
            "<ast.Attribute object at 0x76cfffa53d90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa51250>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9ef7d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9d5990>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "customer.rate.profile",
            "_description": "Customer Rate Profile",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa51250>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9ef7d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "customer.rate.profile"
    },
    "portal_feedback.py": {
      "filename": "portal_feedback.py",
      "classes": [
        {
          "name": "PortalFeedback",
          "bases": [
            "<ast.Attribute object at 0x76cfff86c950>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff86e450>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff86e310>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff86fc90>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9e86d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "portal.feedback",
            "_description": "Portal Feedback",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff86e450>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff86e310>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff86fc90>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "portal.feedback"
    },
    "pickup_request_item.py": {
      "filename": "pickup_request_item.py",
      "classes": [
        {
          "name": "PickupRequestItem",
          "bases": [
            "<ast.Attribute object at 0x76cfffa51590>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa51250>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa505d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d7190>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "pickup.request.item",
            "_description": "Pickup Request Item",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa51250>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa505d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9d7190>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "pickup.request.item"
    },
    "records_document.py": {
      "filename": "records_document.py",
      "classes": [
        {
          "name": "RecordsDocument",
          "bases": [
            "<ast.Attribute object at 0x76cfffa5a4d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff86ed50>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff86eed0>"
              }
            },
            {
              "name": "customer_inventory_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer Inventory"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff86e450>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa44ed0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.document",
            "_description": "Records Document",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff86ed50>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff86eed0>"
          }
        },
        {
          "name": "customer_inventory_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer Inventory"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff86e450>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.document"
    },
    "temp_inventory.py": {
      "filename": "temp_inventory.py",
      "classes": [
        {
          "name": "TempInventory",
          "bases": [
            "<ast.Attribute object at 0x76cfff854090>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff856090>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff856690>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff8577d0>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff86fd90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "temp.inventory",
            "_description": "Temp Inventory",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff856090>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff856690>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff8577d0>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "temp.inventory"
    },
    "naid_compliance_checklist.py": {
      "filename": "naid_compliance_checklist.py",
      "classes": [
        {
          "name": "NAIDComplianceChecklist",
          "bases": [
            "<ast.Attribute object at 0x76cfff86f5d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff86d310>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff86c0d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff86e010>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "naid.compliance.checklist",
            "_description": "NAID Compliance Checklist",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff86d310>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff86c0d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff86e010>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.compliance.checklist"
    },
    "res_partner.py": {
      "filename": "res_partner.py",
      "classes": [
        {
          "name": "ResPartner",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ec250>"
          ],
          "fields": [
            {
              "name": "is_records_customer",
              "type": "Boolean",
              "attributes": {
                "string": "Records Customer",
                "default": false
              }
            },
            {
              "name": "records_department_users",
              "type": "One2many",
              "attributes": {
                "string": "Department Users (Records)"
              }
            },
            {
              "name": "records_department_id",
              "type": "Many2one",
              "attributes": {
                "string": "Records Department"
              }
            }
          ],
          "methods": [
            {
              "name": "_grant_dev_permissions",
              "decorators": [
                "<ast.Attribute object at 0x76cfff855790>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_inherit": "res.partner"
          }
        }
      ],
      "fields": [],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": []
    },
    "records_audit_log.py": {
      "filename": "records_audit_log.py",
      "classes": [
        {
          "name": "RecordsAuditLog",
          "bases": [
            "<ast.Attribute object at 0x76cfff9b28d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff854850>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff855310>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff86e290>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.audit.log",
            "_description": "Records Audit Log",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff854850>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff855310>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff86e290>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.audit.log"
    },
    "customer_inventory.py": {
      "filename": "customer_inventory.py",
      "classes": [
        {
          "name": "CustomerInventory",
          "bases": [
            "<ast.Attribute object at 0x76cfffa32d10>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa31e50>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "User",
                "default": "<ast.Lambda object at 0x76cfffa330d0>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "message_ids",
              "type": "One2many",
              "attributes": {
                "string": "Messages",
                "auto_join": true
              }
            },
            {
              "name": "activity_ids",
              "type": "One2many",
              "attributes": {
                "string": "Activities",
                "auto_join": true
              }
            },
            {
              "name": "message_follower_ids",
              "type": "One2many",
              "attributes": {
                "string": "Followers",
                "auto_join": true
              }
            },
            {
              "name": "action_confirm_report",
              "type": "Char",
              "attributes": {
                "string": "Action Confirm Report"
              }
            },
            {
              "name": "action_generate_pdf_report",
              "type": "Char",
              "attributes": {
                "string": "Action Generate Pdf Report"
              }
            },
            {
              "name": "action_send_to_customer",
              "type": "Char",
              "attributes": {
                "string": "Action Send To Customer"
              }
            },
            {
              "name": "action_view_boxes",
              "type": "Char",
              "attributes": {
                "string": "Action View Boxes"
              }
            },
            {
              "name": "action_view_documents",
              "type": "Char",
              "attributes": {
                "string": "Action View Documents"
              }
            },
            {
              "name": "action_view_locations",
              "type": "Char",
              "attributes": {
                "string": "Action View Locations"
              }
            },
            {
              "name": "active_locations",
              "type": "Char",
              "attributes": {
                "string": "Active Locations"
              }
            },
            {
              "name": "box_ids",
              "type": "One2many",
              "attributes": {
                "string": "Containers"
              }
            },
            {
              "name": "boxes",
              "type": "Char",
              "attributes": {
                "string": "Boxes"
              }
            },
            {
              "name": "button_box",
              "type": "Char",
              "attributes": {
                "string": "Button Box"
              }
            },
            {
              "name": "card",
              "type": "Char",
              "attributes": {
                "string": "Card"
              }
            },
            {
              "name": "confirmed",
              "type": "Boolean",
              "attributes": {
                "string": "Confirmed",
                "default": false
              }
            },
            {
              "name": "context",
              "type": "Char",
              "attributes": {
                "string": "Context"
              }
            },
            {
              "name": "created_date",
              "type": "Date",
              "attributes": {
                "string": "Created Date"
              }
            },
            {
              "name": "customer_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer Id",
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ]
              }
            },
            {
              "name": "document_ids",
              "type": "One2many",
              "attributes": {
                "string": "Document Ids"
              }
            },
            {
              "name": "document_type_id",
              "type": "Many2one",
              "attributes": {
                "string": "Document Type"
              }
            },
            {
              "name": "documents",
              "type": "Char",
              "attributes": {
                "string": "Documents"
              }
            },
            {
              "name": "draft",
              "type": "Char",
              "attributes": {
                "string": "Draft"
              }
            },
            {
              "name": "group_by_customer",
              "type": "Char",
              "attributes": {
                "string": "Group By Customer"
              }
            },
            {
              "name": "group_by_date",
              "type": "Date",
              "attributes": {
                "string": "Group By Date"
              }
            },
            {
              "name": "group_by_status",
              "type": "Selection",
              "attributes": {
                "string": "Group By Status"
              }
            },
            {
              "name": "group_by_volume",
              "type": "Char",
              "attributes": {
                "string": "Group By Volume"
              }
            },
            {
              "name": "help",
              "type": "Char",
              "attributes": {
                "string": "Help"
              }
            },
            {
              "name": "large_volume",
              "type": "Char",
              "attributes": {
                "string": "Large Volume"
              }
            },
            {
              "name": "last_quarter",
              "type": "Char",
              "attributes": {
                "string": "Last Quarter"
              }
            },
            {
              "name": "location_id",
              "type": "Many2one",
              "attributes": {
                "string": "Location"
              }
            },
            {
              "name": "medium_volume",
              "type": "Char",
              "attributes": {
                "string": "Medium Volume"
              }
            },
            {
              "name": "notes",
              "type": "Char",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "report_date",
              "type": "Date",
              "attributes": {
                "string": "Report Date"
              }
            },
            {
              "name": "res_model",
              "type": "Char",
              "attributes": {
                "string": "Res Model"
              }
            },
            {
              "name": "search_view_id",
              "type": "Many2one",
              "attributes": {
                "string": "Search View"
              }
            },
            {
              "name": "sent",
              "type": "Char",
              "attributes": {
                "string": "Sent"
              }
            },
            {
              "name": "small_volume",
              "type": "Char",
              "attributes": {
                "string": "Small Volume"
              }
            },
            {
              "name": "status",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "new"
              }
            },
            {
              "name": "stored_date",
              "type": "Date",
              "attributes": {
                "string": "Stored Date"
              }
            },
            {
              "name": "this_month",
              "type": "Char",
              "attributes": {
                "string": "This Month"
              }
            },
            {
              "name": "total_boxes",
              "type": "Char",
              "attributes": {
                "string": "Total Boxes"
              }
            },
            {
              "name": "total_documents",
              "type": "Char",
              "attributes": {
                "string": "Total Documents"
              }
            },
            {
              "name": "very_large_volume",
              "type": "Char",
              "attributes": {
                "string": "Very Large Volume"
              }
            },
            {
              "name": "view_mode",
              "type": "Char",
              "attributes": {
                "string": "View Mode"
              }
            },
            {
              "name": "volume_category",
              "type": "Char",
              "attributes": {
                "string": "Volume Category"
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_total_boxes",
              "decorators": [
                "<ast.Call object at 0x76cfff82e110>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_total_documents",
              "decorators": [
                "<ast.Call object at 0x76cfff82d7d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "customer.inventory",
            "_description": "Customer Inventory",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa31e50>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "User",
            "default": "<ast.Lambda object at 0x76cfffa330d0>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "message_ids",
          "type": "One2many",
          "attributes": {
            "string": "Messages",
            "auto_join": true
          }
        },
        {
          "name": "activity_ids",
          "type": "One2many",
          "attributes": {
            "string": "Activities",
            "auto_join": true
          }
        },
        {
          "name": "message_follower_ids",
          "type": "One2many",
          "attributes": {
            "string": "Followers",
            "auto_join": true
          }
        },
        {
          "name": "action_confirm_report",
          "type": "Char",
          "attributes": {
            "string": "Action Confirm Report"
          }
        },
        {
          "name": "action_generate_pdf_report",
          "type": "Char",
          "attributes": {
            "string": "Action Generate Pdf Report"
          }
        },
        {
          "name": "action_send_to_customer",
          "type": "Char",
          "attributes": {
            "string": "Action Send To Customer"
          }
        },
        {
          "name": "action_view_boxes",
          "type": "Char",
          "attributes": {
            "string": "Action View Boxes"
          }
        },
        {
          "name": "action_view_documents",
          "type": "Char",
          "attributes": {
            "string": "Action View Documents"
          }
        },
        {
          "name": "action_view_locations",
          "type": "Char",
          "attributes": {
            "string": "Action View Locations"
          }
        },
        {
          "name": "active_locations",
          "type": "Char",
          "attributes": {
            "string": "Active Locations"
          }
        },
        {
          "name": "box_ids",
          "type": "One2many",
          "attributes": {
            "string": "Containers"
          }
        },
        {
          "name": "boxes",
          "type": "Char",
          "attributes": {
            "string": "Boxes"
          }
        },
        {
          "name": "button_box",
          "type": "Char",
          "attributes": {
            "string": "Button Box"
          }
        },
        {
          "name": "card",
          "type": "Char",
          "attributes": {
            "string": "Card"
          }
        },
        {
          "name": "confirmed",
          "type": "Boolean",
          "attributes": {
            "string": "Confirmed",
            "default": false
          }
        },
        {
          "name": "context",
          "type": "Char",
          "attributes": {
            "string": "Context"
          }
        },
        {
          "name": "created_date",
          "type": "Date",
          "attributes": {
            "string": "Created Date"
          }
        },
        {
          "name": "customer_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer Id",
            "domain": [
              [
                "is_company",
                "=",
                true
              ]
            ]
          }
        },
        {
          "name": "document_ids",
          "type": "One2many",
          "attributes": {
            "string": "Document Ids"
          }
        },
        {
          "name": "document_type_id",
          "type": "Many2one",
          "attributes": {
            "string": "Document Type"
          }
        },
        {
          "name": "documents",
          "type": "Char",
          "attributes": {
            "string": "Documents"
          }
        },
        {
          "name": "draft",
          "type": "Char",
          "attributes": {
            "string": "Draft"
          }
        },
        {
          "name": "group_by_customer",
          "type": "Char",
          "attributes": {
            "string": "Group By Customer"
          }
        },
        {
          "name": "group_by_date",
          "type": "Date",
          "attributes": {
            "string": "Group By Date"
          }
        },
        {
          "name": "group_by_status",
          "type": "Selection",
          "attributes": {
            "string": "Group By Status"
          }
        },
        {
          "name": "group_by_volume",
          "type": "Char",
          "attributes": {
            "string": "Group By Volume"
          }
        },
        {
          "name": "help",
          "type": "Char",
          "attributes": {
            "string": "Help"
          }
        },
        {
          "name": "large_volume",
          "type": "Char",
          "attributes": {
            "string": "Large Volume"
          }
        },
        {
          "name": "last_quarter",
          "type": "Char",
          "attributes": {
            "string": "Last Quarter"
          }
        },
        {
          "name": "location_id",
          "type": "Many2one",
          "attributes": {
            "string": "Location"
          }
        },
        {
          "name": "medium_volume",
          "type": "Char",
          "attributes": {
            "string": "Medium Volume"
          }
        },
        {
          "name": "notes",
          "type": "Char",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "report_date",
          "type": "Date",
          "attributes": {
            "string": "Report Date"
          }
        },
        {
          "name": "res_model",
          "type": "Char",
          "attributes": {
            "string": "Res Model"
          }
        },
        {
          "name": "search_view_id",
          "type": "Many2one",
          "attributes": {
            "string": "Search View"
          }
        },
        {
          "name": "sent",
          "type": "Char",
          "attributes": {
            "string": "Sent"
          }
        },
        {
          "name": "small_volume",
          "type": "Char",
          "attributes": {
            "string": "Small Volume"
          }
        },
        {
          "name": "status",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "new"
          }
        },
        {
          "name": "stored_date",
          "type": "Date",
          "attributes": {
            "string": "Stored Date"
          }
        },
        {
          "name": "this_month",
          "type": "Char",
          "attributes": {
            "string": "This Month"
          }
        },
        {
          "name": "total_boxes",
          "type": "Char",
          "attributes": {
            "string": "Total Boxes"
          }
        },
        {
          "name": "total_documents",
          "type": "Char",
          "attributes": {
            "string": "Total Documents"
          }
        },
        {
          "name": "very_large_volume",
          "type": "Char",
          "attributes": {
            "string": "Very Large Volume"
          }
        },
        {
          "name": "view_mode",
          "type": "Char",
          "attributes": {
            "string": "View Mode"
          }
        },
        {
          "name": "volume_category",
          "type": "Char",
          "attributes": {
            "string": "Volume Category"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "customer.inventory"
    },
    "load.py": {
      "filename": "load.py",
      "classes": [
        {
          "name": "Load",
          "bases": [
            "<ast.Attribute object at 0x76cfff883850>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff881190>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff881f90>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff82f490>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff855b50>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "load",
            "_description": "Load",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff881190>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff881f90>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff82f490>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "load"
    },
    "file_retrieval_work_order.py": {
      "filename": "file_retrieval_work_order.py",
      "classes": [
        {
          "name": "FileRetrievalWorkOrder",
          "bases": [
            "<ast.Attribute object at 0x76cfff9a66d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa05590>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa06750>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa05b90>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff875e10>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "file.retrieval.work.order",
            "_description": "File Retrieval Work Order",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa05590>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa06750>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa05b90>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "file.retrieval.work.order"
    },
    "customer_retrieval_rates.py": {
      "filename": "customer_retrieval_rates.py",
      "classes": [
        {
          "name": "CustomerRetrievalRates",
          "bases": [
            "<ast.Attribute object at 0x76cfff857610>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9edc10>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa46450>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa45110>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff9ea810>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "customer.retrieval.rates",
            "_description": "Customer Retrieval Rates",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9edc10>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa46450>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa45110>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "customer.retrieval.rates"
    },
    "records_tag.py": {
      "filename": "records_tag.py",
      "classes": [
        {
          "name": "RecordsTag",
          "bases": [
            "<ast.Attribute object at 0x76cfff86cb50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa29d10>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Responsible User",
                "default": "<ast.Lambda object at 0x76cfff877f90>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff876510>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa04990>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.tag",
            "_description": "Records Tag",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa29d10>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Responsible User",
            "default": "<ast.Lambda object at 0x76cfff877f90>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff876510>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.tag"
    },
    "naid_custody_event.py": {
      "filename": "naid_custody_event.py",
      "classes": [
        {
          "name": "NAIDCustodyEvent",
          "bases": [
            "<ast.Attribute object at 0x76cfffa5b4d0>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9e9710>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9e8290>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa47710>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "naid.custody.event",
            "_description": "NAID Custody Event",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9e9710>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9e8290>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa47710>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.custody.event"
    },
    "records_department_billing_contact.py": {
      "filename": "records_department_billing_contact.py",
      "classes": [
        {
          "name": "RecordsDepartmentBillingContact",
          "bases": [
            "<ast.Attribute object at 0x76cfffa2bd90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa2a1d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa2bc90>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff9d6310>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.department.billing.contact",
            "_description": "Department Billing Contact",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa2a1d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa2bc90>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff9d6310>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.department.billing.contact"
    },
    "project_task.py": {
      "filename": "project_task.py",
      "classes": [
        {
          "name": "ProjectTask",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ee650>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa44850>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa47510>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa0ab90>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "proj.task.ext",
            "_description": "Temporary Model",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa44850>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa47510>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa0ab90>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "proj.task.ext"
    },
    "pickup_request.py": {
      "filename": "pickup_request.py",
      "classes": [
        {
          "name": "PickupRequest",
          "bases": [
            "<ast.Attribute object at 0x76cfff855950>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff854590>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff857a90>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa31510>"
              }
            },
            {
              "name": "help",
              "type": "Char",
              "attributes": {
                "string": "Help"
              }
            },
            {
              "name": "res_model",
              "type": "Char",
              "attributes": {
                "string": "Res Model"
              }
            },
            {
              "name": "view_mode",
              "type": "Char",
              "attributes": {
                "string": "View Mode"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "pickup.request",
            "_description": "Pickup Request",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff854590>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff857a90>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa31510>"
          }
        },
        {
          "name": "help",
          "type": "Char",
          "attributes": {
            "string": "Help"
          }
        },
        {
          "name": "res_model",
          "type": "Char",
          "attributes": {
            "string": "Res Model"
          }
        },
        {
          "name": "view_mode",
          "type": "Char",
          "attributes": {
            "string": "View Mode"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "pickup.request"
    },
    "fsm_route_management.py": {
      "filename": "fsm_route_management.py",
      "classes": [
        {
          "name": "FsmRouteManagementPlaceholder",
          "bases": [
            "<ast.Attribute object at 0x76cfff9ed790>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "default": "FSM Route Management Placeholder"
              }
            }
          ],
          "methods": [
            {
              "name": "_log_fsm_disabled",
              "decorators": [
                "<ast.Attribute object at 0x76cfffa45850>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "fsm.route.management.placeholder",
            "_description": "Placeholder for FSM Route Management"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "default": "FSM Route Management Placeholder"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [],
      "decorators": [],
      "model_name": "fsm.route.management.placeholder"
    },
    "pickup_route.py": {
      "filename": "pickup_route.py",
      "classes": [
        {
          "name": "PickupRoute",
          "bases": [
            "<ast.Attribute object at 0x76cfff9de710>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff9d7e90>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff9e9390>"
              }
            },
            {
              "name": "vehicle_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned Vehicle",
                "tracking": true
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfffa50dd0>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa44350>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "pickup.route",
            "_description": "Pickup Route",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff9d7e90>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff9e9390>"
          }
        },
        {
          "name": "vehicle_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned Vehicle",
            "tracking": true
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfffa50dd0>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "pickup.route"
    },
    "location_report_wizard.py": {
      "filename": "location_report_wizard.py",
      "classes": [
        {
          "name": "LocationReportWizard",
          "bases": [
            "<ast.Attribute object at 0x76cfff83f990>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff83e590>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "User",
                "default": "<ast.Lambda object at 0x76cfff83dc10>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "message_ids",
              "type": "One2many",
              "attributes": {
                "string": "Messages",
                "auto_join": true
              }
            },
            {
              "name": "activity_ids",
              "type": "One2many",
              "attributes": {
                "string": "Activities",
                "auto_join": true
              }
            },
            {
              "name": "message_follower_ids",
              "type": "One2many",
              "attributes": {
                "string": "Followers",
                "auto_join": true
              }
            },
            {
              "name": "action_export_csv",
              "type": "Char",
              "attributes": {
                "string": "Action Export Csv"
              }
            },
            {
              "name": "action_generate_report",
              "type": "Char",
              "attributes": {
                "string": "Action Generate Report"
              }
            },
            {
              "name": "action_print_report",
              "type": "Char",
              "attributes": {
                "string": "Action Print Report"
              }
            },
            {
              "name": "location_id",
              "type": "Many2one",
              "attributes": {
                "string": "Location",
                "required": true,
                "help": "Select the primary location for the report."
              }
            },
            {
              "name": "include_child_locations",
              "type": "Boolean",
              "attributes": {
                "string": "Include Child Locations",
                "default": true,
                "help": "Include all sub-locations in the report."
              }
            },
            {
              "name": "report_date",
              "type": "Date",
              "attributes": {
                "string": "Report Date",
                "default": "<ast.Attribute object at 0x76cfff883910>",
                "required": true,
                "help": "Date for which the report is generated."
              }
            },
            {
              "name": "location_name",
              "type": "Char",
              "attributes": {
                "related": "location_id.name",
                "string": "Location Name",
                "store": true,
                "readonly": true
              }
            },
            {
              "name": "total_capacity",
              "type": "Float",
              "attributes": {
                "string": "Total Capacity",
                "compute": "_compute_report_data",
                "store": true,
                "help": "Total capacity of the selected location(s)."
              }
            },
            {
              "name": "current_utilization",
              "type": "Float",
              "attributes": {
                "string": "Current Utilization",
                "compute": "_compute_report_data",
                "store": true,
                "help": "Current utilization of the location(s)."
              }
            },
            {
              "name": "utilization_percentage",
              "type": "Float",
              "attributes": {
                "string": "Utilization Percentage",
                "compute": "_compute_report_data",
                "store": true,
                "help": "Percentage of utilization."
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_report_data",
              "decorators": [
                "<ast.Call object at 0x76cfffa590d0>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_generate_report",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_print_report",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_export_csv",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "location.report.wizard",
            "_description": "Location Report Wizard",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff83e590>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "User",
            "default": "<ast.Lambda object at 0x76cfff83dc10>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "message_ids",
          "type": "One2many",
          "attributes": {
            "string": "Messages",
            "auto_join": true
          }
        },
        {
          "name": "activity_ids",
          "type": "One2many",
          "attributes": {
            "string": "Activities",
            "auto_join": true
          }
        },
        {
          "name": "message_follower_ids",
          "type": "One2many",
          "attributes": {
            "string": "Followers",
            "auto_join": true
          }
        },
        {
          "name": "action_export_csv",
          "type": "Char",
          "attributes": {
            "string": "Action Export Csv"
          }
        },
        {
          "name": "action_generate_report",
          "type": "Char",
          "attributes": {
            "string": "Action Generate Report"
          }
        },
        {
          "name": "action_print_report",
          "type": "Char",
          "attributes": {
            "string": "Action Print Report"
          }
        },
        {
          "name": "location_id",
          "type": "Many2one",
          "attributes": {
            "string": "Location",
            "required": true,
            "help": "Select the primary location for the report."
          }
        },
        {
          "name": "include_child_locations",
          "type": "Boolean",
          "attributes": {
            "string": "Include Child Locations",
            "default": true,
            "help": "Include all sub-locations in the report."
          }
        },
        {
          "name": "report_date",
          "type": "Date",
          "attributes": {
            "string": "Report Date",
            "default": "<ast.Attribute object at 0x76cfff883910>",
            "required": true,
            "help": "Date for which the report is generated."
          }
        },
        {
          "name": "location_name",
          "type": "Char",
          "attributes": {
            "related": "location_id.name",
            "string": "Location Name",
            "store": true,
            "readonly": true
          }
        },
        {
          "name": "total_capacity",
          "type": "Float",
          "attributes": {
            "string": "Total Capacity",
            "compute": "_compute_report_data",
            "store": true,
            "help": "Total capacity of the selected location(s)."
          }
        },
        {
          "name": "current_utilization",
          "type": "Float",
          "attributes": {
            "string": "Current Utilization",
            "compute": "_compute_report_data",
            "store": true,
            "help": "Current utilization of the location(s)."
          }
        },
        {
          "name": "utilization_percentage",
          "type": "Float",
          "attributes": {
            "string": "Utilization Percentage",
            "compute": "_compute_report_data",
            "store": true,
            "help": "Percentage of utilization."
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "location.report.wizard"
    },
    "naid_certificate.py": {
      "filename": "naid_certificate.py",
      "classes": [
        {
          "name": "NaidCertificate",
          "bases": [
            "<ast.Attribute object at 0x76cfff9dc310>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfffa5b6d0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff857950>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff857910>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa2bc50>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "naid.certificate",
            "_description": "Naid Certificate",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfffa5b6d0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff857950>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff857910>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "naid.certificate"
    },
    "records_document_type.py": {
      "filename": "records_document_type.py",
      "classes": [
        {
          "name": "RecordsDocumentType",
          "bases": [
            "<ast.Attribute object at 0x76cfff873d50>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true,
                "index": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Description"
              }
            },
            {
              "name": "sequence",
              "type": "Integer",
              "attributes": {
                "string": "Sequence",
                "default": 10
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff871ed0>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff871750>"
              }
            },
            {
              "name": "date_created",
              "type": "Datetime",
              "attributes": {
                "string": "Created Date",
                "default": "<ast.Attribute object at 0x76cfff871050>"
              }
            },
            {
              "name": "date_modified",
              "type": "Datetime",
              "attributes": {
                "string": "Modified Date"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Internal Notes"
              }
            },
            {
              "name": "approval_date",
              "type": "Date",
              "attributes": {
                "tracking": true,
                "help": "Date of last approval."
              }
            },
            {
              "name": "approval_required",
              "type": "Boolean",
              "attributes": {
                "default": false,
                "tracking": true,
                "help": "Is approval required for this document type?"
              }
            },
            {
              "name": "approved_by",
              "type": "Many2one",
              "attributes": {
                "tracking": true,
                "help": "User who approved this document type."
              }
            },
            {
              "name": "audit_readiness_level",
              "type": "Selection",
              "attributes": {
                "tracking": true,
                "help": "Level of audit readiness."
              }
            },
            {
              "name": "audit_required",
              "type": "Boolean",
              "attributes": {
                "default": false,
                "tracking": true,
                "help": "Is an audit required for this document type?"
              }
            },
            {
              "name": "auto_classification_potential",
              "type": "Float",
              "attributes": {
                "digits": [
                  3,
                  2
                ],
                "tracking": true,
                "help": "Potential for auto-classification."
              }
            },
            {
              "name": "classification_accuracy_score",
              "type": "Float",
              "attributes": {
                "tracking": true,
                "help": "Accuracy score of classification."
              }
            },
            {
              "name": "compliance_notes",
              "type": "Text",
              "attributes": {
                "tracking": true,
                "help": "Notes on compliance."
              }
            },
            {
              "name": "compliance_risk_assessment",
              "type": "Text",
              "attributes": {
                "tracking": true,
                "help": "Assessment of compliance risk."
              }
            },
            {
              "name": "compliance_status",
              "type": "Selection",
              "attributes": {
                "tracking": true,
                "help": "Current compliance status."
              }
            },
            {
              "name": "document_count",
              "type": "Integer",
              "attributes": {
                "compute": "_compute_document_count",
                "store": true,
                "help": "Number of documents of this type."
              }
            },
            {
              "name": "document_type_utilization",
              "type": "Float",
              "attributes": {
                "compute": "_compute_document_type_utilization",
                "store": true,
                "help": "Utilization of this document type."
              }
            },
            {
              "name": "growth_trend_indicator",
              "type": "Selection",
              "attributes": {
                "tracking": true,
                "help": "Growth trend of this document type."
              }
            },
            {
              "name": "regulatory_compliance_score",
              "type": "Float",
              "attributes": {
                "tracking": true,
                "help": "Score for regulatory compliance."
              }
            },
            {
              "name": "regulatory_requirement",
              "type": "Text",
              "attributes": {
                "tracking": true,
                "help": "Regulatory requirements for this document type."
              }
            },
            {
              "name": "retention_compliance",
              "type": "Float",
              "attributes": {
                "tracking": true,
                "help": "Compliance with retention policies."
              }
            },
            {
              "name": "risk_level",
              "type": "Selection",
              "attributes": {
                "tracking": true,
                "help": "Risk level associated with this document type."
              }
            },
            {
              "name": "seasonal_pattern_score",
              "type": "Float",
              "attributes": {
                "tracking": true,
                "help": "Score for seasonal patterns."
              }
            },
            {
              "name": "security_classification",
              "type": "Selection",
              "attributes": {
                "tracking": true,
                "help": "Security classification of the document type."
              }
            },
            {
              "name": "type_complexity_rating",
              "type": "Integer",
              "attributes": {
                "tracking": true,
                "help": "Rating of the complexity of this document type."
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff83df50>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_document_count",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "_compute_document_type_utilization",
              "decorators": [
                "<ast.Call object at 0x76cfff883b90>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "write",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            },
            {
              "name": "action_activate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_archive",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [],
              "args": [
                "self",
                "vals"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.document.type",
            "_description": "Records Document Type",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name desc",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true,
            "index": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Description"
          }
        },
        {
          "name": "sequence",
          "type": "Integer",
          "attributes": {
            "string": "Sequence",
            "default": 10
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff871ed0>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff871750>"
          }
        },
        {
          "name": "date_created",
          "type": "Datetime",
          "attributes": {
            "string": "Created Date",
            "default": "<ast.Attribute object at 0x76cfff871050>"
          }
        },
        {
          "name": "date_modified",
          "type": "Datetime",
          "attributes": {
            "string": "Modified Date"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Internal Notes"
          }
        },
        {
          "name": "approval_date",
          "type": "Date",
          "attributes": {
            "tracking": true,
            "help": "Date of last approval."
          }
        },
        {
          "name": "approval_required",
          "type": "Boolean",
          "attributes": {
            "default": false,
            "tracking": true,
            "help": "Is approval required for this document type?"
          }
        },
        {
          "name": "approved_by",
          "type": "Many2one",
          "attributes": {
            "tracking": true,
            "help": "User who approved this document type."
          }
        },
        {
          "name": "audit_readiness_level",
          "type": "Selection",
          "attributes": {
            "tracking": true,
            "help": "Level of audit readiness."
          }
        },
        {
          "name": "audit_required",
          "type": "Boolean",
          "attributes": {
            "default": false,
            "tracking": true,
            "help": "Is an audit required for this document type?"
          }
        },
        {
          "name": "auto_classification_potential",
          "type": "Float",
          "attributes": {
            "digits": [
              3,
              2
            ],
            "tracking": true,
            "help": "Potential for auto-classification."
          }
        },
        {
          "name": "classification_accuracy_score",
          "type": "Float",
          "attributes": {
            "tracking": true,
            "help": "Accuracy score of classification."
          }
        },
        {
          "name": "compliance_notes",
          "type": "Text",
          "attributes": {
            "tracking": true,
            "help": "Notes on compliance."
          }
        },
        {
          "name": "compliance_risk_assessment",
          "type": "Text",
          "attributes": {
            "tracking": true,
            "help": "Assessment of compliance risk."
          }
        },
        {
          "name": "compliance_status",
          "type": "Selection",
          "attributes": {
            "tracking": true,
            "help": "Current compliance status."
          }
        },
        {
          "name": "document_count",
          "type": "Integer",
          "attributes": {
            "compute": "_compute_document_count",
            "store": true,
            "help": "Number of documents of this type."
          }
        },
        {
          "name": "document_type_utilization",
          "type": "Float",
          "attributes": {
            "compute": "_compute_document_type_utilization",
            "store": true,
            "help": "Utilization of this document type."
          }
        },
        {
          "name": "growth_trend_indicator",
          "type": "Selection",
          "attributes": {
            "tracking": true,
            "help": "Growth trend of this document type."
          }
        },
        {
          "name": "regulatory_compliance_score",
          "type": "Float",
          "attributes": {
            "tracking": true,
            "help": "Score for regulatory compliance."
          }
        },
        {
          "name": "regulatory_requirement",
          "type": "Text",
          "attributes": {
            "tracking": true,
            "help": "Regulatory requirements for this document type."
          }
        },
        {
          "name": "retention_compliance",
          "type": "Float",
          "attributes": {
            "tracking": true,
            "help": "Compliance with retention policies."
          }
        },
        {
          "name": "risk_level",
          "type": "Selection",
          "attributes": {
            "tracking": true,
            "help": "Risk level associated with this document type."
          }
        },
        {
          "name": "seasonal_pattern_score",
          "type": "Float",
          "attributes": {
            "tracking": true,
            "help": "Score for seasonal patterns."
          }
        },
        {
          "name": "security_classification",
          "type": "Selection",
          "attributes": {
            "tracking": true,
            "help": "Security classification of the document type."
          }
        },
        {
          "name": "type_complexity_rating",
          "type": "Integer",
          "attributes": {
            "tracking": true,
            "help": "Rating of the complexity of this document type."
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.document.type"
    },
    "records_container_movement.py": {
      "filename": "records_container_movement.py",
      "classes": [
        {
          "name": "RecordsContainerMovement",
          "bases": [
            "<ast.Attribute object at 0x76cfff881250>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff82b510>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfffa07150>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfffa44190>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.container.movement",
            "_description": "Records Container Movement",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff82b510>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfffa07150>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.container.movement"
    },
    "transitory_field_config.py": {
      "filename": "transitory_field_config.py",
      "classes": [
        {
          "name": "TransitoryFieldConfig",
          "bases": [
            "<ast.Attribute object at 0x76cfffa59850>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff82d810>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff82d790>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "string": "Active",
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "display_name",
              "type": "Char",
              "attributes": {
                "string": "Display Name",
                "compute": "_compute_display_name",
                "store": true
              }
            }
          ],
          "methods": [
            {
              "name": "_compute_display_name",
              "decorators": [
                "<ast.Call object at 0x76cfff840e50>"
              ],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_cancel",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_reset_to_draft",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "transitory.field.config",
            "_description": "Transitory Field Config",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff82d810>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff82d790>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "string": "Active",
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "display_name",
          "type": "Char",
          "attributes": {
            "string": "Display Name",
            "compute": "_compute_display_name",
            "store": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "transitory.field.config"
    },
    "customer_feedback.py": {
      "filename": "customer_feedback.py",
      "classes": [
        {
          "name": "CustomerFeedback",
          "bases": [
            "<ast.Attribute object at 0x76cfff875d90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Feedback Reference",
                "required": true,
                "tracking": true,
                "default": "<ast.Lambda object at 0x76cfff874c10>",
                "copy": false
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Feedback Details",
                "tracking": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff86f010>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Assigned User",
                "default": "<ast.Lambda object at 0x76cfff86da10>",
                "tracking": true
              }
            },
            {
              "name": "customer_id",
              "type": "Many2one",
              "attributes": {
                "string": "Customer",
                "required": true,
                "tracking": true,
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ]
              }
            },
            {
              "name": "contact_person",
              "type": "Many2one",
              "attributes": {
                "string": "Contact Person",
                "domain": [
                  [
                    "is_company",
                    "=",
                    false
                  ]
                ],
                "tracking": true
              }
            },
            {
              "name": "feedback_date",
              "type": "Date",
              "attributes": {
                "string": "Feedback Date",
                "default": "<ast.Attribute object at 0x76cfff856910>",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "feedback_type",
              "type": "Selection",
              "attributes": {
                "string": "Feedback Type",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "service_area",
              "type": "Selection",
              "attributes": {
                "string": "Service Area",
                "tracking": true
              }
            },
            {
              "name": "rating",
              "type": "Selection",
              "attributes": {
                "string": "Rating",
                "tracking": true
              }
            },
            {
              "name": "satisfaction_level",
              "type": "Selection",
              "attributes": {
                "string": "Satisfaction Level",
                "tracking": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "Status",
                "default": "new",
                "tracking": true,
                "required": true
              }
            },
            {
              "name": "priority",
              "type": "Selection",
              "attributes": {
                "string": "Priority",
                "default": "normal",
                "tracking": true
              }
            },
            {
              "name": "response_required",
              "type": "Boolean",
              "attributes": {
                "string": "Response Required",
                "default": true
              }
            },
            {
              "name": "response_deadline",
              "type": "Date",
              "attributes": {
                "string": "Response Deadline",
                "tracking": true
              }
            },
            {
              "name": "response_date",
              "type": "Date",
              "attributes": {
                "string": "Response Date",
                "tracking": true
              }
            },
            {
              "name": "response_notes",
              "type": "Text",
              "attributes": {
                "string": "Response Notes",
                "tracking": true
              }
            }
          ],
          "methods": [
            {
              "name": "action_acknowledge",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_start_progress",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_resolve",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_close",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "create",
              "decorators": [
                "<ast.Attribute object at 0x76cfff85ef10>"
              ],
              "args": [
                "self",
                "vals_list"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "customer.feedback",
            "_description": "Customer Feedback",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "feedback_date desc, name",
            "_rec_name": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Feedback Reference",
            "required": true,
            "tracking": true,
            "default": "<ast.Lambda object at 0x76cfff874c10>",
            "copy": false
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Feedback Details",
            "tracking": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff86f010>",
            "required": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Assigned User",
            "default": "<ast.Lambda object at 0x76cfff86da10>",
            "tracking": true
          }
        },
        {
          "name": "customer_id",
          "type": "Many2one",
          "attributes": {
            "string": "Customer",
            "required": true,
            "tracking": true,
            "domain": [
              [
                "is_company",
                "=",
                true
              ]
            ]
          }
        },
        {
          "name": "contact_person",
          "type": "Many2one",
          "attributes": {
            "string": "Contact Person",
            "domain": [
              [
                "is_company",
                "=",
                false
              ]
            ],
            "tracking": true
          }
        },
        {
          "name": "feedback_date",
          "type": "Date",
          "attributes": {
            "string": "Feedback Date",
            "default": "<ast.Attribute object at 0x76cfff856910>",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "feedback_type",
          "type": "Selection",
          "attributes": {
            "string": "Feedback Type",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "service_area",
          "type": "Selection",
          "attributes": {
            "string": "Service Area",
            "tracking": true
          }
        },
        {
          "name": "rating",
          "type": "Selection",
          "attributes": {
            "string": "Rating",
            "tracking": true
          }
        },
        {
          "name": "satisfaction_level",
          "type": "Selection",
          "attributes": {
            "string": "Satisfaction Level",
            "tracking": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "Status",
            "default": "new",
            "tracking": true,
            "required": true
          }
        },
        {
          "name": "priority",
          "type": "Selection",
          "attributes": {
            "string": "Priority",
            "default": "normal",
            "tracking": true
          }
        },
        {
          "name": "response_required",
          "type": "Boolean",
          "attributes": {
            "string": "Response Required",
            "default": true
          }
        },
        {
          "name": "response_deadline",
          "type": "Date",
          "attributes": {
            "string": "Response Deadline",
            "tracking": true
          }
        },
        {
          "name": "response_date",
          "type": "Date",
          "attributes": {
            "string": "Response Date",
            "tracking": true
          }
        },
        {
          "name": "response_notes",
          "type": "Text",
          "attributes": {
            "string": "Response Notes",
            "tracking": true
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "customer.feedback"
    },
    "records_department.py": {
      "filename": "records_department.py",
      "classes": [
        {
          "name": "RecordsDepartment",
          "bases": [
            "<ast.Attribute object at 0x76cfff85fd90>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Department Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "code",
              "type": "Char",
              "attributes": {
                "string": "Department Code",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {
                "string": "Department Description",
                "tracking": true
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "string": "Company",
                "default": "<ast.Lambda object at 0x76cfff881ad0>",
                "required": true
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "string": "Created By",
                "default": "<ast.Lambda object at 0x76cfff842b50>",
                "tracking": true
              }
            },
            {
              "name": "partner_id",
              "type": "Many2one",
              "attributes": {
                "string": "Organization",
                "tracking": true,
                "domain": [
                  [
                    "is_company",
                    "=",
                    true
                  ]
                ],
                "help": "Parent organization that owns this department"
              }
            },
            {
              "name": "department_manager_id",
              "type": "Many2one",
              "attributes": {
                "string": "Department Manager",
                "tracking": true
              }
            },
            {
              "name": "records_coordinator_id",
              "type": "Many2one",
              "attributes": {
                "string": "Records Coordinator",
                "tracking": true
              }
            },
            {
              "name": "email",
              "type": "Char",
              "attributes": {
                "string": "Department Email",
                "tracking": true
              }
            },
            {
              "name": "phone",
              "type": "Char",
              "attributes": {
                "string": "Department Phone",
                "tracking": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {
                "string": "Notes"
              }
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff86a690>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_deactivate",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.department",
            "_description": "Records Department",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name",
            "_rec_name": "name",
            "_sql_constraints": [
              [
                "code_uniq",
                "unique(code, company_id)",
                "Department code must be unique per company!"
              ]
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Department Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "code",
          "type": "Char",
          "attributes": {
            "string": "Department Code",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {
            "string": "Department Description",
            "tracking": true
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "string": "Company",
            "default": "<ast.Lambda object at 0x76cfff881ad0>",
            "required": true
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "string": "Created By",
            "default": "<ast.Lambda object at 0x76cfff842b50>",
            "tracking": true
          }
        },
        {
          "name": "partner_id",
          "type": "Many2one",
          "attributes": {
            "string": "Organization",
            "tracking": true,
            "domain": [
              [
                "is_company",
                "=",
                true
              ]
            ],
            "help": "Parent organization that owns this department"
          }
        },
        {
          "name": "department_manager_id",
          "type": "Many2one",
          "attributes": {
            "string": "Department Manager",
            "tracking": true
          }
        },
        {
          "name": "records_coordinator_id",
          "type": "Many2one",
          "attributes": {
            "string": "Records Coordinator",
            "tracking": true
          }
        },
        {
          "name": "email",
          "type": "Char",
          "attributes": {
            "string": "Department Email",
            "tracking": true
          }
        },
        {
          "name": "phone",
          "type": "Char",
          "attributes": {
            "string": "Department Phone",
            "tracking": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {
            "string": "Notes"
          }
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff86a690>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.department"
    },
    "customer_inventory_report.py": {
      "filename": "customer_inventory_report.py",
      "classes": [
        {
          "name": "CustomerInventoryReport",
          "bases": [
            "<ast.Attribute object at 0x76cfffa44a10>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfffa46d50>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff9d4a90>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfff86df10>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "customer.inventory.report",
            "_description": "Customer Inventory Report",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfffa46d50>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff9d4a90>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfff86df10>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "customer.inventory.report"
    },
    "records_policy_version.py": {
      "filename": "records_policy_version.py",
      "classes": [
        {
          "name": "RecordsPolicyVersion",
          "bases": [
            "<ast.Attribute object at 0x76cfff882650>"
          ],
          "fields": [
            {
              "name": "name",
              "type": "Char",
              "attributes": {
                "string": "Name",
                "required": true,
                "tracking": true
              }
            },
            {
              "name": "company_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff881050>"
              }
            },
            {
              "name": "user_id",
              "type": "Many2one",
              "attributes": {
                "default": "<ast.Lambda object at 0x76cfff880150>"
              }
            },
            {
              "name": "active",
              "type": "Boolean",
              "attributes": {
                "default": true
              }
            },
            {
              "name": "state",
              "type": "Selection",
              "attributes": {
                "string": "State",
                "default": "draft",
                "tracking": true
              }
            },
            {
              "name": "description",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "notes",
              "type": "Text",
              "attributes": {}
            },
            {
              "name": "date",
              "type": "Date",
              "attributes": {
                "default": "<ast.Attribute object at 0x76cfffa2b510>"
              }
            }
          ],
          "methods": [
            {
              "name": "action_confirm",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            },
            {
              "name": "action_done",
              "decorators": [],
              "args": [
                "self"
              ],
              "returns": null
            }
          ],
          "model_attributes": {
            "_name": "records.policy.version",
            "_description": "Records Retention Policy Version History",
            "_inherit": [
              "mail.thread",
              "mail.activity.mixin"
            ],
            "_order": "name"
          }
        }
      ],
      "fields": [
        {
          "name": "name",
          "type": "Char",
          "attributes": {
            "string": "Name",
            "required": true,
            "tracking": true
          }
        },
        {
          "name": "company_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff881050>"
          }
        },
        {
          "name": "user_id",
          "type": "Many2one",
          "attributes": {
            "default": "<ast.Lambda object at 0x76cfff880150>"
          }
        },
        {
          "name": "active",
          "type": "Boolean",
          "attributes": {
            "default": true
          }
        },
        {
          "name": "state",
          "type": "Selection",
          "attributes": {
            "string": "State",
            "default": "draft",
            "tracking": true
          }
        },
        {
          "name": "description",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "notes",
          "type": "Text",
          "attributes": {}
        },
        {
          "name": "date",
          "type": "Date",
          "attributes": {
            "default": "<ast.Attribute object at 0x76cfffa2b510>"
          }
        }
      ],
      "methods": [],
      "imports": [],
      "inheritance": [
        "mail.thread",
        "mail.activity.mixin"
      ],
      "decorators": [],
      "model_name": "records.policy.version"
    }
  },
  "fields": {},
  "views": {
    "views/records_management_base_menus.xml": {
      "filename": "views/records_management_base_menus.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/records_document_type_views.xml": {
      "filename": "views/records_document_type_views.xml",
      "records": [
        {
          "id": "view_records_document_type_list",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.type.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document.type"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_document_type_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.type.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document.type"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_document_type_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.type.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document.type"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_document_type_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.type.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document.type"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_records_document_type",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Types"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.document.type"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "list,kanban,form"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/pickup_request_views.xml": {
      "filename": "views/pickup_request_views.xml",
      "records": [
        {
          "id": "action_pickup_request",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Pickup Requests"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "pickup.request"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "list,form"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 1,
      "models_referenced": [
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/document_retrieval_menus.xml": {
      "filename": "views/document_retrieval_menus.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/shredding_rates_views.xml": {
      "filename": "views/shredding_rates_views.xml",
      "records": [
        {
          "id": "view_shredding_base_rates_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.base.rates.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.base.rates"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_shredding_base_rates_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.base.rates.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.base.rates"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_shredding_base_rates",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Base Rates"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "shredding.base.rates"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            }
          ]
        },
        {
          "id": "view_shredding_customer_rates_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.customer.rates.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.customer.rates"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_shredding_customer_rates_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.customer.rates.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.customer.rates"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_shredding_customer_rates",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Shredding Rates"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "shredding.customer.rates"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/location_report_wizard_views.xml": {
      "filename": "views/location_report_wizard_views.xml",
      "records": [
        {
          "id": "view_location_report_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.location.report.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.location.report.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 1,
      "models_referenced": [
        "ir.ui.view"
      ],
      "external_ids": []
    },
    "views/visitor_pos_wizard_views.xml": {
      "filename": "views/visitor_pos_wizard_views.xml",
      "records": [
        {
          "id": "view_visitor_pos_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_visitor_pos_wizard_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_visitor_pos_wizard_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_visitor_pos_wizard_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_visitor_pos_wizard_pivot",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard.pivot"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_visitor_pos_wizard",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Visitor POS Processing"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "list,form,graph,pivot"
            },
            {
              "name": "search_view_id",
              "ref": "view_visitor_pos_wizard_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_today': 1,\n            'search_default_my_processing': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_visitor_pos_processing_wizard",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Process Walk-In Visitor"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "visitor.pos.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "view_id",
              "ref": "view_visitor_pos_wizard_form",
              "eval": "",
              "value": ""
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'default_wizard_start_time': datetime.datetime.now(),\n            'default_processed_by': uid\n        }"
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_visitor_pos_wizard_form",
        "view_visitor_pos_wizard_search"
      ]
    },
    "views/records_vehicle_views.xml": {
      "filename": "views/records_vehicle_views.xml",
      "records": [
        {
          "id": "view_records_vehicle_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.vehicle.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.vehicle"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_vehicle_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.vehicle.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.vehicle"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_vehicle_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.vehicle.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.vehicle"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_records_vehicle",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Vehicles"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.vehicle"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_records_vehicle_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 4,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_records_vehicle_search"
      ]
    },
    "views/customer_inventory_views.xml": {
      "filename": "views/customer_inventory_views.xml",
      "records": [
        {
          "id": "view_customer_inventory_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_customer_inventory_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_customer_inventory_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_customer_inventory_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_customer_inventory_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_customer_inventory_report",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udcca Customer Inventory Dashboard"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,graph"
            },
            {
              "name": "search_view_id",
              "ref": "view_customer_inventory_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_this_month': 1,\n            'search_default_confirmed': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_customer_inventory_search"
      ]
    },
    "views/file_retrieval_rates_views.xml": {
      "filename": "views/file_retrieval_rates_views.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/portal_feedback_views.xml": {
      "filename": "views/portal_feedback_views.xml",
      "records": [
        {
          "id": "view_portal_feedback_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.feedback.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_feedback_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.feedback.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_feedback_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.feedback.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_feedback_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.feedback.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_feedback_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.feedback.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_feedback_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.feedback.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_feedback_pivot",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.feedback.pivot"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_portal_feedback",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Feedback Management"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "portal.feedback"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar,graph,pivot"
            },
            {
              "name": "search_view_id",
              "ref": "view_portal_feedback_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_my_feedback': 1,\n            'search_default_new': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 8,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_portal_feedback_search"
      ]
    },
    "views/naid_compliance_views.xml": {
      "filename": "views/naid_compliance_views.xml",
      "records": [
        {
          "id": "view_naid_compliance_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "naid.compliance.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "naid.compliance"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_naid_compliance_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "naid.compliance.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "naid.compliance"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_naid_compliance_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "naid.compliance.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "naid.compliance"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_naid_compliance_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "naid.compliance.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "naid.compliance"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_naid_compliance_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "naid.compliance.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "naid.compliance"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_naid_compliance",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83c\udfc6 NAID Compliance"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "naid.compliance"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar"
            },
            {
              "name": "search_view_id",
              "ref": "view_naid_compliance_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_certified': 1,\n            'search_default_valid_certs': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_naid_compliance_search"
      ]
    },
    "views/advanced_billing_views.xml": {
      "filename": "views/advanced_billing_views.xml",
      "records": [
        {
          "id": "view_records_customer_billing_profile_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_records_customer_billing_profile_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_records_customer_billing_profile",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Billing Profiles"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            }
          ]
        },
        {
          "id": "view_records_advanced_billing_period_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.advanced.billing.period.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.advanced.billing.period"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_records_advanced_billing_period_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.advanced.billing.period.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.advanced.billing.period"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_records_advanced_billing_period",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Advanced Billing Periods"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.advanced.billing.period"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            }
          ]
        },
        {
          "id": "view_records_billing_service_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.service.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_records_billing_service",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Generate Billing"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.billing.service"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            }
          ]
        }
      ],
      "record_count": 8,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/bin_key_management_views.xml": {
      "filename": "views/bin_key_management_views.xml",
      "records": [
        {
          "id": "view_bin_key_management_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.key.management.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.key.management"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_bin_key_management_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.key.management.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.key.management"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_bin_key_management_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.key.management.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.key.management"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_bin_unlock_service_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_bin_unlock_service_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_bin_key_management",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Bin Key Management"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "bin.key.management"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,tree,form"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_bin_unlock_service",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Bin Unlock Services"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/paper_load_shipment_views.xml": {
      "filename": "views/paper_load_shipment_views.xml",
      "records": [
        {
          "id": "view_paper_load_shipment_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_load_shipment_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_load_shipment_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_load_shipment_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_paper_load_shipment",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Load Shipments"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,tree,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_paper_load_shipment_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_paper_load_shipment_search"
      ]
    },
    "views/field_label_customization_views.xml": {
      "filename": "views/field_label_customization_views.xml",
      "records": [
        {
          "id": "view_field_label_customization_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "field.label.customization.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "field.label.customization"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_field_label_customization_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "field.label.customization.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "field.label.customization"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_field_label_customization_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "field.label.customization.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "field.label.customization"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_field_label_customization",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Field Label Customizations"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "field.label.customization"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_transitory_field_config_form_enhanced",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "transitory.field.config.form.enhanced"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "transitory.field.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_partner_form_field_customization",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.form.field.customization"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.view_partner_form",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "base.view_partner_form"
      ]
    },
    "views/partner_bin_key_views.xml": {
      "filename": "views/partner_bin_key_views.xml",
      "records": [
        {
          "id": "view_res_partner_tree_key_management",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.tree.key.management"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.view_partner_tree",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_res_partner_form_key_management",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.form.key.management"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.view_partner_form",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n\n            \n            "
            }
          ]
        },
        {
          "id": "view_res_partner_kanban_key_management",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.kanban.key.management"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.res_partner_kanban_view",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n\n            \n            "
            }
          ]
        },
        {
          "id": "action_quick_key_assignment",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Quick Key Assignment"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "mobile.bin.key.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{'default_action_type': 'issue_new', 'default_contact_id': active_id}"
            }
          ]
        },
        {
          "id": "action_partner_key_assignment",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Assign Bin Key"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "mobile.bin.key.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{'default_action_type': 'update_existing', 'default_contact_id': active_id}"
            },
            {
              "name": "binding_model_id",
              "ref": "base.model_res_partner",
              "eval": "",
              "value": ""
            },
            {
              "name": "binding_view_types",
              "ref": "",
              "eval": "",
              "value": "form,list"
            }
          ]
        },
        {
          "id": "view_res_partner_filter_key_management",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.search.key.management"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.view_res_partner_filter",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n\n            \n            "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "base.res_partner_kanban_view",
        "base.view_partner_form",
        "base.model_res_partner",
        "base.view_res_partner_filter",
        "base.view_partner_tree"
      ]
    },
    "views/key_restriction_views.xml": {
      "filename": "views/key_restriction_views.xml",
      "records": [
        {
          "id": "view_partner_form_key_restriction",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.form.key.restriction"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.view_partner_form",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_partner_tree_key_restriction",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.tree.key.restriction"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.view_partner_tree",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_key_restriction_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "key.restriction.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "key.restriction.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_bin_unlock_service_form_key_restriction",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service.form.key.restriction"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service"
            },
            {
              "name": "inherit_id",
              "ref": "records_management.view_bin_unlock_service_form",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            \n            "
            }
          ]
        },
        {
          "id": "view_bin_unlock_service_tree_key_restriction",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service.tree.key.restriction"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service"
            },
            {
              "name": "inherit_id",
              "ref": "records_management.view_bin_unlock_service_tree",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_partner_search_key_restriction",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "res.partner.search.key.restriction"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "res.partner"
            },
            {
              "name": "inherit_id",
              "ref": "base.view_res_partner_filter",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_bin_unlock_service_search_key_restriction",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service.search.key.restriction"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "bin.unlock.service"
            },
            {
              "name": "inherit_id",
              "ref": "records_management.view_bin_unlock_service_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view"
      ],
      "external_ids": [
        "records_management.view_bin_unlock_service_tree",
        "records_management.view_bin_unlock_service_search",
        "base.view_partner_form",
        "records_management.view_bin_unlock_service_form",
        "base.view_res_partner_filter",
        "base.view_partner_tree"
      ]
    },
    "views/paper_recycling_menus.xml": {
      "filename": "views/paper_recycling_menus.xml",
      "records": [
        {
          "id": "action_paper_recycling_dashboard",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Recycling Dashboard"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "paper.load.shipment"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,tree,form"
            },
            {
              "name": "view_id",
              "ref": "view_paper_load_shipment_kanban",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain",
              "ref": "",
              "eval": "",
              "value": "[('status', 'in', ['draft', 'scheduled', 'ready_pickup', 'in_transit'])]"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{'search_default_group_status': 1}"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 1,
      "models_referenced": [
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_paper_load_shipment_kanban"
      ]
    },
    "views/records_container_type_converter_views.xml": {
      "filename": "views/records_container_type_converter_views.xml",
      "records": [
        {
          "id": "view_container_type_converter_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.container.type.converter.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.container.type.converter"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_container_type_converter",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Bulk Convert Container Types"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.container.type.converter"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            }
          ]
        }
      ],
      "record_count": 2,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/shredding_inventory_views.xml": {
      "filename": "views/shredding_inventory_views.xml",
      "records": [
        {
          "id": "view_shredding_inventory_item_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.inventory.item.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.inventory.item"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_shredding_inventory_item_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.inventory.item.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.inventory.item"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_shredding_inventory_item",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Inventory Items"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "shredding.inventory.item"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            }
          ]
        },
        {
          "id": "view_shredding_picklist_item_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.picklist.item.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.picklist.item"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_shredding_picklist_item_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.picklist.item.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.picklist.item"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_shredding_picklist_item",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Picklist Items"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "shredding.picklist.item"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/portal_request_views.xml": {
      "filename": "views/portal_request_views.xml",
      "records": [
        {
          "id": "view_portal_request_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.request.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.request"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_request_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.request.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.request"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_request_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.request.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.request"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_request_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.request.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.request"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_portal_request_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "portal.request.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "portal.request"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_portal_request",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83c\udf10 Portal Requests"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "portal.request"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar"
            },
            {
              "name": "search_view_id",
              "ref": "view_portal_request_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_in_progress': 1,\n            'search_default_pending_approval': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_portal_request_search"
      ]
    },
    "views/barcode_menus.xml": {
      "filename": "views/barcode_menus.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/document_retrieval_work_order_views.xml": {
      "filename": "views/document_retrieval_work_order_views.xml",
      "records": [
        {
          "id": "view_document_retrieval_work_order_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_document_retrieval_work_order_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_document_retrieval_work_order_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_document_retrieval_work_order_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_document_retrieval_work_order",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Retrieval Work Orders"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,tree,form"
            },
            {
              "name": "view_id",
              "ref": "view_document_retrieval_work_order_kanban",
              "eval": "",
              "value": ""
            },
            {
              "name": "search_view_id",
              "ref": "view_document_retrieval_work_order_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_document_retrieval_work_order_search",
        "view_document_retrieval_work_order_kanban"
      ]
    },
    "views/pos_config_views.xml": {
      "filename": "views/pos_config_views.xml",
      "records": [
        {
          "id": "view_pos_config_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "pos.config.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "pos.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_pos_config_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "pos.config.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "pos.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_pos_config_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "pos.config.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "pos.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_pos_config_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "pos.config.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "pos.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_pos_config_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "pos.config.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "pos.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_pos_config_pivot",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "pos.config.pivot"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "pos.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_pos_config_records",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83c\udfea POS Configuration"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "pos.config"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,graph,pivot"
            },
            {
              "name": "search_view_id",
              "ref": "view_pos_config_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_active': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_pos_config_search"
      ]
    },
    "views/shredding_service_views.xml": {
      "filename": "views/shredding_service_views.xml",
      "records": [
        {
          "id": "shredding_service_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.service.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        }
      ],
      "record_count": 1,
      "models_referenced": [
        "ir.ui.view"
      ],
      "external_ids": []
    },
    "views/records_tag_views.xml": {
      "filename": "views/records_tag_views.xml",
      "records": [
        {
          "id": "records_tag_tree_view_simple",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.tag.list.simple"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.tag"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "records_tag_form_view_simple",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.tag.form.simple"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.tag"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "records_tag_search_view_simple",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.tag.search.simple"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.tag"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_records_tag_simple",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Tags"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.tag"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "list,form"
            },
            {
              "name": "view_id",
              "ref": "records_tag_tree_view_simple",
              "eval": "",
              "value": ""
            },
            {
              "name": "search_view_id",
              "ref": "records_tag_search_view_simple",
              "eval": "",
              "value": ""
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 4,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "records_tag_search_view_simple",
        "records_tag_tree_view_simple"
      ]
    },
    "views/records_container_views.xml": {
      "filename": "views/records_container_views.xml",
      "records": [
        {
          "id": "view_records_container_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.container.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_container_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.container.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_container_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.container.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_container_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.container.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_container_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.container.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_container_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.container.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_records_container",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udce6 Storage Containers"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar,graph"
            },
            {
              "name": "search_view_id",
              "ref": "view_records_container_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_stored': 1,\n            'search_default_this_year': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_records_container_search"
      ]
    },
    "views/fsm_reschedule_wizard_views.xml": {
      "filename": "views/fsm_reschedule_wizard_views.xml",
      "records": [
        {
          "id": "view_fsm_reschedule_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "fsm.reschedule.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "fsm.reschedule.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_fsm_reschedule_wizard",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Reschedule Task"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "fsm.reschedule.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            }
          ]
        }
      ],
      "record_count": 2,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/departmental_billing_menus.xml": {
      "filename": "views/departmental_billing_menus.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/stock_lot_views.xml": {
      "filename": "views/stock_lot_views.xml",
      "records": [
        {
          "id": "view_stock_lot_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "stock.lot.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "stock.lot"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_stock_lot_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "stock.lot.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "stock.lot"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_stock_lot_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "stock.lot.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "stock.lot"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_stock_lot_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "stock.lot.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "stock.lot"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_stock_lot",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udce6 Serial Numbers / Lots"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "stock.lot"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_stock_lot_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_in_stock': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_stock_lot_search"
      ]
    },
    "views/customer_billing_profile_views.xml": {
      "filename": "views/customer_billing_profile_views.xml",
      "records": [
        {
          "id": "view_customer_billing_profile_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_customer_billing_profile_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_customer_billing_profile_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_customer_billing_profile",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Billing Profiles"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.customer.billing.profile"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_customer_billing_profile_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_billing_contact_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.contact.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.contact"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_billing_contact_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.contact.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.contact"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_billing_contact",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Billing Contacts"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.billing.contact"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_customer_billing_profile_search"
      ]
    },
    "views/permanent_flag_wizard_views.xml": {
      "filename": "views/permanent_flag_wizard_views.xml",
      "records": [
        {
          "id": "view_permanent_flag_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.permanent.flag.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.permanent.flag.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 1,
      "models_referenced": [
        "ir.ui.view"
      ],
      "external_ids": []
    },
    "views/paper_bale_recycling_views.xml": {
      "filename": "views/paper_bale_recycling_views.xml",
      "records": [
        {
          "id": "view_paper_bale_recycling_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_bale_recycling_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_bale_recycling_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_bale_recycling_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_paper_bale_recycling",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Bales"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "paper.bale.recycling"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,tree,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_paper_bale_recycling_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_paper_bale_recycling_search"
      ]
    },
    "views/records_retention_policy_views.xml": {
      "filename": "views/records_retention_policy_views.xml",
      "records": [
        {
          "id": "view_records_retention_policy_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.retention.policy.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.retention.policy"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_records_retention_policy_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.retention.policy.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.retention.policy"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_records_retention_policy_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.retention.policy.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.retention.policy"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_records_retention_policy",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Retention Policies"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.retention.policy"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "list,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_records_retention_policy_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        }
      ],
      "record_count": 4,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_records_retention_policy_search"
      ]
    },
    "views/paper_bale_views.xml": {
      "filename": "views/paper_bale_views.xml",
      "records": [
        {
          "id": "view_paper_bale_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_bale_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_bale_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_paper_bale_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "paper.bale.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "paper.bale"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_paper_bale",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udce6 Paper Bales"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "paper.bale"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_paper_bale_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_this_month': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_paper_bale_search"
      ]
    },
    "views/portal_feedback_menus.xml": {
      "filename": "views/portal_feedback_menus.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/records_location_views.xml": {
      "filename": "views/records_location_views.xml",
      "records": [
        {
          "id": "view_records_location_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.location.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.location"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_location_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.location.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.location"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_location_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.location.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.location"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_location_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.location.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.location"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_records_location",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83c\udfe2 Storage Locations"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.location"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_records_location_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_active': 1,\n            'search_default_available_space': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_records_location_search"
      ]
    },
    "views/product_template_views.xml": {
      "filename": "views/product_template_views.xml",
      "records": [
        {
          "id": "view_product_template_records_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "product.template.records.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "product.template"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_product_template_records_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "product.template.records.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "product.template"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_product_template_records_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "product.template.records.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "product.template"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_product_template_records_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "product.template.records.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "product.template"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_product_template_records",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udcbc Records Management Products"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "product.template"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_product_template_records_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_active': 1,\n            'search_default_sale_ok': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_product_template_records_search"
      ]
    },
    "views/hard_drive_scan_views.xml": {
      "filename": "views/hard_drive_scan_views.xml",
      "records": [
        {
          "id": "view_hard_drive_scan_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "hard_drive.scan.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "hard_drive.scan.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_shredding_hard_drive_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.hard_drive.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.hard_drive"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_shredding_hard_drive_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.hard_drive.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.hard_drive"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_shredding_hard_drive",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Hard Drives"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "shredding.hard_drive"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "list,form"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_hard_drive_scan_customer",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Scan at Customer Location"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "hard_drive.scan.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{'default_scan_location': 'customer'}"
            }
          ]
        },
        {
          "id": "action_hard_drive_scan_facility",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Verify at Facility"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "hard_drive.scan.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{'default_scan_location': 'facility'}"
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/portal_request_menus.xml": {
      "filename": "views/portal_request_menus.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/shredding_views.xml": {
      "filename": "views/shredding_views.xml",
      "records": [
        {
          "id": "view_shredding_service_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.service.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_shredding_service_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.service.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_shredding_service_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.service.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_shredding_service_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.service.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_shredding_service_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.service.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_shredding_service_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "shredding.service.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_shredding_service",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udca5 NAID Shredding Services"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar,graph"
            },
            {
              "name": "search_view_id",
              "ref": "view_shredding_service_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_naid_verified': 1,\n            'search_default_this_month': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_shredding_service_search"
      ]
    },
    "views/fsm_task_views.xml": {
      "filename": "views/fsm_task_views.xml",
      "records": [
        {
          "id": "view_fsm_task_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "fsm.task.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "fsm.task"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_fsm_task_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "fsm.task.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "fsm.task"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_fsm_task_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "fsm.task.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "fsm.task"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "fsm_task_form_view_inherit",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "fsm.task.form.inherit"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "fsm.task"
            },
            {
              "name": "inherit_id",
              "ref": "industry_fsm.project_task_view_form",
              "eval": "",
              "value": ""
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_fsm_task_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "fsm.task.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "fsm.task"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_fsm_task_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "fsm.task.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "fsm.task"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_fsm_task_records",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udd27 Field Service Tasks"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "fsm.task"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar"
            },
            {
              "name": "search_view_id",
              "ref": "view_fsm_task_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_this_week': 1,\n            'search_default_scheduled': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "industry_fsm.project_task_view_form",
        "view_fsm_task_search"
      ]
    },
    "views/rate_management_views.xml": {
      "filename": "views/rate_management_views.xml",
      "records": [
        {
          "id": "view_base_rates_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "base.rates.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "base.rates"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_base_rates_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "base.rates.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "base.rates"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_customer_rate_profile_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "customer.rate.profile.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "customer.rate.profile"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_customer_rate_profile_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "customer.rate.profile.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "customer.rate.profile"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_revenue_forecaster_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "revenue.forecaster.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "revenue.forecaster"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "view_rate_change_confirmation_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "rate.change.confirmation.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "rate.change.confirmation.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_base_rates",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Base Service Rates"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "base.rates"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "domain",
              "ref": "",
              "eval": "",
              "value": "[]"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_customer_rate_profiles",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Rate Profiles"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "customer.rate.profile"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "domain",
              "ref": "",
              "eval": "",
              "value": "[]"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n                "
            }
          ]
        },
        {
          "id": "action_revenue_forecaster",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Revenue Forecaster"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "revenue.forecaster"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            }
          ]
        },
        {
          "id": "action_rate_analysis_wizard",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Rate Analysis"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "rate.analysis.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            }
          ]
        }
      ],
      "record_count": 10,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    },
    "views/departmental_billing_views.xml": {
      "filename": "views/departmental_billing_views.xml",
      "records": [
        {
          "id": "view_department_billing_contact_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_department_billing_contact_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_department_billing_contact_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_department_billing_contact_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_department_billing_contact_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_department_billing",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udcb0 Departmental Billing"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.department.billing.contact"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,graph"
            },
            {
              "name": "search_view_id",
              "ref": "view_department_billing_contact_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_active': 1,\n            'search_default_under_budget': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_department_billing_contact_search"
      ]
    },
    "views/barcode_views.xml": {
      "filename": "views/barcode_views.xml",
      "records": [
        {
          "id": "view_barcode_product_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "barcode.product.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "barcode.product"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_barcode_product_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "barcode.product.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "barcode.product"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n        "
            }
          ]
        },
        {
          "id": "view_barcode_product_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "barcode.product.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "barcode.product"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n        "
            }
          ]
        },
        {
          "id": "view_barcode_product_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "barcode.product.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "barcode.product"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n        "
            }
          ]
        },
        {
          "id": "view_barcode_product_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "barcode.product.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "barcode.product"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n        "
            }
          ]
        },
        {
          "id": "view_barcode_product_pivot",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "barcode.product.pivot"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "barcode.product"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n        "
            }
          ]
        },
        {
          "id": "action_barcode_scanner",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udce6 Barcode Product Management"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "barcode.product"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,graph,pivot"
            },
            {
              "name": "search_view_id",
              "ref": "view_barcode_product_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_active': 1,\n            'search_default_storage_boxes': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n        "
            }
          ]
        }
      ],
      "record_count": 7,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_barcode_product_search"
      ]
    },
    "views/billing_views.xml": {
      "filename": "views/billing_views.xml",
      "records": [
        {
          "id": "view_billing_config_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.config.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_billing_config_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.config.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_billing_config_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.config.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_billing_config_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.config.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_billing_config_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.config.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.billing.config"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_billing_config",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udcb3 Billing Configuration"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.billing.config"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar"
            },
            {
              "name": "search_view_id",
              "ref": "view_billing_config_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_active': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_billing_config_search"
      ]
    },
    "views/mobile_bin_key_wizard_views.xml": {
      "filename": "views/mobile_bin_key_wizard_views.xml",
      "records": [
        {
          "id": "view_mobile_bin_key_wizard_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "mobile.bin.key.wizard.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "mobile.bin.key.wizard"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_mobile_bin_key_wizard",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Mobile Key Management"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "mobile.bin.key.wizard"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            }
          ]
        },
        {
          "id": "action_mobile_key_shortcut",
          "model": "ir.actions.server",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udd11 Quick Key Access"
            },
            {
              "name": "model_id",
              "ref": "model_mobile_bin_key_wizard",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "\naction = {\n    'type': 'ir.actions.act_window',\n    'name': 'Mobile Key Management',\n    'res_model': 'mobile.bin.key.wizard',\n    'view_mode': 'form',\n    'target': 'new',\n    'context': {'default_action_type': 'issue_new'}\n}\n        "
            }
          ]
        }
      ],
      "record_count": 3,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window",
        "ir.actions.server"
      ],
      "external_ids": [
        "model_mobile_bin_key_wizard"
      ]
    },
    "views/load_views.xml": {
      "filename": "views/load_views.xml",
      "records": [
        {
          "id": "view_load_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "load.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_load_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "load.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_load_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "load.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_load_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "load.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_load_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "load.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_load_graph",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "load.graph"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_load_pivot",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "load.pivot"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_load",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ufffd Paper Bale Load Management"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "load"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar,graph,pivot"
            },
            {
              "name": "search_view_id",
              "ref": "view_load_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_today': 1,\n            'search_default_my_loads': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 8,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_load_search"
      ]
    },
    "views/records_digital_scan_views.xml": {
      "filename": "views/records_digital_scan_views.xml",
      "records": [
        {
          "id": "view_records_digital_scan_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.digital.scan.tree"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.digital.scan"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_digital_scan_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.digital.scan.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.digital.scan"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_digital_scan_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.digital.scan.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.digital.scan"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_records_digital_scan",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Digital Scans"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.digital.scan"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "tree,form"
            },
            {
              "name": "search_view_id",
              "ref": "view_records_digital_scan_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 4,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_records_digital_scan_search"
      ]
    },
    "views/records_management_menus.xml": {
      "filename": "views/records_management_menus.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "views/records_document_views.xml": {
      "filename": "views/records_document_views.xml",
      "records": [
        {
          "id": "view_records_document_kanban",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.kanban"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_document_tree",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.list"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_document_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_document_calendar",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.calendar"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "view_records_document_search",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.document.search"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_records_document",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "\ud83d\udcc4 Document Management"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "kanban,list,form,calendar"
            },
            {
              "name": "search_view_id",
              "ref": "view_records_document_search",
              "eval": "",
              "value": ""
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{\n            'search_default_active': 1\n        }"
            },
            {
              "name": "help",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": [
        "view_records_document_search"
      ]
    },
    "views/key_restriction_checker_views.xml": {
      "filename": "views/key_restriction_checker_views.xml",
      "records": [
        {
          "id": "view_key_restriction_checker_form",
          "model": "ir.ui.view",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "key.restriction.checker.form"
            },
            {
              "name": "model",
              "ref": "",
              "eval": "",
              "value": "key.restriction.checker"
            },
            {
              "name": "arch",
              "ref": "",
              "eval": "",
              "value": "\n            "
            }
          ]
        },
        {
          "id": "action_key_restriction_checker",
          "model": "ir.actions.act_window",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Key Restriction Checker"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "ir.actions.act_window"
            },
            {
              "name": "res_model",
              "ref": "",
              "eval": "",
              "value": "key.restriction.checker"
            },
            {
              "name": "view_mode",
              "ref": "",
              "eval": "",
              "value": "form"
            },
            {
              "name": "target",
              "ref": "",
              "eval": "",
              "value": "new"
            },
            {
              "name": "context",
              "ref": "",
              "eval": "",
              "value": "{}"
            }
          ]
        }
      ],
      "record_count": 2,
      "models_referenced": [
        "ir.ui.view",
        "ir.actions.act_window"
      ],
      "external_ids": []
    }
  },
  "security": {
    "security/records_management_security.xml": {
      "filename": "security/records_management_security.xml",
      "records": [
        {
          "id": "group_records_user",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records User"
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('base.group_user'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_records_manager",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Manager"
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_user'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_naid_compliance_officer",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Officer"
            },
            {
              "name": "users",
              "ref": "",
              "eval": "[(4, ref('base.user_admin'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_naid_security_officer",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Security Officer"
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_naid_auditor",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Auditor"
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_user'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_naid_compliance_manager",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Manager"
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('records_management.group_naid_compliance_officer'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_naid_destruction_operator",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Destruction Operator"
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_user'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_shredding_service_granular",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Granular Shredding Service Access"
            },
            {
              "name": "model_id",
              "ref": "model_shredding_service",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('company_id', '=', user.company_id.id)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_portal'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_feedback_admin",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Admin Access to Feedback"
            },
            {
              "name": "model_id",
              "ref": "survey.model_survey_user_input",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_naid_compliance_officer'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_feedback_portal",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal User Feedback Access"
            },
            {
              "name": "model_id",
              "ref": "survey.model_survey_user_input",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('partner_id', '=', user.partner_id.id)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_portal'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_invoice_portal",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Access to Invoices"
            },
            {
              "name": "model_id",
              "ref": "account.model_account_move",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('partner_id', '=', user.partner_id.id), ('move_type', '=', 'out_invoice')]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_portal'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_quote_portal",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Access to Quotes"
            },
            {
              "name": "model_id",
              "ref": "sale.model_sale_order",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('partner_id', '=', user.partner_id.id)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_portal'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_cert_portal",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Access to Certificates"
            },
            {
              "name": "model_id",
              "ref": "model_shredding_service",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('company_id', '=', user.company_id.id), ('state', '=', 'done')]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_portal'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_comms_portal",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Access to Communications"
            },
            {
              "name": "model_id",
              "ref": "mail.model_mail_message",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('res_id', '=', user.partner_id.id), ('model', '=', 'res.partner')]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_portal'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 14,
      "models_referenced": [
        "res.groups",
        "ir.rule"
      ],
      "external_ids": [
        "sale.model_sale_order",
        "account.model_account_move",
        "model_shredding_service",
        "survey.model_survey_user_input",
        "mail.model_mail_message"
      ]
    },
    "security/groups.xml": {
      "filename": "security/groups.xml",
      "records": [
        {
          "id": "group_warehouse_manager",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Warehouse Manager"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_inventory",
              "eval": "",
              "value": ""
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('stock.group_stock_manager'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_shredding_technician",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Technician"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_inventory",
              "eval": "",
              "value": ""
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('stock.group_stock_user'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_customer_service",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Service"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_user_type",
              "eval": "",
              "value": ""
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('base.group_user'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_records_user",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records User"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_inventory",
              "eval": "",
              "value": ""
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('stock.group_stock_user'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "group_records_manager",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Manager"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_inventory",
              "eval": "",
              "value": ""
            },
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('group_records_user')), (4, ref('stock.group_stock_manager'))]",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "res.groups"
      ],
      "external_ids": [
        "base.module_category_inventory",
        "base.module_category_user_type"
      ]
    },
    "security/ir_rule.xml": {
      "filename": "security/ir_rule.xml",
      "records": [
        {
          "id": "customer_inventory_report_rule_user",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "User: Access Customer Inventory Report"
            },
            {
              "name": "model_id",
              "ref": "model_customer_inventory_report",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_user'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "pickup_request_rule_user",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "User: Access Pickup Request"
            },
            {
              "name": "model_id",
              "ref": "model_pickup_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('base.group_user'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 2,
      "models_referenced": [
        "ir.rule"
      ],
      "external_ids": [
        "model_pickup_request",
        "model_customer_inventory_report"
      ]
    },
    "security/security.xml": {
      "filename": "security/security.xml",
      "records": [
        {
          "id": "rule_pickup_request_user_read_own",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Pickup Request: Read Own"
            },
            {
              "name": "model_id",
              "ref": "model_pickup_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('customer_id', '=', user.partner_id.id)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_user'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_pickup_request_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Pickup Request: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "model_pickup_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_shredding_service_user_read_own",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Service: Read Own"
            },
            {
              "name": "model_id",
              "ref": "model_shredding_service",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('customer_id', '=', user.partner_id.id)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_user'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_shredding_service_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Service: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "model_shredding_service",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_sms_validation_user_read_own",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Stock Move SMS Validation: Read Own"
            },
            {
              "name": "model_id",
              "ref": "model_stock_move_sms_validation",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[('create_uid', '=', user.id)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_user'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_sms_validation_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Stock Move SMS Validation: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "model_stock_move_sms_validation",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_installer_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Management Installer: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "model_records_management_installer",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_scrm_records_management_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "SCRM Records Management: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "model_scrm_records_management",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_stock_lot_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Stock Lot: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "stock.model_stock_lot",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_stock_picking_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Stock Picking: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "stock.model_stock_picking",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_ir_module_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "IR Module: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "base.model_ir_module_module",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "rule_ir_actions_report_manager_all",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "IR Actions Report: Manager Full Access"
            },
            {
              "name": "model_id",
              "ref": "base.model_ir_actions_report",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('records_management.group_records_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 12,
      "models_referenced": [
        "ir.rule"
      ],
      "external_ids": [
        "stock.model_stock_picking",
        "model_pickup_request",
        "stock.model_stock_lot",
        "base.model_ir_module_module",
        "model_scrm_records_management",
        "model_stock_move_sms_validation",
        "model_shredding_service",
        "model_records_management_installer",
        "base.model_ir_actions_report"
      ]
    },
    "security/additional_models_access.xml": {
      "filename": "security/additional_models_access.xml",
      "records": [
        {
          "id": "access_records_deletion_request_user",
          "model": "ir.model.access",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "rec.del.req.user"
            },
            {
              "name": "model_id",
              "ref": "model_records_deletion_request_enhanced",
              "eval": "",
              "value": ""
            },
            {
              "name": "group_id",
              "ref": "records_management.group_records_user",
              "eval": "",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "",
              "value": "0"
            }
          ]
        },
        {
          "id": "access_records_deletion_request_manager",
          "model": "ir.model.access",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "rec.del.req.manager"
            },
            {
              "name": "model_id",
              "ref": "model_records_deletion_request_enhanced",
              "eval": "",
              "value": ""
            },
            {
              "name": "group_id",
              "ref": "records_management.group_records_manager",
              "eval": "",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "access_records_user_invitation_wizard_manager",
          "model": "ir.model.access",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.user.invitation.wizard.manager"
            },
            {
              "name": "model_id",
              "ref": "model_records_user_invitation_wizard",
              "eval": "",
              "value": ""
            },
            {
              "name": "group_id",
              "ref": "records_management.group_records_manager",
              "eval": "",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "access_records_bulk_user_import_manager",
          "model": "ir.model.access",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.bulk.user.import.manager"
            },
            {
              "name": "model_id",
              "ref": "model_records_bulk_user_import",
              "eval": "",
              "value": ""
            },
            {
              "name": "group_id",
              "ref": "records_management.group_records_manager",
              "eval": "",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "access_records_billing_config_user",
          "model": "ir.model.access",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.config.user"
            },
            {
              "name": "model_id",
              "ref": "model_records_billing_config",
              "eval": "",
              "value": ""
            },
            {
              "name": "group_id",
              "ref": "records_management.group_records_user",
              "eval": "",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "",
              "value": "0"
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "",
              "value": "0"
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "",
              "value": "0"
            }
          ]
        },
        {
          "id": "access_records_billing_config_manager",
          "model": "ir.model.access",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "records.billing.config.manager"
            },
            {
              "name": "model_id",
              "ref": "model_records_billing_config",
              "eval": "",
              "value": ""
            },
            {
              "name": "group_id",
              "ref": "records_management.group_records_manager",
              "eval": "",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "ir.model.access"
      ],
      "external_ids": [
        "records_management.group_records_user",
        "model_records_billing_config",
        "model_records_deletion_request_enhanced",
        "model_records_bulk_user_import",
        "records_management.group_records_manager",
        "model_records_user_invitation_wizard"
      ]
    },
    "security/naid_security.xml": {
      "filename": "security/naid_security.xml",
      "records": [
        {
          "id": "group_naid_security_officer",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Security Officer"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_human_resources",
              "eval": "",
              "value": ""
            },
            {
              "name": "comment",
              "ref": "",
              "eval": "",
              "value": "NAID Security Officers can review audit logs, verify compliance, and manage security policies."
            }
          ]
        },
        {
          "id": "group_naid_destruction_operator",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Destruction Operator"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_human_resources",
              "eval": "",
              "value": ""
            },
            {
              "name": "comment",
              "ref": "",
              "eval": "",
              "value": "NAID Destruction Operators can perform destruction processes and witness destruction activities."
            }
          ]
        },
        {
          "id": "group_naid_auditor",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Auditor"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_human_resources",
              "eval": "",
              "value": ""
            },
            {
              "name": "comment",
              "ref": "",
              "eval": "",
              "value": "NAID Auditors can access all audit logs and compliance reports for review purposes."
            }
          ]
        },
        {
          "id": "group_naid_compliance_manager",
          "model": "res.groups",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Manager"
            },
            {
              "name": "category_id",
              "ref": "base.module_category_human_resources",
              "eval": "",
              "value": ""
            },
            {
              "name": "comment",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Managers can manage all compliance policies, employee credentials, and audit requirements."
            }
          ]
        },
        {
          "id": "access_naid_audit_log_security_officer",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Audit Log: Security Officer"
            },
            {
              "name": "model_id",
              "ref": "model_naid_audit_log",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('group_naid_security_officer'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "access_naid_audit_log_auditor",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Audit Log: Auditor Read-Only"
            },
            {
              "name": "model_id",
              "ref": "model_naid_audit_log",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('group_naid_auditor'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "access_naid_compliance_policy_manager",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Policy: Manager"
            },
            {
              "name": "model_id",
              "ref": "model_naid_compliance_policy",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('group_naid_compliance_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "access_naid_chain_custody_operator",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Chain of Custody: Destruction Operator"
            },
            {
              "name": "model_id",
              "ref": "model_naid_chain_custody",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('group_naid_destruction_operator'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "access_hr_employee_naid_compliance",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "HR Employee NAID: Compliance Manager"
            },
            {
              "name": "model_id",
              "ref": "hr.model_hr_employee",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('group_naid_compliance_manager'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "access_hr_employee_naid_security",
          "model": "ir.rule",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "HR Employee NAID: Security Officer Read"
            },
            {
              "name": "model_id",
              "ref": "hr.model_hr_employee",
              "eval": "",
              "value": ""
            },
            {
              "name": "domain_force",
              "ref": "",
              "eval": "",
              "value": "[(1, '=', 1)]"
            },
            {
              "name": "groups",
              "ref": "",
              "eval": "[(4, ref('group_naid_security_officer'))]",
              "value": ""
            },
            {
              "name": "perm_read",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "perm_write",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_create",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "perm_unlink",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "records_management.group_records_manager",
          "model": "res.groups",
          "fields": [
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('group_naid_security_officer'))]",
              "value": ""
            }
          ]
        },
        {
          "id": "records_management.group_records_user",
          "model": "res.groups",
          "fields": [
            {
              "name": "implied_ids",
              "ref": "",
              "eval": "[(4, ref('group_naid_destruction_operator'))]",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 12,
      "models_referenced": [
        "res.groups",
        "ir.rule"
      ],
      "external_ids": [
        "model_naid_chain_custody",
        "model_naid_compliance_policy",
        "hr.model_hr_employee",
        "model_naid_audit_log",
        "base.module_category_human_resources"
      ]
    },
    "analysis": {
      "access_rules": [
        {
          "id": "access_records_container_user",
          "name": "records.container.user",
          "model_id": "model_records_container",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_container_manager",
          "name": "records.container.manager",
          "model_id": "model_records_container",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_container_portal",
          "name": "records.container.portal",
          "model_id": "model_records_container",
          "group_id": "base.group_portal",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_records_tag_user",
          "name": "records.tag.user",
          "model_id": "model_records_tag",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_tag_manager",
          "name": "records.tag.manager",
          "model_id": "model_records_tag",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_location_user",
          "name": "records.location.user",
          "model_id": "model_records_location",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_location_manager",
          "name": "records.location.manager",
          "model_id": "model_records_location",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_rec_doc_type_user",
          "name": "rec.doc.type.user",
          "model_id": "model_records_document_type",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_rec_doc_type_manager",
          "name": "rec.doc.type.manager",
          "model_id": "model_records_document_type",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_document_user",
          "name": "records.document.user",
          "model_id": "model_records_document",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_document_manager",
          "name": "records.document.manager",
          "model_id": "model_records_document",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_document_portal",
          "name": "records.document.portal",
          "model_id": "model_records_document",
          "group_id": "base.group_portal",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_records_digital_scan_user",
          "name": "records.digital.scan.user",
          "model_id": "model_records_digital_scan",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_digital_scan_manager",
          "name": "records.digital.scan.manager",
          "model_id": "model_records_digital_scan",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_vehicle_user",
          "name": "records.vehicle.user",
          "model_id": "model_records_vehicle",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_vehicle_manager",
          "name": "records.vehicle.manager",
          "model_id": "model_records_vehicle",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_retention_policy_user",
          "name": "records.retention.policy.user",
          "model_id": "model_records_retention_policy",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_retention_policy_manager",
          "name": "records.retention.policy.manager",
          "model_id": "model_records_retention_policy",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_policy_version_user",
          "name": "records.policy.version.user",
          "model_id": "model_records_policy_version",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_policy_version_manager",
          "name": "records.policy.version.manager",
          "model_id": "model_records_policy_version",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_container_movement_user",
          "name": "records.container.movement.user",
          "model_id": "model_records_container_movement",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_container_movement_manager",
          "name": "records.container.movement.manager",
          "model_id": "model_records_container_movement",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_pickup_request_user",
          "name": "pickup.request.user",
          "model_id": "model_pickup_request",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_pickup_request_manager",
          "name": "pickup.request.manager",
          "model_id": "model_pickup_request",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_pickup_request_item_user",
          "name": "pickup.request.item.user",
          "model_id": "model_pickup_request_item",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_pickup_request_item_manager",
          "name": "pickup.request.item.manager",
          "model_id": "model_pickup_request_item",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_pickup_route_user",
          "name": "pickup.route.user",
          "model_id": "model_pickup_route",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_pickup_route_manager",
          "name": "pickup.route.manager",
          "model_id": "model_pickup_route",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_shred_svc_user",
          "name": "shred.svc.user",
          "model_id": "model_shredding_service",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_shred_svc_manager",
          "name": "shred.svc.manager",
          "model_id": "model_shredding_service",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_destruction_item_user",
          "name": "destruction.item.user",
          "model_id": "model_destruction_item",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_destruction_item_manager",
          "name": "destruction.item.manager",
          "model_id": "model_destruction_item",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_work_order_shredding_user",
          "name": "work.order.shredding.user",
          "model_id": "model_work_order_shredding",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_work_order_shredding_manager",
          "name": "work.order.shredding.manager",
          "model_id": "model_work_order_shredding",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_paper_bale_user",
          "name": "paper.bale.user",
          "model_id": "model_paper_bale",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_paper_bale_manager",
          "name": "paper.bale.manager",
          "model_id": "model_paper_bale",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_paper_bale_recycling_user",
          "name": "paper.bale.recycling.user",
          "model_id": "model_paper_bale_recycling",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_paper_bale_recycling_manager",
          "name": "paper.bale.recycling.manager",
          "model_id": "model_paper_bale_recycling",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_pb_ship_user",
          "name": "pb.ship.user",
          "model_id": "model_paper_load_shipment",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_pb_ship_manager",
          "name": "pb.ship.manager",
          "model_id": "model_paper_load_shipment",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_portal_request_user",
          "name": "portal.request.user",
          "model_id": "model_portal_request",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_portal_request_manager",
          "name": "portal.request.manager",
          "model_id": "model_portal_request",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_portal_request_portal",
          "name": "portal.request.portal",
          "model_id": "model_portal_request",
          "group_id": "base.group_portal",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_customer_feedback_user",
          "name": "customer.feedback.user",
          "model_id": "model_customer_feedback",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_customer_feedback_manager",
          "name": "customer.feedback.manager",
          "model_id": "model_customer_feedback",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_customer_feedback_portal",
          "name": "customer.feedback.portal",
          "model_id": "model_customer_feedback",
          "group_id": "base.group_portal",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_visitor_pos_wiz_user",
          "name": "visitor.pos.wiz.user",
          "model_id": "model_visitor_pos_wizard",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_visitor_pos_wiz_manager",
          "name": "visitor.pos.wiz.manager",
          "model_id": "model_visitor_pos_wizard",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_visitor_user",
          "name": "visitor.user",
          "model_id": "model_visitor",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_visitor_manager",
          "name": "visitor.manager",
          "model_id": "model_visitor",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_customer_retrieval_rates_user",
          "name": "customer.retrieval.rates.user",
          "model_id": "model_customer_retrieval_rates",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_customer_retrieval_rates_manager",
          "name": "customer.retrieval.rates.manager",
          "model_id": "model_customer_retrieval_rates",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_shredding_bin_user",
          "name": "shredding.bin.user",
          "model_id": "model_shredding_bin",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_shredding_bin_manager",
          "name": "shredding.bin.manager",
          "model_id": "model_shredding_bin",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_shredding_hard_drive_user",
          "name": "shredding.hard_drive.user",
          "model_id": "model_shredding_hard_drive",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_shredding_hard_drive_manager",
          "name": "shredding.hard_drive.manager",
          "model_id": "model_shredding_hard_drive",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_billing_service_user",
          "name": "records.billing.service.user",
          "model_id": "model_records_billing_service",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_billing_service_manager",
          "name": "records.billing.service.manager",
          "model_id": "model_records_billing_service",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_field_label_customization_user",
          "name": "field.label.customization.user",
          "model_id": "model_field_label_customization",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_field_label_customization_manager",
          "name": "field.label.customization.manager",
          "model_id": "model_field_label_customization",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_field_label_customization_portal",
          "name": "field.label.customization.portal",
          "model_id": "model_field_label_customization",
          "group_id": "base.group_portal",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_bin_key_management_user",
          "name": "bin.key.management.user",
          "model_id": "model_bin_key_management",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_bin_key_management_manager",
          "name": "bin.key.management.manager",
          "model_id": "model_bin_key_management",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_bin_key_management_portal",
          "name": "bin.key.management.portal",
          "model_id": "model_bin_key_management",
          "group_id": "base.group_portal",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_partner_bin_key_user",
          "name": "partner.bin.key.user",
          "model_id": "model_partner_bin_key",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_partner_bin_key_manager",
          "name": "partner.bin.key.manager",
          "model_id": "model_partner_bin_key",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_mobile_bin_wiz_user",
          "name": "mobile.bin.wiz.user",
          "model_id": "model_mobile_bin_key_wizard",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_mobile_bin_wiz_manager",
          "name": "mobile.bin.wiz.manager",
          "model_id": "model_mobile_bin_key_wizard",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_bin_unlock_service_user",
          "name": "bin.unlock.service.user",
          "model_id": "model_bin_unlock_service",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_bin_unlock_service_manager",
          "name": "bin.unlock.service.manager",
          "model_id": "model_bin_unlock_service",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_bin_unlock_service_portal",
          "name": "bin.unlock.service.portal",
          "model_id": "model_bin_unlock_service",
          "group_id": "base.group_portal",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_naid_audit_log_user",
          "name": "naid.audit.log.user",
          "model_id": "model_naid_audit_log",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_audit_log_manager",
          "name": "naid.audit.log.manager",
          "model_id": "model_naid_audit_log",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_chain_custody_user",
          "name": "naid.chain.custody.user",
          "model_id": "model_naid_chain_custody",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_chain_custody_manager",
          "name": "naid.chain.custody.manager",
          "model_id": "model_naid_chain_custody",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_chain_of_custody_user",
          "name": "access_records_chain_of_custody_user",
          "model_id": "model_records_chain_of_custody",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_chain_of_custody_manager",
          "name": "access_records_chain_of_custody_manager",
          "model_id": "model_records_chain_of_custody",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_coc_event_user",
          "name": "naid.coc.event.user",
          "model_id": "model_naid_custody_event",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_coc_event_manager",
          "name": "naid.coc.event.manager",
          "model_id": "model_naid_custody_event",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_audit_user",
          "name": "naid.audit.user",
          "model_id": "model_naid_audit_log",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_audit_manager",
          "name": "naid.audit.manager",
          "model_id": "model_naid_audit_log",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_certificate_user",
          "name": "naid.certificate.user",
          "model_id": "model_naid_certificate",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_certificate_manager",
          "name": "naid.certificate.manager",
          "model_id": "model_naid_certificate",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_compliance_checklist_user",
          "name": "naid.compliance.checklist.user",
          "model_id": "model_naid_compliance_checklist",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_compliance_checklist_manager",
          "name": "naid.compliance.checklist.manager",
          "model_id": "model_naid_compliance_checklist",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_survey_feedback_theme_user",
          "name": "survey.feedback.theme.user",
          "model_id": "model_survey_feedback_theme",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_survey_feedback_theme_manager",
          "name": "survey.feedback.theme.manager",
          "model_id": "model_survey_feedback_theme",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_department_user",
          "name": "records.department.user",
          "model_id": "model_records_department",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_records_department_manager",
          "name": "records.department.manager",
          "model_id": "model_records_department",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_storage_department_user_user",
          "name": "records.storage.department.user.user",
          "model_id": "model_records_storage_department_user",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_records_storage_department_user_manager",
          "name": "records.storage.department.user.manager",
          "model_id": "model_records_storage_department_user",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_audit_log_user",
          "name": "records.audit.log.user",
          "model_id": "model_records_audit_log",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_records_audit_log_manager",
          "name": "records.audit.log.manager",
          "model_id": "model_records_audit_log",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_access_log_user",
          "name": "records.access.log.user",
          "model_id": "model_records_access_log",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_records_access_log_manager",
          "name": "records.access.log.manager",
          "model_id": "model_records_access_log",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_security_audit_user",
          "name": "records.security.audit.user",
          "model_id": "model_records_security_audit",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_records_security_audit_manager",
          "name": "records.security.audit.manager",
          "model_id": "model_records_security_audit",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_transitory_items_user",
          "name": "transitory.items.user",
          "model_id": "model_transitory_items",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_transitory_items_manager",
          "name": "transitory.items.manager",
          "model_id": "model_transitory_items",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_transitory_field_config_user",
          "name": "transitory.field.config.user",
          "model_id": "model_transitory_field_config",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_transitory_field_config_manager",
          "name": "transitory.field.config.manager",
          "model_id": "model_transitory_field_config",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_portal_feedback_user",
          "name": "portal.feedback.user",
          "model_id": "model_portal_feedback",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_portal_feedback_manager",
          "name": "portal.feedback.manager",
          "model_id": "model_portal_feedback",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_rec_dept_bill_cont_user",
          "name": "rec.dept.bill.cont.user",
          "model_id": "model_records_department_billing_contact",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_rec_dept_bill_cont_manager",
          "name": "rec.dept.bill.cont.manager",
          "model_id": "model_records_department_billing_contact",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_survey_improvement_action_user",
          "name": "survey.improvement.action.user",
          "model_id": "model_survey_improvement_action",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_survey_improvement_action_manager",
          "name": "survey.improvement.action.manager",
          "model_id": "model_survey_improvement_action",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_container_contents_user",
          "name": "container.contents.user",
          "model_id": "model_container_contents",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_container_contents_manager",
          "name": "container.contents.manager",
          "model_id": "model_container_contents",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_billing_user",
          "name": "records.billing.user",
          "model_id": "model_records_billing",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_billing_manager",
          "name": "records.billing.manager",
          "model_id": "model_records_billing",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_billing_config_user",
          "name": "records.billing.config.user",
          "model_id": "model_records_billing_config",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_billing_config_manager",
          "name": "records.billing.config.manager",
          "model_id": "model_records_billing_config",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_location_inspection_user",
          "name": "records.location.inspection.user",
          "model_id": "model_records_location_inspection",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_location_inspection_manager",
          "name": "records.location.inspection.manager",
          "model_id": "model_records_location_inspection",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_shredding_service_log_user",
          "name": "shredding.service.log.user",
          "model_id": "model_shredding_service_log",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "0",
          "create": "0",
          "delete": "0"
        },
        {
          "id": "access_shredding_service_log_manager",
          "name": "shredding.service.log.manager",
          "model_id": "model_shredding_service_log",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_management_base_menus_user",
          "name": "records.management.base.menus.user",
          "model_id": "model_records_management_base_menus",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_management_base_menus_manager",
          "name": "records.management.base.menus.manager",
          "model_id": "model_records_management_base_menus",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_shredding_rates_user",
          "name": "shredding.rates.user",
          "model_id": "model_shredding_rates",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_shredding_rates_manager",
          "name": "shredding.rates.manager",
          "model_id": "model_shredding_rates",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_location_report_wizard_user",
          "name": "location.report.wizard.user",
          "model_id": "model_location_report_wizard",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_location_report_wizard_manager",
          "name": "location.report.wizard.manager",
          "model_id": "model_location_report_wizard",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_customer_inventory_user",
          "name": "customer.inventory.user",
          "model_id": "model_customer_inventory",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_customer_inventory_manager",
          "name": "customer.inventory.manager",
          "model_id": "model_customer_inventory",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_revenue_forecaster_user",
          "name": "revenue.forecaster.user",
          "model_id": "model_revenue_forecaster",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_revenue_forecaster_manager",
          "name": "revenue.forecaster.manager",
          "model_id": "model_revenue_forecaster",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_customer_rate_profile_user",
          "name": "customer.rate.profile User Access",
          "model_id": "model_customer_rate_profile",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_customer_rate_profile_manager",
          "name": "customer.rate.profile Manager Access",
          "model_id": "model_customer_rate_profile",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_shredding_picklist_item_user",
          "name": "shredding.picklist.item User Access",
          "model_id": "model_shredding_picklist_item",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_shredding_picklist_item_manager",
          "name": "shredding.picklist.item Manager Access",
          "model_id": "model_shredding_picklist_item",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_stock_move_sms_validation_user",
          "name": "stock.move.sms.validation User Access",
          "model_id": "model_stock_move_sms_validation",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_stock_move_sms_validation_manager",
          "name": "stock.move.sms.validation Manager Access",
          "model_id": "model_stock_move_sms_validation",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_stock_report_reception_report_label_user",
          "name": "stock.report_reception_report_label User Access",
          "model_id": "model_stock_report_reception_report_label",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_stock_report_reception_report_label_manager",
          "name": "stock.report_reception_report_label Manager Access",
          "model_id": "model_stock_report_reception_report_label",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_performance_history_user",
          "name": "naid.performance.history User Access",
          "model_id": "model_naid_performance_history",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_performance_history_manager",
          "name": "naid.performance.history Manager Access",
          "model_id": "model_naid_performance_history",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_load_user",
          "name": "load User Access",
          "model_id": "model_load",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_load_manager",
          "name": "load Manager Access",
          "model_id": "model_load",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_temp_inventory_user",
          "name": "temp.inventory User Access",
          "model_id": "model_temp_inventory",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_temp_inventory_manager",
          "name": "temp.inventory Manager Access",
          "model_id": "model_temp_inventory",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_prod_ext_user",
          "name": "prod.ext User Access",
          "model_id": "model_prod_ext",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_prod_ext_manager",
          "name": "prod.ext Manager Access",
          "model_id": "model_prod_ext",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_installer_user",
          "name": "installer User Access",
          "model_id": "model_installer",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_installer_manager",
          "name": "installer Manager Access",
          "model_id": "model_installer",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_management_bale_user",
          "name": "records_management.bale User Access",
          "model_id": "model_records_management_bale",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_management_bale_manager",
          "name": "records_management.bale Manager Access",
          "model_id": "model_records_management_bale",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_billing_service_user",
          "name": "records.billing.service User Access",
          "model_id": "model_records_billing_service",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_billing_service_manager",
          "name": "records.billing.service Manager Access",
          "model_id": "model_records_billing_service",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_chain_custody_user",
          "name": "naid.chain.custody User Access",
          "model_id": "model_naid_chain_custody",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_chain_custody_manager",
          "name": "naid.chain.custody Manager Access",
          "model_id": "model_naid_chain_custody",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_billing_config_user",
          "name": "records.billing.config User Access",
          "model_id": "model_records_billing_config",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_billing_config_manager",
          "name": "records.billing.config Manager Access",
          "model_id": "model_records_billing_config",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_barcode_models_enhanced_user",
          "name": "barcode.models.enhanced User Access",
          "model_id": "model_barcode_models_enhanced",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_barcode_models_enhanced_manager",
          "name": "barcode.models.enhanced Manager Access",
          "model_id": "model_barcode_models_enhanced",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_bin_unlock_service_user",
          "name": "bin.unlock.service User Access",
          "model_id": "model_bin_unlock_service",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_bin_unlock_service_manager",
          "name": "bin.unlock.service Manager Access",
          "model_id": "model_bin_unlock_service",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_container_transfer_user",
          "name": "records.container.transfer User Access",
          "model_id": "model_records_container_transfer",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_container_transfer_manager",
          "name": "records.container.transfer Manager Access",
          "model_id": "model_records_container_transfer",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_deletion_request_enhanced_user",
          "name": "records.deletion.request.enhanced User Access",
          "model_id": "model_records_deletion_request_enhanced",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_deletion_request_enhanced_manager",
          "name": "records.deletion.request.enhanced Manager Access",
          "model_id": "model_records_deletion_request_enhanced",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_department_billing_enhanced_user",
          "name": "records.department.billing.enhanced User Access",
          "model_id": "model_records_department_billing_enhanced",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_department_billing_enhanced_manager",
          "name": "records.department.billing.enhanced Manager Access",
          "model_id": "model_records_department_billing_enhanced",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_chain_of_custody_user",
          "name": "records.chain.of.custody User Access",
          "model_id": "model_records_chain_of_custody",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_chain_of_custody_manager",
          "name": "records.chain.of.custody Manager Access",
          "model_id": "model_records_chain_of_custody",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_barcode_product_user",
          "name": "barcode.product User Access",
          "model_id": "model_barcode_product",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_barcode_product_manager",
          "name": "barcode.product Manager Access",
          "model_id": "model_barcode_product",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_advanced_billing_period_user",
          "name": "records.advanced.billing.period User Access",
          "model_id": "model_records_advanced_billing_period",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_advanced_billing_period_manager",
          "name": "records.advanced.billing.period Manager Access",
          "model_id": "model_records_advanced_billing_period",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_container_movement_user",
          "name": "records.container.movement User Access",
          "model_id": "model_records_container_movement",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_container_movement_manager",
          "name": "records.container.movement Manager Access",
          "model_id": "model_records_container_movement",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_transitory_field_config_user",
          "name": "transitory.field.config User Access",
          "model_id": "model_transitory_field_config",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_transitory_field_config_manager",
          "name": "transitory.field.config Manager Access",
          "model_id": "model_transitory_field_config",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_policy_version_user",
          "name": "records.policy.version User Access",
          "model_id": "model_records_policy_version",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_policy_version_manager",
          "name": "records.policy.version Manager Access",
          "model_id": "model_records_policy_version",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_storage_department_user_user",
          "name": "records.storage.department.user User Access",
          "model_id": "model_records_storage_department_user",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_storage_department_user_manager",
          "name": "records.storage.department.user Manager Access",
          "model_id": "model_records_storage_department_user",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_res_partner_key_restriction_user",
          "name": "res.partner.key.restriction User Access",
          "model_id": "model_res_partner_key_restriction",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_res_partner_key_restriction_manager",
          "name": "res.partner.key.restriction Manager Access",
          "model_id": "model_res_partner_key_restriction",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_container_user",
          "name": "records.container User Access",
          "model_id": "model_records_container",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_container_manager",
          "name": "records.container Manager Access",
          "model_id": "model_records_container",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_approval_workflow_user",
          "name": "records.approval.workflow User Access",
          "model_id": "model_records_approval_workflow",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_approval_workflow_manager",
          "name": "records.approval.workflow Manager Access",
          "model_id": "model_records_approval_workflow",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_container_contents_user",
          "name": "container.contents User Access",
          "model_id": "model_container_contents",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_container_contents_manager",
          "name": "container.contents Manager Access",
          "model_id": "model_container_contents",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_unlock_service_history_user",
          "name": "unlock.service.history User Access",
          "model_id": "model_unlock_service_history",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_unlock_service_history_manager",
          "name": "unlock.service.history Manager Access",
          "model_id": "model_unlock_service_history",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_bin_key_history_user",
          "name": "bin.key.history User Access",
          "model_id": "model_bin_key_history",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_bin_key_history_manager",
          "name": "bin.key.history Manager Access",
          "model_id": "model_bin_key_history",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_paper_load_shipment_user",
          "name": "paper.load.shipment User Access",
          "model_id": "model_paper_load_shipment",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_paper_load_shipment_manager",
          "name": "paper.load.shipment Manager Access",
          "model_id": "model_paper_load_shipment",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_approval_step_user",
          "name": "records.approval.step User Access",
          "model_id": "model_records_approval_step",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_approval_step_manager",
          "name": "records.approval.step Manager Access",
          "model_id": "model_records_approval_step",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_paper_bale_recycling_user",
          "name": "paper.bale.recycling User Access",
          "model_id": "model_paper_bale_recycling",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_paper_bale_recycling_manager",
          "name": "paper.bale.recycling Manager Access",
          "model_id": "model_paper_bale_recycling",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_destruction_item_user",
          "name": "destruction.item User Access",
          "model_id": "model_destruction_item",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_destruction_item_manager",
          "name": "destruction.item Manager Access",
          "model_id": "model_destruction_item",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_shredding_hard_drive_user",
          "name": "shredding.hard_drive User Access",
          "model_id": "model_shredding_hard_drive",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_shredding_hard_drive_manager",
          "name": "shredding.hard_drive Manager Access",
          "model_id": "model_shredding_hard_drive",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_location_inspection_user",
          "name": "records.location.inspection User Access",
          "model_id": "model_records_location_inspection",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_location_inspection_manager",
          "name": "records.location.inspection Manager Access",
          "model_id": "model_records_location_inspection",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_naid_custody_event_user",
          "name": "naid.custody.event User Access",
          "model_id": "model_naid_custody_event",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_naid_custody_event_manager",
          "name": "naid.custody.event Manager Access",
          "model_id": "model_naid_custody_event",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_department_billing_contact_user",
          "name": "records.department.billing.contact User Access",
          "model_id": "model_records_department_billing_contact",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_department_billing_contact_manager",
          "name": "records.department.billing.contact Manager Access",
          "model_id": "model_records_department_billing_contact",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_visitor_user",
          "name": "visitor User Access",
          "model_id": "model_visitor",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_visitor_manager",
          "name": "visitor Manager Access",
          "model_id": "model_visitor",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        },
        {
          "id": "access_records_access_log_user",
          "name": "records.access.log User Access",
          "model_id": "model_records_access_log",
          "group_id": "records_management.group_records_user",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "0"
        },
        {
          "id": "access_records_access_log_manager",
          "name": "records.access.log Manager Access",
          "model_id": "model_records_access_log",
          "group_id": "records_management.group_records_manager",
          "read": "1",
          "write": "1",
          "create": "1",
          "delete": "1"
        }
      ],
      "record_rules": [],
      "groups": [],
      "missing_access": []
    }
  },
  "data": {
    "data/tag_data.xml": {
      "filename": "data/tag_data.xml",
      "records": [
        {
          "id": "records_tag_confidential",
          "model": "records.tag",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Confidential"
            },
            {
              "name": "color",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "records_tag_archived",
          "model": "records.tag",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Archived"
            },
            {
              "name": "color",
              "ref": "",
              "eval": "",
              "value": "8"
            }
          ]
        },
        {
          "id": "records_tag_urgent",
          "model": "records.tag",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Urgent"
            },
            {
              "name": "color",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        }
      ],
      "record_count": 3,
      "models_referenced": [
        "records.tag"
      ],
      "external_ids": []
    },
    "data/naid_compliance_data.xml": {
      "filename": "data/naid_compliance_data.xml",
      "records": [
        {
          "id": "seq_naid_chain_custody",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Chain of Custody"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "naid.chain.custody"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "COC"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_naid_audit_log",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Audit Log"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "naid.audit.log"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "AUDIT"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "6"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "policy_access_control",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Access Control"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "access_control"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All personnel must have proper authorization and background checks before accessing secure areas or handling confidential materials."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Implement card access systems, maintain visitor logs, conduct regular access reviews."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Immediate suspension of access privileges, security review, potential termination."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "policy_document_handling",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Handling"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "20"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "document_handling"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All documents must be properly tracked, secured, and handled according to their classification level throughout the entire lifecycle."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "weekly"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Use chain of custody forms, implement proper storage procedures, maintain handling logs."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Retraining required, disciplinary action, potential contract termination."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "12"
            }
          ]
        },
        {
          "id": "policy_destruction_process",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Destruction Process"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "30"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "destruction_process"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All destruction activities must be witnessed, documented, and conducted using approved methods that meet or exceed required security levels."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Require minimum two witnesses, document particle sizes, maintain equipment calibration."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Stop work order, investigation, potential re-destruction of affected materials."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "policy_employee_screening",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Employee Screening"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "40"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "employee_screening"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All employees must undergo comprehensive background checks and receive NAID-specific training before handling confidential materials."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Conduct criminal background checks, verify employment history, provide NAID training certification."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Immediate removal from confidential projects, retraining, potential termination."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "12"
            }
          ]
        },
        {
          "id": "policy_facility_security",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Facility Security"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "50"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "facility_security"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Facilities must maintain appropriate physical security measures including surveillance, access controls, and environmental monitoring."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Install security cameras, implement alarm systems, conduct regular patrols, maintain entry logs."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Security audit, facility improvements required, potential contract suspension."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "policy_equipment_maintenance",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Equipment Maintenance"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "60"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "equipment_maintenance"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All destruction equipment must be properly maintained, calibrated, and inspected to ensure consistent performance according to specifications."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "weekly"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Follow manufacturer schedules, document all maintenance, test particle sizes regularly."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Equipment shutdown, recalibration required, affected materials may require re-destruction."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "policy_audit_requirements",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Audit Requirements"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "70"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "audit_requirements"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Comprehensive audit trails must be maintained for all activities, with regular internal and external audits conducted."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Maintain detailed logs, conduct quarterly internal audits, prepare for annual NAID audits."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Compliance violation notice, corrective action plan required, potential certification loss."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "cron_check_employee_credentials",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Check Employee Credential Expiry"
            },
            {
              "name": "model_id",
              "ref": "hr.model_hr_employee",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.check_expiring_credentials()"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "days"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "cron_cleanup_audit_logs",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Cleanup Old Audit Logs"
            },
            {
              "name": "model_id",
              "ref": "model_naid_audit_log",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.cleanup_old_logs()"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "months"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "cron_compliance_check",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Check"
            },
            {
              "name": "model_id",
              "ref": "model_naid_compliance_enhanced",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.check_compliance()"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "hours"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        }
      ],
      "record_count": 12,
      "models_referenced": [
        "ir.sequence",
        "ir.cron",
        "naid.compliance.enhanced"
      ],
      "external_ids": [
        "model_naid_compliance_enhanced",
        "model_naid_audit_log",
        "hr.model_hr_employee"
      ]
    },
    "data/model_records.xml": {
      "filename": "data/model_records.xml",
      "records": [
        {
          "id": "demo_customer_abc_corp",
          "model": "res.partner",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "ABC Corporation"
            },
            {
              "name": "is_company",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "email",
              "ref": "",
              "eval": "",
              "value": "info@abccorp.com"
            },
            {
              "name": "phone",
              "ref": "",
              "eval": "",
              "value": "555-123-4567"
            },
            {
              "name": "street",
              "ref": "",
              "eval": "",
              "value": "123 Business Lane"
            },
            {
              "name": "city",
              "ref": "",
              "eval": "",
              "value": "Business City"
            },
            {
              "name": "zip",
              "ref": "",
              "eval": "",
              "value": "12345"
            },
            {
              "name": "supplier_rank",
              "ref": "",
              "eval": "",
              "value": "0"
            },
            {
              "name": "customer_rank",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "demo_location_warehouse_a",
          "model": "records.location",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Warehouse A - Secure Storage"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Secure storage facility with climate control"
            },
            {
              "name": "location_type",
              "ref": "",
              "eval": "",
              "value": "warehouse"
            },
            {
              "name": "building",
              "ref": "",
              "eval": "",
              "value": "Building A"
            },
            {
              "name": "zone",
              "ref": "",
              "eval": "",
              "value": "Zone 1"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "climate_controlled",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "access_level",
              "ref": "",
              "eval": "",
              "value": "secure"
            },
            {
              "name": "max_capacity",
              "ref": "",
              "eval": "",
              "value": "10000"
            }
          ]
        },
        {
          "id": "demo_location_warehouse_b",
          "model": "records.location",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Warehouse B - Bulk Storage"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Bulk storage facility for general records"
            },
            {
              "name": "location_type",
              "ref": "",
              "eval": "",
              "value": "warehouse"
            },
            {
              "name": "building",
              "ref": "",
              "eval": "",
              "value": "Building B"
            },
            {
              "name": "zone",
              "ref": "",
              "eval": "",
              "value": "Zone 2"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "climate_controlled",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "access_level",
              "ref": "",
              "eval": "",
              "value": "restricted"
            },
            {
              "name": "max_capacity",
              "ref": "",
              "eval": "",
              "value": "20000"
            }
          ]
        },
        {
          "id": "demo_document_type_contracts",
          "model": "records.document.type",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Contracts"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Legal contracts and agreements"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_document_type_invoices",
          "model": "records.document.type",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Invoices"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Financial invoices and receipts"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_document_type_hr_files",
          "model": "records.document.type",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "HR Personnel Files"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Human resources and employee records"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_retention_policy_standard",
          "model": "records.retention.policy",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Standard Business Records"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "STD-7Y"
            },
            {
              "name": "retention_period",
              "ref": "",
              "eval": "",
              "value": "7"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard 7-year retention for business documents"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_retention_policy_hr",
          "model": "records.retention.policy",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Human Resources Records"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "HR-10Y"
            },
            {
              "name": "retention_period",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Extended retention for HR and employment records"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_container_001",
          "model": "records.container",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Container-001"
            },
            {
              "name": "container_type",
              "ref": "",
              "eval": "",
              "value": "box"
            },
            {
              "name": "location_id",
              "ref": "demo_location_warehouse_a",
              "eval": "",
              "value": ""
            },
            {
              "name": "max_boxes",
              "ref": "",
              "eval": "",
              "value": "50"
            },
            {
              "name": "length",
              "ref": "",
              "eval": "",
              "value": "24.0"
            },
            {
              "name": "width",
              "ref": "",
              "eval": "",
              "value": "15.0"
            },
            {
              "name": "height",
              "ref": "",
              "eval": "",
              "value": "10.0"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "demo_container_002",
          "model": "records.container",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Container-002"
            },
            {
              "name": "container_type",
              "ref": "",
              "eval": "",
              "value": "box"
            },
            {
              "name": "location_id",
              "ref": "demo_location_warehouse_b",
              "eval": "",
              "value": ""
            },
            {
              "name": "max_boxes",
              "ref": "",
              "eval": "",
              "value": "30"
            },
            {
              "name": "length",
              "ref": "",
              "eval": "",
              "value": "15.0"
            },
            {
              "name": "width",
              "ref": "",
              "eval": "",
              "value": "12.0"
            },
            {
              "name": "height",
              "ref": "",
              "eval": "",
              "value": "10.0"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "demo_shredding_service_template",
          "model": "shredding.service",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Standard Document Shredding"
            },
            {
              "name": "customer_id",
              "ref": "demo_customer_abc_corp",
              "eval": "",
              "value": ""
            },
            {
              "name": "service_type",
              "ref": "",
              "eval": "",
              "value": "onsite"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "draft"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard on-site document destruction service with NAID AAA compliance"
            }
          ]
        },
        {
          "id": "demo_paper_bale_001",
          "model": "paper.bale.recycling",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Bale-001-Demo"
            },
            {
              "name": "gross_weight",
              "ref": "",
              "eval": "",
              "value": "500.0"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "baling"
            },
            {
              "name": "bale_date",
              "ref": "",
              "eval": "(datetime.now() + timedelta(days=30)).strftime('%Y-%m-%d')",
              "value": ""
            }
          ]
        },
        {
          "id": "demo_custody_log_template",
          "model": "records.chain.of.custody",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Template Custody Transfer"
            },
            {
              "name": "custody_event",
              "ref": "",
              "eval": "",
              "value": "transfer"
            },
            {
              "name": "notes",
              "ref": "",
              "eval": "",
              "value": "Template for custody transfer procedures"
            }
          ]
        },
        {
          "id": "demo_portal_request_destruction",
          "model": "portal.request",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Destruction Request Template"
            },
            {
              "name": "customer_id",
              "ref": "demo_customer_abc_corp",
              "eval": "",
              "value": ""
            },
            {
              "name": "request_type",
              "ref": "",
              "eval": "",
              "value": "destruction"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "draft"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Template for customer document destruction requests"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "normal"
            }
          ]
        },
        {
          "id": "demo_portal_request_retrieval",
          "model": "portal.request",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Retrieval Request Template"
            },
            {
              "name": "customer_id",
              "ref": "demo_customer_abc_corp",
              "eval": "",
              "value": ""
            },
            {
              "name": "request_type",
              "ref": "",
              "eval": "",
              "value": "retrieval"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "draft"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Template for customer document retrieval requests"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "normal"
            }
          ]
        },
        {
          "id": "demo_system_config",
          "model": "ir.config_parameter",
          "fields": [
            {
              "name": "key",
              "ref": "",
              "eval": "",
              "value": "records_management.demo_mode"
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "demo_default_retention",
          "model": "ir.config_parameter",
          "fields": [
            {
              "name": "key",
              "ref": "",
              "eval": "",
              "value": "records_management.default_retention_years"
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "7"
            }
          ]
        },
        {
          "id": "demo_naid_compliance",
          "model": "ir.config_parameter",
          "fields": [
            {
              "name": "key",
              "ref": "",
              "eval": "",
              "value": "records_management.naid_compliance_required"
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        }
      ],
      "record_count": 18,
      "models_referenced": [
        "paper.bale.recycling",
        "records.location",
        "res.partner",
        "records.document.type",
        "ir.config_parameter",
        "portal.request",
        "records.chain.of.custody",
        "shredding.service",
        "records.container",
        "records.retention.policy"
      ],
      "external_ids": [
        "demo_customer_abc_corp",
        "demo_location_warehouse_b",
        "demo_location_warehouse_a"
      ]
    },
    "data/advanced_billing_demo.xml": {
      "filename": "data/advanced_billing_demo.xml",
      "records": [
        {
          "id": "billing_profile_monthly_both",
          "model": "records.customer.billing.profile",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Monthly Storage + Service"
            },
            {
              "name": "partner_id",
              "ref": "base.res_partner_1",
              "eval": "",
              "value": ""
            },
            {
              "name": "storage_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "service_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "storage_bill_in_advance",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "storage_advance_months",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "billing_day",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "auto_generate_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "auto_generate_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "invoice_due_days",
              "ref": "",
              "eval": "",
              "value": "30"
            }
          ]
        },
        {
          "id": "billing_profile_quarterly_storage",
          "model": "records.customer.billing.profile",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Quarterly Storage + Monthly Service"
            },
            {
              "name": "partner_id",
              "ref": "base.res_partner_2",
              "eval": "",
              "value": ""
            },
            {
              "name": "storage_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "quarterly"
            },
            {
              "name": "service_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "storage_bill_in_advance",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "storage_advance_months",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "billing_day",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "auto_generate_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "auto_generate_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "invoice_due_days",
              "ref": "",
              "eval": "",
              "value": "45"
            }
          ]
        },
        {
          "id": "billing_profile_prepaid",
          "model": "records.customer.billing.profile",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Prepaid Storage"
            },
            {
              "name": "partner_id",
              "ref": "base.res_partner_3",
              "eval": "",
              "value": ""
            },
            {
              "name": "storage_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "prepaid"
            },
            {
              "name": "service_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "prepaid_enabled",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "prepaid_months",
              "ref": "",
              "eval": "",
              "value": "12"
            },
            {
              "name": "prepaid_discount_percent",
              "ref": "",
              "eval": "",
              "value": "5.0"
            },
            {
              "name": "billing_day",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "auto_generate_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "auto_generate_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "invoice_due_days",
              "ref": "",
              "eval": "",
              "value": "30"
            }
          ]
        },
        {
          "id": "billing_contact_primary",
          "model": "records.billing.contact",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "John Doe - Primary"
            },
            {
              "name": "email",
              "ref": "",
              "eval": "",
              "value": "john.doe@example.com"
            },
            {
              "name": "phone",
              "ref": "",
              "eval": "",
              "value": "555-1234"
            },
            {
              "name": "billing_profile_id",
              "ref": "billing_profile_monthly_both",
              "eval": "",
              "value": ""
            },
            {
              "name": "receive_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_statements",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "primary_contact",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "10"
            }
          ]
        },
        {
          "id": "billing_contact_accounting",
          "model": "records.billing.contact",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Jane Smith - Accounting"
            },
            {
              "name": "email",
              "ref": "",
              "eval": "",
              "value": "accounting@example.com"
            },
            {
              "name": "phone",
              "ref": "",
              "eval": "",
              "value": "555-5678"
            },
            {
              "name": "billing_profile_id",
              "ref": "billing_profile_monthly_both",
              "eval": "",
              "value": ""
            },
            {
              "name": "receive_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_statements",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "primary_contact",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "20"
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "records.billing.contact",
        "records.customer.billing.profile"
      ],
      "external_ids": [
        "billing_profile_monthly_both",
        "base.res_partner_3",
        "base.res_partner_2",
        "base.res_partner_1"
      ]
    },
    "data/portal_mail_templates.xml": {
      "filename": "data/portal_mail_templates.xml",
      "records": [
        {
          "id": "portal_request_submitted_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Request Submitted"
            },
            {
              "name": "model_id",
              "ref": "model_portal_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "${object.env.user.email or 'noreply@suncityshred.com'}"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "admin@suncityshred.com"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "New Portal Submission: ${object.name} - ${object.request_type}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear Records Management Team,</p>\n                <p>A new request has been submitted through the customer portal:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Request ID:</strong></td>\n                        <td>${object.name}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Customer:</strong></td>\n                        <td>${object.partner_id.name}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Request Type:</strong></td>\n                        <td>${object.request_type}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Priority:</strong></td>\n                        <td>${object.priority}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Description:</strong></td>\n                        <td>${object.description or 'N/A'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Submission Date:</strong></td>\n                        <td>${object.create_date}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Status:</strong></td>\n                        <td>${object.state}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"margin-top: 20px;\">\n                    <strong>NAID Compliance Note:</strong> This request requires timely processing according to NAID AAA standards.\n                    Please review and assign within 24 hours.\n                </p>\n                \n                <p>\n                    <a href=\"/web#id=${object.id}&view_type=form&model=portal.request\" style=\"background-color: #007cba; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        Review Request\n                    </a>\n                </p>\n                \n                <p>Best regards,<br/>\n                Sun City Shred Portal System</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "portal_request_status_update_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Request Status Update"
            },
            {
              "name": "model_id",
              "ref": "model_portal_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "noreply@suncityshred.com"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.email}"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Request ${object.name} Status Update - ${object.state.title()}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear ${object.partner_id.name},</p>\n                <p>Your request <strong>${object.name}</strong> has been updated:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Request Type:</strong></td>\n                        <td>${object.request_type}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Current Status:</strong></td>\n                        <td><span style=\"\n                            padding: 3px 8px; \n                            border-radius: 3px; \n                            color: white;\n                            background-color: ${'#28a745' if object.state == 'completed' else '#ffc107' if object.state == 'in_progress' else '#6c757d'};\n                        \">${object.state.replace('_', ' ').title()}</span></td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Last Updated:</strong></td>\n                        <td>${object.write_date}</td>\n                    </tr>\n                    % if object.assigned_to:\n                    <tr>\n                        <td><strong>Assigned To:</strong></td>\n                        <td>${object.assigned_to.name}</td>\n                    </tr>\n                    % endif\n                </table>\n                \n                % if object.state == 'completed':\n                <p style=\"color: #28a745; font-weight: bold;\">\u2713 Your request has been completed successfully!</p>\n                % elif object.state == 'in_progress':\n                <p style=\"color: #ffc107; font-weight: bold;\">\u23f3 Your request is currently being processed.</p>\n                % endif\n                \n                <p>\n                    <a href=\"/my/requests/${object.id}\" style=\"background-color: #007cba; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        View Request Details\n                    </a>\n                </p>\n                \n                <p>Thank you for choosing Sun City Shred for your secure document management needs.</p>\n                \n                <p>Best regards,<br/>\n                Sun City Shred Team</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "website_form_submission_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Website Contact Form Submission"
            },
            {
              "name": "model_id",
              "ref": "mail.model_mail_mail",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "${object.email_from or 'noreply@suncityshred.com'}"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "admin@suncityshred.com"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "New Website Inquiry - ${object.subject or 'Contact Form'}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear Sales Team,</p>\n                <p>A new inquiry has been submitted through the website contact form:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Name:</strong></td>\n                        <td>${object.author_id.name or 'Anonymous'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Email:</strong></td>\n                        <td>${object.email_from or 'Not provided'}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Subject:</strong></td>\n                        <td>${object.subject or 'General Inquiry'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Message:</strong></td>\n                        <td>${object.body}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Submission Time:</strong></td>\n                        <td>${object.date}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"margin-top: 20px;\">\n                    <strong>Action Required:</strong> Please follow up within 24 hours to maintain customer service standards.\n                </p>\n                \n                <p>Best regards,<br/>\n                Website Contact System</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "portal_request_sms_notification",
          "model": "sms.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Request SMS Update"
            },
            {
              "name": "model_id",
              "ref": "model_portal_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "body",
              "ref": "",
              "eval": "",
              "value": "Sun City Shred: Your request ${object.name} is now ${object.state.replace('_', ' ').title()}. View details: ${ctx.get('base_url', '')}/my/requests/${object.id}"
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "pickup_request_confirmation_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Pickup Request Confirmation"
            },
            {
              "name": "model_id",
              "ref": "model_pickup_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "noreply@suncityshred.com"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.email}"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Pickup Scheduled: ${object.name} - ${object.pickup_date}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear ${object.partner_id.name},</p>\n                <p>Your pickup request has been confirmed:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Pickup ID:</strong></td>\n                        <td>${object.name}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Scheduled Date:</strong></td>\n                        <td>${object.pickup_date}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Time Window:</strong></td>\n                        <td>${object.time_window or 'Standard business hours'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Location:</strong></td>\n                        <td>${object.pickup_location}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Service Type:</strong></td>\n                        <td>${object.service_type}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"color: #007cba; font-weight: bold;\">\n                    \u2713 Pickup confirmed! Our team will arrive during the scheduled time window.\n                </p>\n                \n                <p><strong>Important:</strong> Please ensure materials are properly prepared and accessible for pickup.</p>\n                \n                <p>\n                    <a href=\"/my/pickups/${object.id}\" style=\"background-color: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        View Pickup Details\n                    </a>\n                </p>\n                \n                <p>Thank you for choosing Sun City Shred.</p>\n                \n                <p>Best regards,<br/>\n                Sun City Shred Operations Team</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "naid_audit_notification_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Audit Notification"
            },
            {
              "name": "model_id",
              "ref": "model_naid_audit_log",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "compliance@suncityshred.com"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.email}"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "NAID Audit Scheduled: ${object.name} - ${object.audit_date}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear ${object.partner_id.name},</p>\n                <p>This is to notify you of a scheduled NAID compliance audit:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Audit ID:</strong></td>\n                        <td>${object.name}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Audit Date:</strong></td>\n                        <td>${object.audit_date}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Audit Type:</strong></td>\n                        <td>${object.audit_type}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Scope:</strong></td>\n                        <td>${object.scope}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Auditor:</strong></td>\n                        <td>${object.auditor_id.name}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"color: #dc3545; font-weight: bold;\">\n                    \ud83d\udd12 NAID AAA Compliance: This audit ensures adherence to NAID AAA certification standards.\n                </p>\n                \n                <p><strong>Preparation Required:</strong> Please have all relevant documentation and personnel available.</p>\n                \n                <p>\n                    <a href=\"/my/audits/${object.id}\" style=\"background-color: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        View Audit Details\n                    </a>\n                </p>\n                \n                <p>For questions regarding this audit, please contact our compliance team.</p>\n                \n                <p>Best regards,<br/>\n                NAID Compliance Team<br/>\n                Sun City Shred</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        }
      ],
      "record_count": 6,
      "models_referenced": [
        "sms.template",
        "mail.template"
      ],
      "external_ids": [
        "model_pickup_request",
        "model_naid_audit_log",
        "model_portal_request",
        "mail.model_mail_mail"
      ]
    },
    "data/scheduled_actions.xml": {
      "filename": "data/scheduled_actions.xml",
      "records": [
        {
          "id": "ir_cron_compute_monthly_storage_fees",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Compute Monthly Storage Fees"
            },
            {
              "name": "model_id",
              "ref": "stock.model_stock_quant",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "\n# Compute monthly storage fees for each customer\ntry:\n    # Search for all internal stock quants\n    quants = env['stock.quant'].search([('location_id.usage', '=', 'internal')])\n\n    # Initialize a dictionary to store total quantity per customer\n    customer_items = {}\n\n    # Iterate through each quant to sum quantities by customer\n    for quant in quants:\n        if quant.lot_id and quant.lot_id.customer_id:\n            customer = quant.lot_id.customer_id\n            if customer in customer_items:\n                customer_items[customer] += quant.quantity\n            else:\n                customer_items[customer] = quant.quantity\n\n    # Try to get the storage fee product reference\n    product = env.ref('records_management.service_storage_fee', raise_if_not_found=False)\n\n    if not product:\n        log('Storage Fee Product (records_management.service_storage_fee) not found. Monthly storage fees not computed.')\n    else:\n        # For each customer, create a sale order for the storage fee product\n        for customer, qty in customer_items.items():\n            if qty > 0:\n                env['sale.order'].create({\n                    'partner_id': customer.id,\n                    'order_line': [(0, 0, {\n                        'product_id': product.id,\n                        'product_uom_qty': qty,\n                        'name': 'Monthly Storage Fee for %s items' % qty,\n                    })],\n                })\nexcept Exception as e:\n    log('Error computing monthly storage fees: %s' % str(e))\n            "
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "months"
            },
            {
              "name": "nextcall",
              "ref": "",
              "eval": "(datetime.now() + timedelta(days=30)).strftime('%Y-%m-%d 00:00:00')",
              "value": ""
            }
          ]
        },
        {
          "id": "ir_cron_generate_monthly_inventory_reports",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Generate Monthly Customer Inventory Reports"
            },
            {
              "name": "model_id",
              "ref": "model_customer_inventory_report",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "\n# Generate monthly inventory reports for all customers\ntry:\n    model.generate_monthly_reports()\n    log('Monthly customer inventory reports generated successfully.')\nexcept Exception as e:\n    log('Error generating monthly inventory reports: %s' % str(e))\n            "
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "months"
            },
            {
              "name": "nextcall",
              "ref": "",
              "eval": "(datetime.now().replace(day=1) + timedelta(days=32)).replace(day=1).strftime('%Y-%m-%d 09:00:00')",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 2,
      "models_referenced": [
        "ir.cron"
      ],
      "external_ids": [
        "model_customer_inventory_report",
        "stock.model_stock_quant"
      ]
    },
    "data/field_label_demo_data.xml": {
      "filename": "data/field_label_demo_data.xml",
      "records": [
        {
          "id": "field_labels_corporate_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Corporate Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard corporate terminology for all customers"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "File Container ID"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Document Category"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "Document Contents"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Period Start"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Period End"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Document Classification"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "Security Level"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Cost Center"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Matter Number"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Department Head"
            },
            {
              "name": "label_created_by_dept",
              "ref": "",
              "eval": "",
              "value": "Originating Department"
            }
          ]
        },
        {
          "id": "field_labels_legal_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Legal Industry Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Legal industry terminology"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "Matter Container"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Case Documents"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "File Contents"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Case Start Date"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Case End Date"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Document Type"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "Attorney-Client Privilege"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Matter Code"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Client Matter Number"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Supervising Attorney"
            },
            {
              "name": "label_destruction_date",
              "ref": "",
              "eval": "",
              "value": "Retention Expiry"
            }
          ]
        },
        {
          "id": "field_labels_healthcare_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Healthcare Industry Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Healthcare industry terminology"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "Medical Records Container"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Patient Records"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "Medical File Contents"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Treatment Start"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Treatment End"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Record Category"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "HIPAA Classification"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Department Code"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Patient ID"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Chief Medical Officer"
            },
            {
              "name": "label_special_handling",
              "ref": "",
              "eval": "",
              "value": "HIPAA Special Instructions"
            }
          ]
        },
        {
          "id": "field_labels_financial_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Financial Services Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Financial services industry terminology"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "Account File Container"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Financial Records"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "Account Documentation"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Account Period Start"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Account Period End"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Financial Document Type"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "Regulatory Classification"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Account Number"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Customer Account"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Branch Manager"
            },
            {
              "name": "label_compliance_notes",
              "ref": "",
              "eval": "",
              "value": "Regulatory Notes"
            }
          ]
        }
      ],
      "record_count": 4,
      "models_referenced": [
        "field.label.customization"
      ],
      "external_ids": []
    },
    "data/products.xml": {
      "filename": "data/products.xml",
      "records": [
        {
          "id": "product_storage_container",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Storage Container"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-CONTAINER"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "5.0"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "1.5"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard archive container for document storage"
            }
          ]
        },
        {
          "id": "product_storage_service",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Monthly Storage Service"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-STORAGE"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "25.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "15.00"
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Monthly document storage service"
            }
          ]
        },
        {
          "id": "product_shredding_service",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Shredding Service"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-SHRED"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "50.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "30.00"
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Secure document destruction service"
            }
          ]
        }
      ],
      "record_count": 3,
      "models_referenced": [
        "product.product"
      ],
      "external_ids": [
        "product.product_category_all",
        "uom.product_uom_unit"
      ]
    },
    "data/user_setup.xml": {
      "filename": "data/user_setup.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "data/sequence.xml": {
      "filename": "data/sequence.xml",
      "records": [
        {
          "id": "seq_shredding_service",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Service"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "SHRED/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_customer_inventory",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Inventory Report"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "INV/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_bale",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Bale"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records_management.bale"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "BALE/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_load",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Load"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records_management.load"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "LOAD/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 4,
      "models_referenced": [
        "ir.sequence"
      ],
      "external_ids": []
    },
    "data/storage_fee.xml": {
      "filename": "data/storage_fee.xml",
      "records": [
        {
          "id": "service_storage_fee",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Monthly Storage Fee"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-STORAGE"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "2.50"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "1.00"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Monthly fee for storing records and documents."
            }
          ]
        }
      ],
      "record_count": 1,
      "models_referenced": [
        "product.product"
      ],
      "external_ids": [
        "product.product_category_all"
      ]
    },
    "data/fsm_automated_actions.xml": {
      "filename": "data/fsm_automated_actions.xml",
      "records": [
        {
          "id": "ir_cron_fsm_day_of_service_notification",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "FSM: Daily Service Notifications"
            },
            {
              "name": "model_id",
              "ref": "records_management.model_fsm_notification",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.send_day_of_service_notification()"
            },
            {
              "name": "user_id",
              "ref": "base.user_root",
              "eval": "",
              "value": ""
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "days"
            },
            {
              "name": "numbercall",
              "ref": "",
              "eval": "",
              "value": "-1"
            },
            {
              "name": "doall",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 1,
      "models_referenced": [
        "ir.cron"
      ],
      "external_ids": [
        "records_management.model_fsm_notification",
        "base.user_root"
      ]
    },
    "data/feedback_survey_data.xml": {
      "filename": "data/feedback_survey_data.xml",
      "records": [
        {
          "id": "portal_feedback_survey",
          "model": "survey.survey",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Records Management Portal Feedback"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Help us improve your portal experience with your valuable feedback"
            },
            {
              "name": "access_mode",
              "ref": "",
              "eval": "",
              "value": "public"
            },
            {
              "name": "users_login_required",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "attempts_limit",
              "ref": "",
              "eval": "",
              "value": "0"
            },
            {
              "name": "is_time_limited",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "certification",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "scoring_type",
              "ref": "",
              "eval": "",
              "value": "no_scoring"
            }
          ]
        },
        {
          "id": "feedback_page_general",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "General Portal Experience"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Tell us about your overall experience with the Records Management Portal"
            }
          ]
        },
        {
          "id": "feedback_overall_satisfaction",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How satisfied are you with the portal overall?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_general",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "satisfaction_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent - Exceeds expectations"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "satisfaction_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good - Meets expectations"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "satisfaction_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair - Some improvements needed"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "satisfaction_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor - Significant improvements needed"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_features_used",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Which features have you used? (Select all that apply)"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_general",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "multiple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "feature_inventory",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Inventory Management & Search"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "feature_quotes",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Quote Generation"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "feature_billing",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Billing & PO Management"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "feature_requests",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Service Requests & Destruction"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feature_signatures",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Electronic Signatures"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "5"
            }
          ]
        },
        {
          "id": "feature_users",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "User Management"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "feature_certificates",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Destruction Certificates"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "7"
            }
          ]
        },
        {
          "id": "feedback_ease_of_use",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How easy is the portal to navigate and use?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_general",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "ease_very_easy",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Very Easy - Intuitive and user-friendly"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "ease_easy",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Easy - Generally straightforward"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "ease_moderate",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Moderate - Some features confusing"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "ease_difficult",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Difficult - Hard to find what I need"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_page_features",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Feature-Specific Feedback"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Help us improve specific features and functionality"
            }
          ]
        },
        {
          "id": "feedback_search_rating",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How would you rate the search functionality?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "6"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_features",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "search_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent - Finds everything quickly"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "search_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good - Usually finds what I need"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "search_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair - Sometimes hard to find items"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "search_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor - Difficult to find what I need"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_security_confidence",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How confident are you in our NAID AAA compliance and security measures?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "7"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_features",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "security_very_confident",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Very Confident - Completely trust the security"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "security_confident",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Confident - Trust the measures in place"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "security_somewhat",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Somewhat Confident - Some concerns"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "security_not_confident",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Not Confident - Have security concerns"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_page_improvements",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Suggestions for Improvement"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "8"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Help us make the portal even better"
            }
          ]
        },
        {
          "id": "feedback_missing_features",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "What features or functionality would you like to see added?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "9"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_improvements",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "feedback_general_comments",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Any other comments, suggestions, or concerns?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_improvements",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "feedback_contact_permission",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "May we contact you to follow up on your feedback?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "11"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_improvements",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "contact_yes",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_contact_permission",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Yes, please contact me"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "contact_no",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_contact_permission",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "No, I prefer not to be contacted"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "service_request_feedback_survey",
          "model": "survey.survey",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Service Request Feedback"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Rate your experience with our destruction and service requests"
            },
            {
              "name": "access_mode",
              "ref": "",
              "eval": "",
              "value": "public"
            },
            {
              "name": "users_login_required",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "attempts_limit",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "is_time_limited",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "certification",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "scoring_type",
              "ref": "",
              "eval": "",
              "value": "no_scoring"
            }
          ]
        },
        {
          "id": "service_feedback_page",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Service Request Experience"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Tell us about your recent service request experience"
            }
          ]
        },
        {
          "id": "service_rating",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How would you rate the overall service provided?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "service_feedback_page",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "service_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "service_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "service_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "service_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "service_timeliness",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How would you rate the timeliness of service completion?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "service_feedback_page",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "timeliness_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent - Completed faster than expected"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "timeliness_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good - Completed on time"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "timeliness_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair - Slight delay"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "timeliness_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor - Significant delay"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "service_comments",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Any additional comments about the service provided?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "service_feedback_page",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "survey_feedback_portal",
          "model": "survey.survey",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Portal Feedback & Suggestions"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Quick feedback form for suggestions and concerns"
            },
            {
              "name": "access_mode",
              "ref": "",
              "eval": "",
              "value": "public"
            },
            {
              "name": "users_login_required",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "is_attempts_limited",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "questions_layout",
              "ref": "",
              "eval": "",
              "value": "page_per_section"
            },
            {
              "name": "scoring_type",
              "ref": "",
              "eval": "",
              "value": "no_scoring"
            },
            {
              "name": "certification",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "page_feedback",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Your Feedback"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Please share your thoughts to help us improve our services"
            }
          ]
        },
        {
          "id": "question_suggestions",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Suggestions for Improvements"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "page_feedback",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "What improvements would you like to see in our portal or services?"
            }
          ]
        },
        {
          "id": "question_concerns",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Any Concerns?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "page_feedback",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Please share any concerns or issues you've experienced"
            }
          ]
        },
        {
          "id": "question_rating",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Rate the Portal (1-5)"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "page_feedback",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "numerical_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "On a scale of 1-5, how would you rate your overall portal experience?"
            },
            {
              "name": "validation_min_float_value",
              "ref": "",
              "eval": "",
              "value": "1.0"
            },
            {
              "name": "validation_max_float_value",
              "ref": "",
              "eval": "",
              "value": "5.0"
            },
            {
              "name": "validation_error_msg",
              "ref": "",
              "eval": "",
              "value": "Please enter a rating between 1 and 5"
            }
          ]
        }
      ],
      "record_count": 55,
      "models_referenced": [
        "survey.question",
        "survey.survey",
        "survey.question.answer"
      ],
      "external_ids": [
        "feedback_page_improvements",
        "feedback_features_used",
        "service_timeliness",
        "feedback_page_features",
        "feedback_page_general",
        "portal_feedback_survey",
        "feedback_ease_of_use",
        "feedback_search_rating",
        "feedback_security_confidence",
        "feedback_overall_satisfaction",
        "survey_feedback_portal",
        "service_feedback_page",
        "service_request_feedback_survey",
        "page_feedback",
        "service_rating",
        "feedback_contact_permission"
      ]
    },
    "data/document_retrieval_rates.xml": {
      "filename": "data/document_retrieval_rates.xml",
      "records": [],
      "record_count": 0,
      "models_referenced": [],
      "external_ids": []
    },
    "data/ir_sequence_data.xml": {
      "filename": "data/ir_sequence_data.xml",
      "records": [
        {
          "id": "seq_records_container",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Container Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "CONT"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_document",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Document Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "DOC"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_pickup_request",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Pickup Request Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "pickup.request"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "PICKUP"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_shredding_service",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Service Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "SHRED"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_deletion_request",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Deletion Request Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.deletion.request"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "DEL"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_container_barcode",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Container Number Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.container.number"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "CN"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "8"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_work_order_shredding",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Work Order Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "work.order.shredding"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "WO"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_shredding_bin_barcode",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Bin Barcode Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "shredding.bin.barcode"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": ""
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_document_retrieval_work_order",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Retrieval Work Order Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "RET"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_naid_certificate",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Certificate Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "naid.certificate"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "NAID"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        }
      ],
      "record_count": 10,
      "models_referenced": [
        "ir.sequence"
      ],
      "external_ids": []
    },
    "data/paper_products.xml": {
      "filename": "data/paper_products.xml",
      "records": [
        {
          "id": "product_paper_white",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "White Paper Bale"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "consu"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "0.08"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "0.05"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "PAPER-WHITE"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "High-grade white paper suitable for recycling"
            }
          ]
        },
        {
          "id": "product_paper_mixed",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Mixed Paper Bale"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "consu"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "0.06"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "0.03"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "PAPER-MIXED"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Mixed office paper and documents"
            }
          ]
        },
        {
          "id": "product_paper_cardboard",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Cardboard Bale"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "consu"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "0.04"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "0.02"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "PAPER-CARDBOARD"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Corrugated cardboard and heavy paper products"
            }
          ]
        },
        {
          "id": "product_baling_service",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Baling Service"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "25.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "15.00"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "SVC-BALING"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Professional paper baling and compression service"
            }
          ]
        },
        {
          "id": "product_load_transport",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Load Transportation"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "150.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "100.00"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "SVC-TRANSPORT"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Trailer load pickup and transportation service"
            }
          ]
        }
      ],
      "record_count": 5,
      "models_referenced": [
        "product.product"
      ],
      "external_ids": [
        "product.product_category_all",
        "uom.product_uom_unit",
        "uom.product_uom_lb"
      ]
    },
    "data/fsm_mail_templates.xml": {
      "filename": "data/fsm_mail_templates.xml",
      "records": [
        {
          "id": "mail_template_fsm_day_of_service",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "FSM: Day of Service Notification"
            },
            {
              "name": "model_id",
              "ref": "industry_fsm.model_fsm_task",
              "eval": "",
              "value": ""
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Your Service is Scheduled for Today"
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "\"${object.company_id.email}\""
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "\"${object.partner_id.email}\""
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n<p>Dear ${object.partner_id.name},</p>\n<p>This is a reminder that your service (${object.name}) is scheduled for today, ${object.schedule_date}.</p>\n<p>Our team will be on-site to perform the requested services. If you have any questions, please contact us.</p>\n<p>Thank you,<br/>\n${object.company_id.name}</p>\n            "
            }
          ]
        },
        {
          "id": "mail_template_fsm_driver_nearby",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "FSM: Driver Nearby Notification"
            },
            {
              "name": "model_id",
              "ref": "industry_fsm.model_fsm_task",
              "eval": "",
              "value": ""
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Your Driver is Nearby"
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "\"${object.company_id.email}\""
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "\"${object.partner_id.email}\""
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n<p>Dear ${object.partner_id.name},</p>\n<p>Our driver is nearby and will be arriving shortly for your service (${object.name}).</p>\n<p>Please be prepared for our arrival.</p>\n<p>Thank you,<br/>\n${object.company_id.name}</p>\n            "
            }
          ]
        }
      ],
      "record_count": 2,
      "models_referenced": [
        "mail.template"
      ],
      "external_ids": [
        "industry_fsm.model_fsm_task"
      ]
    },
    "analysis": {
      "sequences": [
        {
          "id": "seq_naid_chain_custody",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Chain of Custody"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "naid.chain.custody"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "COC"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_naid_audit_log",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Audit Log"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "naid.audit.log"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "AUDIT"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "6"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_shredding_service",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Service"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "SHRED/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_customer_inventory",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Customer Inventory Report"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "customer.inventory.report"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "INV/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_bale",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Bale"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records_management.bale"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "BALE/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_load",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Load"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records_management.load"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "LOAD/%(year)s/"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_container",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Container Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.container"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "CONT"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_document",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Document Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.document"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "DOC"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_pickup_request",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Pickup Request Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "pickup.request"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "PICKUP"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_shredding_service",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Service Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "shredding.service"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "SHRED"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_deletion_request",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Deletion Request Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.deletion.request"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "DEL"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_records_container_barcode",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Records Container Number Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "records.container.number"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "CN"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "8"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_work_order_shredding",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Work Order Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "work.order.shredding"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "WO"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_shredding_bin_barcode",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Shredding Bin Barcode Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "shredding.bin.barcode"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": ""
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_document_retrieval_work_order",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Retrieval Work Order Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "document.retrieval.work.order"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "RET"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "seq_naid_certificate",
          "model": "ir.sequence",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Certificate Sequence"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "naid.certificate"
            },
            {
              "name": "prefix",
              "ref": "",
              "eval": "",
              "value": "NAID"
            },
            {
              "name": "padding",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "company_id",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        }
      ],
      "demo_data": [
        {
          "id": "billing_profile_monthly_both",
          "model": "records.customer.billing.profile",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Monthly Storage + Service"
            },
            {
              "name": "partner_id",
              "ref": "base.res_partner_1",
              "eval": "",
              "value": ""
            },
            {
              "name": "storage_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "service_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "storage_bill_in_advance",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "storage_advance_months",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "billing_day",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "auto_generate_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "auto_generate_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "invoice_due_days",
              "ref": "",
              "eval": "",
              "value": "30"
            }
          ]
        },
        {
          "id": "billing_profile_quarterly_storage",
          "model": "records.customer.billing.profile",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Quarterly Storage + Monthly Service"
            },
            {
              "name": "partner_id",
              "ref": "base.res_partner_2",
              "eval": "",
              "value": ""
            },
            {
              "name": "storage_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "quarterly"
            },
            {
              "name": "service_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "storage_bill_in_advance",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "storage_advance_months",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "billing_day",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "auto_generate_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "auto_generate_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "invoice_due_days",
              "ref": "",
              "eval": "",
              "value": "45"
            }
          ]
        },
        {
          "id": "billing_profile_prepaid",
          "model": "records.customer.billing.profile",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Prepaid Storage"
            },
            {
              "name": "partner_id",
              "ref": "base.res_partner_3",
              "eval": "",
              "value": ""
            },
            {
              "name": "storage_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "prepaid"
            },
            {
              "name": "service_billing_cycle",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "prepaid_enabled",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "prepaid_months",
              "ref": "",
              "eval": "",
              "value": "12"
            },
            {
              "name": "prepaid_discount_percent",
              "ref": "",
              "eval": "",
              "value": "5.0"
            },
            {
              "name": "billing_day",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "auto_generate_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "auto_generate_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "invoice_due_days",
              "ref": "",
              "eval": "",
              "value": "30"
            }
          ]
        },
        {
          "id": "billing_contact_primary",
          "model": "records.billing.contact",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "John Doe - Primary"
            },
            {
              "name": "email",
              "ref": "",
              "eval": "",
              "value": "john.doe@example.com"
            },
            {
              "name": "phone",
              "ref": "",
              "eval": "",
              "value": "555-1234"
            },
            {
              "name": "billing_profile_id",
              "ref": "billing_profile_monthly_both",
              "eval": "",
              "value": ""
            },
            {
              "name": "receive_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_statements",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "primary_contact",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "10"
            }
          ]
        },
        {
          "id": "billing_contact_accounting",
          "model": "records.billing.contact",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Jane Smith - Accounting"
            },
            {
              "name": "email",
              "ref": "",
              "eval": "",
              "value": "accounting@example.com"
            },
            {
              "name": "phone",
              "ref": "",
              "eval": "",
              "value": "555-5678"
            },
            {
              "name": "billing_profile_id",
              "ref": "billing_profile_monthly_both",
              "eval": "",
              "value": ""
            },
            {
              "name": "receive_storage_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_service_invoices",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "receive_statements",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "primary_contact",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "20"
            }
          ]
        },
        {
          "id": "field_labels_corporate_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Corporate Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard corporate terminology for all customers"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "File Container ID"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Document Category"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "Document Contents"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Period Start"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Period End"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Document Classification"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "Security Level"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Cost Center"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Matter Number"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Department Head"
            },
            {
              "name": "label_created_by_dept",
              "ref": "",
              "eval": "",
              "value": "Originating Department"
            }
          ]
        },
        {
          "id": "field_labels_legal_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Legal Industry Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Legal industry terminology"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "Matter Container"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Case Documents"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "File Contents"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Case Start Date"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Case End Date"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Document Type"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "Attorney-Client Privilege"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Matter Code"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Client Matter Number"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Supervising Attorney"
            },
            {
              "name": "label_destruction_date",
              "ref": "",
              "eval": "",
              "value": "Retention Expiry"
            }
          ]
        },
        {
          "id": "field_labels_healthcare_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Healthcare Industry Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Healthcare industry terminology"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "Medical Records Container"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Patient Records"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "Medical File Contents"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Treatment Start"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Treatment End"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Record Category"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "HIPAA Classification"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Department Code"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Patient ID"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Chief Medical Officer"
            },
            {
              "name": "label_special_handling",
              "ref": "",
              "eval": "",
              "value": "HIPAA Special Instructions"
            }
          ]
        },
        {
          "id": "field_labels_financial_global",
          "model": "field.label.customization",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Financial Services Standard (Global)"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Financial services industry terminology"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "label_container_number",
              "ref": "",
              "eval": "",
              "value": "Account File Container"
            },
            {
              "name": "label_item_description",
              "ref": "",
              "eval": "",
              "value": "Financial Records"
            },
            {
              "name": "label_content_description",
              "ref": "",
              "eval": "",
              "value": "Account Documentation"
            },
            {
              "name": "label_date_from",
              "ref": "",
              "eval": "",
              "value": "Account Period Start"
            },
            {
              "name": "label_date_to",
              "ref": "",
              "eval": "",
              "value": "Account Period End"
            },
            {
              "name": "label_record_type",
              "ref": "",
              "eval": "",
              "value": "Financial Document Type"
            },
            {
              "name": "label_confidentiality",
              "ref": "",
              "eval": "",
              "value": "Regulatory Classification"
            },
            {
              "name": "label_project_code",
              "ref": "",
              "eval": "",
              "value": "Account Number"
            },
            {
              "name": "label_client_reference",
              "ref": "",
              "eval": "",
              "value": "Customer Account"
            },
            {
              "name": "label_authorized_by",
              "ref": "",
              "eval": "",
              "value": "Branch Manager"
            },
            {
              "name": "label_compliance_notes",
              "ref": "",
              "eval": "",
              "value": "Regulatory Notes"
            }
          ]
        }
      ],
      "configuration": [
        {
          "id": "records_tag_confidential",
          "model": "records.tag",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Confidential"
            },
            {
              "name": "color",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "records_tag_archived",
          "model": "records.tag",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Archived"
            },
            {
              "name": "color",
              "ref": "",
              "eval": "",
              "value": "8"
            }
          ]
        },
        {
          "id": "records_tag_urgent",
          "model": "records.tag",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Urgent"
            },
            {
              "name": "color",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "policy_access_control",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Access Control"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "access_control"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All personnel must have proper authorization and background checks before accessing secure areas or handling confidential materials."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Implement card access systems, maintain visitor logs, conduct regular access reviews."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Immediate suspension of access privileges, security review, potential termination."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "policy_document_handling",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Handling"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "20"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "document_handling"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All documents must be properly tracked, secured, and handled according to their classification level throughout the entire lifecycle."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "weekly"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Use chain of custody forms, implement proper storage procedures, maintain handling logs."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Retraining required, disciplinary action, potential contract termination."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "12"
            }
          ]
        },
        {
          "id": "policy_destruction_process",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Destruction Process"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "30"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "destruction_process"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All destruction activities must be witnessed, documented, and conducted using approved methods that meet or exceed required security levels."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Require minimum two witnesses, document particle sizes, maintain equipment calibration."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Stop work order, investigation, potential re-destruction of affected materials."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "policy_employee_screening",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Employee Screening"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "40"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "employee_screening"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All employees must undergo comprehensive background checks and receive NAID-specific training before handling confidential materials."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "monthly"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Conduct criminal background checks, verify employment history, provide NAID training certification."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Immediate removal from confidential projects, retraining, potential termination."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "12"
            }
          ]
        },
        {
          "id": "policy_facility_security",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Facility Security"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "50"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "facility_security"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Facilities must maintain appropriate physical security measures including surveillance, access controls, and environmental monitoring."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Install security cameras, implement alarm systems, conduct regular patrols, maintain entry logs."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Security audit, facility improvements required, potential contract suspension."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "policy_equipment_maintenance",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Equipment Maintenance"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "60"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "equipment_maintenance"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "All destruction equipment must be properly maintained, calibrated, and inspected to ensure consistent performance according to specifications."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "weekly"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Follow manufacturer schedules, document all maintenance, test particle sizes regularly."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Equipment shutdown, recalibration required, affected materials may require re-destruction."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "policy_audit_requirements",
          "model": "naid.compliance.enhanced",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Audit Requirements"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "70"
            },
            {
              "name": "policy_type",
              "ref": "",
              "eval": "",
              "value": "audit_requirements"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Comprehensive audit trails must be maintained for all activities, with regular internal and external audits conducted."
            },
            {
              "name": "mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "automated_check",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "check_frequency",
              "ref": "",
              "eval": "",
              "value": "daily"
            },
            {
              "name": "implementation_notes",
              "ref": "",
              "eval": "",
              "value": "Maintain detailed logs, conduct quarterly internal audits, prepare for annual NAID audits."
            },
            {
              "name": "violation_consequences",
              "ref": "",
              "eval": "",
              "value": "Compliance violation notice, corrective action plan required, potential certification loss."
            },
            {
              "name": "review_frequency_months",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "cron_check_employee_credentials",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Check Employee Credential Expiry"
            },
            {
              "name": "model_id",
              "ref": "hr.model_hr_employee",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.check_expiring_credentials()"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "days"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "cron_cleanup_audit_logs",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Cleanup Old Audit Logs"
            },
            {
              "name": "model_id",
              "ref": "model_naid_audit_log",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.cleanup_old_logs()"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "months"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "cron_compliance_check",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Check"
            },
            {
              "name": "model_id",
              "ref": "model_naid_compliance_enhanced",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.check_compliance()"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "hours"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "demo_customer_abc_corp",
          "model": "res.partner",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "ABC Corporation"
            },
            {
              "name": "is_company",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "email",
              "ref": "",
              "eval": "",
              "value": "info@abccorp.com"
            },
            {
              "name": "phone",
              "ref": "",
              "eval": "",
              "value": "555-123-4567"
            },
            {
              "name": "street",
              "ref": "",
              "eval": "",
              "value": "123 Business Lane"
            },
            {
              "name": "city",
              "ref": "",
              "eval": "",
              "value": "Business City"
            },
            {
              "name": "zip",
              "ref": "",
              "eval": "",
              "value": "12345"
            },
            {
              "name": "supplier_rank",
              "ref": "",
              "eval": "",
              "value": "0"
            },
            {
              "name": "customer_rank",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "demo_location_warehouse_a",
          "model": "records.location",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Warehouse A - Secure Storage"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Secure storage facility with climate control"
            },
            {
              "name": "location_type",
              "ref": "",
              "eval": "",
              "value": "warehouse"
            },
            {
              "name": "building",
              "ref": "",
              "eval": "",
              "value": "Building A"
            },
            {
              "name": "zone",
              "ref": "",
              "eval": "",
              "value": "Zone 1"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "climate_controlled",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "access_level",
              "ref": "",
              "eval": "",
              "value": "secure"
            },
            {
              "name": "max_capacity",
              "ref": "",
              "eval": "",
              "value": "10000"
            }
          ]
        },
        {
          "id": "demo_location_warehouse_b",
          "model": "records.location",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Warehouse B - Bulk Storage"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Bulk storage facility for general records"
            },
            {
              "name": "location_type",
              "ref": "",
              "eval": "",
              "value": "warehouse"
            },
            {
              "name": "building",
              "ref": "",
              "eval": "",
              "value": "Building B"
            },
            {
              "name": "zone",
              "ref": "",
              "eval": "",
              "value": "Zone 2"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "climate_controlled",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "access_level",
              "ref": "",
              "eval": "",
              "value": "restricted"
            },
            {
              "name": "max_capacity",
              "ref": "",
              "eval": "",
              "value": "20000"
            }
          ]
        },
        {
          "id": "demo_document_type_contracts",
          "model": "records.document.type",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Contracts"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Legal contracts and agreements"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_document_type_invoices",
          "model": "records.document.type",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Invoices"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Financial invoices and receipts"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_document_type_hr_files",
          "model": "records.document.type",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "HR Personnel Files"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Human resources and employee records"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_retention_policy_standard",
          "model": "records.retention.policy",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Standard Business Records"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "STD-7Y"
            },
            {
              "name": "retention_period",
              "ref": "",
              "eval": "",
              "value": "7"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard 7-year retention for business documents"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_retention_policy_hr",
          "model": "records.retention.policy",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Human Resources Records"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "HR-10Y"
            },
            {
              "name": "retention_period",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Extended retention for HR and employment records"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "confirmed"
            }
          ]
        },
        {
          "id": "demo_container_001",
          "model": "records.container",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Container-001"
            },
            {
              "name": "container_type",
              "ref": "",
              "eval": "",
              "value": "box"
            },
            {
              "name": "location_id",
              "ref": "demo_location_warehouse_a",
              "eval": "",
              "value": ""
            },
            {
              "name": "max_boxes",
              "ref": "",
              "eval": "",
              "value": "50"
            },
            {
              "name": "length",
              "ref": "",
              "eval": "",
              "value": "24.0"
            },
            {
              "name": "width",
              "ref": "",
              "eval": "",
              "value": "15.0"
            },
            {
              "name": "height",
              "ref": "",
              "eval": "",
              "value": "10.0"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "demo_container_002",
          "model": "records.container",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Container-002"
            },
            {
              "name": "container_type",
              "ref": "",
              "eval": "",
              "value": "box"
            },
            {
              "name": "location_id",
              "ref": "demo_location_warehouse_b",
              "eval": "",
              "value": ""
            },
            {
              "name": "max_boxes",
              "ref": "",
              "eval": "",
              "value": "30"
            },
            {
              "name": "length",
              "ref": "",
              "eval": "",
              "value": "15.0"
            },
            {
              "name": "width",
              "ref": "",
              "eval": "",
              "value": "12.0"
            },
            {
              "name": "height",
              "ref": "",
              "eval": "",
              "value": "10.0"
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "demo_shredding_service_template",
          "model": "shredding.service",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Standard Document Shredding"
            },
            {
              "name": "customer_id",
              "ref": "demo_customer_abc_corp",
              "eval": "",
              "value": ""
            },
            {
              "name": "service_type",
              "ref": "",
              "eval": "",
              "value": "onsite"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "draft"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard on-site document destruction service with NAID AAA compliance"
            }
          ]
        },
        {
          "id": "demo_paper_bale_001",
          "model": "paper.bale.recycling",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Bale-001-Demo"
            },
            {
              "name": "gross_weight",
              "ref": "",
              "eval": "",
              "value": "500.0"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "baling"
            },
            {
              "name": "bale_date",
              "ref": "",
              "eval": "(datetime.now() + timedelta(days=30)).strftime('%Y-%m-%d')",
              "value": ""
            }
          ]
        },
        {
          "id": "demo_custody_log_template",
          "model": "records.chain.of.custody",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Template Custody Transfer"
            },
            {
              "name": "custody_event",
              "ref": "",
              "eval": "",
              "value": "transfer"
            },
            {
              "name": "notes",
              "ref": "",
              "eval": "",
              "value": "Template for custody transfer procedures"
            }
          ]
        },
        {
          "id": "demo_portal_request_destruction",
          "model": "portal.request",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Destruction Request Template"
            },
            {
              "name": "customer_id",
              "ref": "demo_customer_abc_corp",
              "eval": "",
              "value": ""
            },
            {
              "name": "request_type",
              "ref": "",
              "eval": "",
              "value": "destruction"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "draft"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Template for customer document destruction requests"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "normal"
            }
          ]
        },
        {
          "id": "demo_portal_request_retrieval",
          "model": "portal.request",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Retrieval Request Template"
            },
            {
              "name": "customer_id",
              "ref": "demo_customer_abc_corp",
              "eval": "",
              "value": ""
            },
            {
              "name": "request_type",
              "ref": "",
              "eval": "",
              "value": "retrieval"
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "draft"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Template for customer document retrieval requests"
            },
            {
              "name": "priority",
              "ref": "",
              "eval": "",
              "value": "normal"
            }
          ]
        },
        {
          "id": "demo_system_config",
          "model": "ir.config_parameter",
          "fields": [
            {
              "name": "key",
              "ref": "",
              "eval": "",
              "value": "records_management.demo_mode"
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "demo_default_retention",
          "model": "ir.config_parameter",
          "fields": [
            {
              "name": "key",
              "ref": "",
              "eval": "",
              "value": "records_management.default_retention_years"
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "7"
            }
          ]
        },
        {
          "id": "demo_naid_compliance",
          "model": "ir.config_parameter",
          "fields": [
            {
              "name": "key",
              "ref": "",
              "eval": "",
              "value": "records_management.naid_compliance_required"
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "portal_request_submitted_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Request Submitted"
            },
            {
              "name": "model_id",
              "ref": "model_portal_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "${object.env.user.email or 'noreply@suncityshred.com'}"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "admin@suncityshred.com"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "New Portal Submission: ${object.name} - ${object.request_type}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear Records Management Team,</p>\n                <p>A new request has been submitted through the customer portal:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Request ID:</strong></td>\n                        <td>${object.name}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Customer:</strong></td>\n                        <td>${object.partner_id.name}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Request Type:</strong></td>\n                        <td>${object.request_type}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Priority:</strong></td>\n                        <td>${object.priority}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Description:</strong></td>\n                        <td>${object.description or 'N/A'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Submission Date:</strong></td>\n                        <td>${object.create_date}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Status:</strong></td>\n                        <td>${object.state}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"margin-top: 20px;\">\n                    <strong>NAID Compliance Note:</strong> This request requires timely processing according to NAID AAA standards.\n                    Please review and assign within 24 hours.\n                </p>\n                \n                <p>\n                    <a href=\"/web#id=${object.id}&view_type=form&model=portal.request\" style=\"background-color: #007cba; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        Review Request\n                    </a>\n                </p>\n                \n                <p>Best regards,<br/>\n                Sun City Shred Portal System</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "portal_request_status_update_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Request Status Update"
            },
            {
              "name": "model_id",
              "ref": "model_portal_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "noreply@suncityshred.com"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.email}"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Request ${object.name} Status Update - ${object.state.title()}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear ${object.partner_id.name},</p>\n                <p>Your request <strong>${object.name}</strong> has been updated:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Request Type:</strong></td>\n                        <td>${object.request_type}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Current Status:</strong></td>\n                        <td><span style=\"\n                            padding: 3px 8px; \n                            border-radius: 3px; \n                            color: white;\n                            background-color: ${'#28a745' if object.state == 'completed' else '#ffc107' if object.state == 'in_progress' else '#6c757d'};\n                        \">${object.state.replace('_', ' ').title()}</span></td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Last Updated:</strong></td>\n                        <td>${object.write_date}</td>\n                    </tr>\n                    % if object.assigned_to:\n                    <tr>\n                        <td><strong>Assigned To:</strong></td>\n                        <td>${object.assigned_to.name}</td>\n                    </tr>\n                    % endif\n                </table>\n                \n                % if object.state == 'completed':\n                <p style=\"color: #28a745; font-weight: bold;\">\u2713 Your request has been completed successfully!</p>\n                % elif object.state == 'in_progress':\n                <p style=\"color: #ffc107; font-weight: bold;\">\u23f3 Your request is currently being processed.</p>\n                % endif\n                \n                <p>\n                    <a href=\"/my/requests/${object.id}\" style=\"background-color: #007cba; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        View Request Details\n                    </a>\n                </p>\n                \n                <p>Thank you for choosing Sun City Shred for your secure document management needs.</p>\n                \n                <p>Best regards,<br/>\n                Sun City Shred Team</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "website_form_submission_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Website Contact Form Submission"
            },
            {
              "name": "model_id",
              "ref": "mail.model_mail_mail",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "${object.email_from or 'noreply@suncityshred.com'}"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "admin@suncityshred.com"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "New Website Inquiry - ${object.subject or 'Contact Form'}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear Sales Team,</p>\n                <p>A new inquiry has been submitted through the website contact form:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Name:</strong></td>\n                        <td>${object.author_id.name or 'Anonymous'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Email:</strong></td>\n                        <td>${object.email_from or 'Not provided'}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Subject:</strong></td>\n                        <td>${object.subject or 'General Inquiry'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Message:</strong></td>\n                        <td>${object.body}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Submission Time:</strong></td>\n                        <td>${object.date}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"margin-top: 20px;\">\n                    <strong>Action Required:</strong> Please follow up within 24 hours to maintain customer service standards.\n                </p>\n                \n                <p>Best regards,<br/>\n                Website Contact System</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            }
          ]
        },
        {
          "id": "portal_request_sms_notification",
          "model": "sms.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Portal Request SMS Update"
            },
            {
              "name": "model_id",
              "ref": "model_portal_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "body",
              "ref": "",
              "eval": "",
              "value": "Sun City Shred: Your request ${object.name} is now ${object.state.replace('_', ' ').title()}. View details: ${ctx.get('base_url', '')}/my/requests/${object.id}"
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "pickup_request_confirmation_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Pickup Request Confirmation"
            },
            {
              "name": "model_id",
              "ref": "model_pickup_request",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "noreply@suncityshred.com"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.email}"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Pickup Scheduled: ${object.name} - ${object.pickup_date}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear ${object.partner_id.name},</p>\n                <p>Your pickup request has been confirmed:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Pickup ID:</strong></td>\n                        <td>${object.name}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Scheduled Date:</strong></td>\n                        <td>${object.pickup_date}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Time Window:</strong></td>\n                        <td>${object.time_window or 'Standard business hours'}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Location:</strong></td>\n                        <td>${object.pickup_location}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Service Type:</strong></td>\n                        <td>${object.service_type}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"color: #007cba; font-weight: bold;\">\n                    \u2713 Pickup confirmed! Our team will arrive during the scheduled time window.\n                </p>\n                \n                <p><strong>Important:</strong> Please ensure materials are properly prepared and accessible for pickup.</p>\n                \n                <p>\n                    <a href=\"/my/pickups/${object.id}\" style=\"background-color: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        View Pickup Details\n                    </a>\n                </p>\n                \n                <p>Thank you for choosing Sun City Shred.</p>\n                \n                <p>Best regards,<br/>\n                Sun City Shred Operations Team</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "True",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "naid_audit_notification_email",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "NAID Compliance Audit Notification"
            },
            {
              "name": "model_id",
              "ref": "model_naid_audit_log",
              "eval": "",
              "value": ""
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "compliance@suncityshred.com"
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.email}"
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "NAID Audit Scheduled: ${object.name} - ${object.audit_date}"
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n            <div style=\"margin: 0px; padding: 0px;\">\n                <p>Dear ${object.partner_id.name},</p>\n                <p>This is to notify you of a scheduled NAID compliance audit:</p>\n                \n                <table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%; max-width: 600px;\">\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Audit ID:</strong></td>\n                        <td>${object.name}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Audit Date:</strong></td>\n                        <td>${object.audit_date}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Audit Type:</strong></td>\n                        <td>${object.audit_type}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Scope:</strong></td>\n                        <td>${object.scope}</td>\n                    </tr>\n                    <tr style=\"background-color: #f5f5f5;\">\n                        <td><strong>Auditor:</strong></td>\n                        <td>${object.auditor_id.name}</td>\n                    </tr>\n                </table>\n                \n                <p style=\"color: #dc3545; font-weight: bold;\">\n                    \ud83d\udd12 NAID AAA Compliance: This audit ensures adherence to NAID AAA certification standards.\n                </p>\n                \n                <p><strong>Preparation Required:</strong> Please have all relevant documentation and personnel available.</p>\n                \n                <p>\n                    <a href=\"/my/audits/${object.id}\" style=\"background-color: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n                        View Audit Details\n                    </a>\n                </p>\n                \n                <p>For questions regarding this audit, please contact our compliance team.</p>\n                \n                <p>Best regards,<br/>\n                NAID Compliance Team<br/>\n                Sun City Shred</p>\n            </div>\n                "
            },
            {
              "name": "auto_delete",
              "ref": "",
              "eval": "False",
              "value": ""
            },
            {
              "name": "lang",
              "ref": "",
              "eval": "",
              "value": "${object.partner_id.lang}"
            }
          ]
        },
        {
          "id": "ir_cron_compute_monthly_storage_fees",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Compute Monthly Storage Fees"
            },
            {
              "name": "model_id",
              "ref": "stock.model_stock_quant",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "\n# Compute monthly storage fees for each customer\ntry:\n    # Search for all internal stock quants\n    quants = env['stock.quant'].search([('location_id.usage', '=', 'internal')])\n\n    # Initialize a dictionary to store total quantity per customer\n    customer_items = {}\n\n    # Iterate through each quant to sum quantities by customer\n    for quant in quants:\n        if quant.lot_id and quant.lot_id.customer_id:\n            customer = quant.lot_id.customer_id\n            if customer in customer_items:\n                customer_items[customer] += quant.quantity\n            else:\n                customer_items[customer] = quant.quantity\n\n    # Try to get the storage fee product reference\n    product = env.ref('records_management.service_storage_fee', raise_if_not_found=False)\n\n    if not product:\n        log('Storage Fee Product (records_management.service_storage_fee) not found. Monthly storage fees not computed.')\n    else:\n        # For each customer, create a sale order for the storage fee product\n        for customer, qty in customer_items.items():\n            if qty > 0:\n                env['sale.order'].create({\n                    'partner_id': customer.id,\n                    'order_line': [(0, 0, {\n                        'product_id': product.id,\n                        'product_uom_qty': qty,\n                        'name': 'Monthly Storage Fee for %s items' % qty,\n                    })],\n                })\nexcept Exception as e:\n    log('Error computing monthly storage fees: %s' % str(e))\n            "
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "months"
            },
            {
              "name": "nextcall",
              "ref": "",
              "eval": "(datetime.now() + timedelta(days=30)).strftime('%Y-%m-%d 00:00:00')",
              "value": ""
            }
          ]
        },
        {
          "id": "ir_cron_generate_monthly_inventory_reports",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Generate Monthly Customer Inventory Reports"
            },
            {
              "name": "model_id",
              "ref": "model_customer_inventory_report",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "\n# Generate monthly inventory reports for all customers\ntry:\n    model.generate_monthly_reports()\n    log('Monthly customer inventory reports generated successfully.')\nexcept Exception as e:\n    log('Error generating monthly inventory reports: %s' % str(e))\n            "
            },
            {
              "name": "active",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "months"
            },
            {
              "name": "nextcall",
              "ref": "",
              "eval": "(datetime.now().replace(day=1) + timedelta(days=32)).replace(day=1).strftime('%Y-%m-%d 09:00:00')",
              "value": ""
            }
          ]
        },
        {
          "id": "product_storage_container",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Storage Container"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-CONTAINER"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "5.0"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "1.5"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Standard archive container for document storage"
            }
          ]
        },
        {
          "id": "product_storage_service",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Monthly Storage Service"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-STORAGE"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "25.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "15.00"
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Monthly document storage service"
            }
          ]
        },
        {
          "id": "product_shredding_service",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Document Shredding Service"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-SHRED"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "50.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "30.00"
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Secure document destruction service"
            }
          ]
        },
        {
          "id": "service_storage_fee",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Monthly Storage Fee"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "REC-STORAGE"
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "2.50"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "1.00"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Monthly fee for storing records and documents."
            }
          ]
        },
        {
          "id": "ir_cron_fsm_day_of_service_notification",
          "model": "ir.cron",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "FSM: Daily Service Notifications"
            },
            {
              "name": "model_id",
              "ref": "records_management.model_fsm_notification",
              "eval": "",
              "value": ""
            },
            {
              "name": "state",
              "ref": "",
              "eval": "",
              "value": "code"
            },
            {
              "name": "code",
              "ref": "",
              "eval": "",
              "value": "model.send_day_of_service_notification()"
            },
            {
              "name": "user_id",
              "ref": "base.user_root",
              "eval": "",
              "value": ""
            },
            {
              "name": "interval_number",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "interval_type",
              "ref": "",
              "eval": "",
              "value": "days"
            },
            {
              "name": "numbercall",
              "ref": "",
              "eval": "",
              "value": "-1"
            },
            {
              "name": "doall",
              "ref": "",
              "eval": "False",
              "value": ""
            }
          ]
        },
        {
          "id": "portal_feedback_survey",
          "model": "survey.survey",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Records Management Portal Feedback"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Help us improve your portal experience with your valuable feedback"
            },
            {
              "name": "access_mode",
              "ref": "",
              "eval": "",
              "value": "public"
            },
            {
              "name": "users_login_required",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "attempts_limit",
              "ref": "",
              "eval": "",
              "value": "0"
            },
            {
              "name": "is_time_limited",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "certification",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "scoring_type",
              "ref": "",
              "eval": "",
              "value": "no_scoring"
            }
          ]
        },
        {
          "id": "feedback_page_general",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "General Portal Experience"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Tell us about your overall experience with the Records Management Portal"
            }
          ]
        },
        {
          "id": "feedback_overall_satisfaction",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How satisfied are you with the portal overall?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_general",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "satisfaction_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent - Exceeds expectations"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "satisfaction_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good - Meets expectations"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "satisfaction_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair - Some improvements needed"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "satisfaction_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_overall_satisfaction",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor - Significant improvements needed"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_features_used",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Which features have you used? (Select all that apply)"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_general",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "multiple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "feature_inventory",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Inventory Management & Search"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "feature_quotes",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Quote Generation"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "feature_billing",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Billing & PO Management"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "feature_requests",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Service Requests & Destruction"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feature_signatures",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Electronic Signatures"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "5"
            }
          ]
        },
        {
          "id": "feature_users",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "User Management"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "6"
            }
          ]
        },
        {
          "id": "feature_certificates",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_features_used",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Destruction Certificates"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "7"
            }
          ]
        },
        {
          "id": "feedback_ease_of_use",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How easy is the portal to navigate and use?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_general",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "ease_very_easy",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Very Easy - Intuitive and user-friendly"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "ease_easy",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Easy - Generally straightforward"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "ease_moderate",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Moderate - Some features confusing"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "ease_difficult",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_ease_of_use",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Difficult - Hard to find what I need"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_page_features",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Feature-Specific Feedback"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "5"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Help us improve specific features and functionality"
            }
          ]
        },
        {
          "id": "feedback_search_rating",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How would you rate the search functionality?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "6"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_features",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "search_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent - Finds everything quickly"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "search_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good - Usually finds what I need"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "search_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair - Sometimes hard to find items"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "search_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_search_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor - Difficult to find what I need"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_security_confidence",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How confident are you in our NAID AAA compliance and security measures?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "7"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_features",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "security_very_confident",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Very Confident - Completely trust the security"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "security_confident",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Confident - Trust the measures in place"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "security_somewhat",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Somewhat Confident - Some concerns"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "security_not_confident",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_security_confidence",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Not Confident - Have security concerns"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "feedback_page_improvements",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Suggestions for Improvement"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "8"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Help us make the portal even better"
            }
          ]
        },
        {
          "id": "feedback_missing_features",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "What features or functionality would you like to see added?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "9"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_improvements",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "feedback_general_comments",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Any other comments, suggestions, or concerns?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "10"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_improvements",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "feedback_contact_permission",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "May we contact you to follow up on your feedback?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "11"
            },
            {
              "name": "survey_id",
              "ref": "portal_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "feedback_page_improvements",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "contact_yes",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_contact_permission",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Yes, please contact me"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "contact_no",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "feedback_contact_permission",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "No, I prefer not to be contacted"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "service_request_feedback_survey",
          "model": "survey.survey",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Service Request Feedback"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Rate your experience with our destruction and service requests"
            },
            {
              "name": "access_mode",
              "ref": "",
              "eval": "",
              "value": "public"
            },
            {
              "name": "users_login_required",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "attempts_limit",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "is_time_limited",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "certification",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "scoring_type",
              "ref": "",
              "eval": "",
              "value": "no_scoring"
            }
          ]
        },
        {
          "id": "service_feedback_page",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Service Request Experience"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Tell us about your recent service request experience"
            }
          ]
        },
        {
          "id": "service_rating",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How would you rate the overall service provided?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "service_feedback_page",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "service_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "service_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "service_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "service_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_rating",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "service_timeliness",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "How would you rate the timeliness of service completion?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "service_feedback_page",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "simple_choice"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            }
          ]
        },
        {
          "id": "timeliness_excellent",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Excellent - Completed faster than expected"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            }
          ]
        },
        {
          "id": "timeliness_good",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Good - Completed on time"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            }
          ]
        },
        {
          "id": "timeliness_fair",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Fair - Slight delay"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            }
          ]
        },
        {
          "id": "timeliness_poor",
          "model": "survey.question.answer",
          "fields": [
            {
              "name": "question_id",
              "ref": "service_timeliness",
              "eval": "",
              "value": ""
            },
            {
              "name": "value",
              "ref": "",
              "eval": "",
              "value": "Poor - Significant delay"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            }
          ]
        },
        {
          "id": "service_comments",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Any additional comments about the service provided?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "survey_id",
              "ref": "service_request_feedback_survey",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "service_feedback_page",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "survey_feedback_portal",
          "model": "survey.survey",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Portal Feedback & Suggestions"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Quick feedback form for suggestions and concerns"
            },
            {
              "name": "access_mode",
              "ref": "",
              "eval": "",
              "value": "public"
            },
            {
              "name": "users_login_required",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "is_attempts_limited",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "questions_layout",
              "ref": "",
              "eval": "",
              "value": "page_per_section"
            },
            {
              "name": "scoring_type",
              "ref": "",
              "eval": "",
              "value": "no_scoring"
            },
            {
              "name": "certification",
              "ref": "",
              "eval": "",
              "value": "False"
            }
          ]
        },
        {
          "id": "page_feedback",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Your Feedback"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "1"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "is_page",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Please share your thoughts to help us improve our services"
            }
          ]
        },
        {
          "id": "question_suggestions",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Suggestions for Improvements"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "2"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "page_feedback",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "What improvements would you like to see in our portal or services?"
            }
          ]
        },
        {
          "id": "question_concerns",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Any Concerns?"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "3"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "page_feedback",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "text_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "False"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Please share any concerns or issues you've experienced"
            }
          ]
        },
        {
          "id": "question_rating",
          "model": "survey.question",
          "fields": [
            {
              "name": "title",
              "ref": "",
              "eval": "",
              "value": "Rate the Portal (1-5)"
            },
            {
              "name": "sequence",
              "ref": "",
              "eval": "",
              "value": "4"
            },
            {
              "name": "survey_id",
              "ref": "survey_feedback_portal",
              "eval": "",
              "value": ""
            },
            {
              "name": "page_id",
              "ref": "page_feedback",
              "eval": "",
              "value": ""
            },
            {
              "name": "question_type",
              "ref": "",
              "eval": "",
              "value": "numerical_box"
            },
            {
              "name": "constr_mandatory",
              "ref": "",
              "eval": "",
              "value": "True"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "On a scale of 1-5, how would you rate your overall portal experience?"
            },
            {
              "name": "validation_min_float_value",
              "ref": "",
              "eval": "",
              "value": "1.0"
            },
            {
              "name": "validation_max_float_value",
              "ref": "",
              "eval": "",
              "value": "5.0"
            },
            {
              "name": "validation_error_msg",
              "ref": "",
              "eval": "",
              "value": "Please enter a rating between 1 and 5"
            }
          ]
        },
        {
          "id": "product_paper_white",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "White Paper Bale"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "consu"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "0.08"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "0.05"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "PAPER-WHITE"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "High-grade white paper suitable for recycling"
            }
          ]
        },
        {
          "id": "product_paper_mixed",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Mixed Paper Bale"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "consu"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "0.06"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "0.03"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "PAPER-MIXED"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Mixed office paper and documents"
            }
          ]
        },
        {
          "id": "product_paper_cardboard",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Cardboard Bale"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "consu"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_lb",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "0.04"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "0.02"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "PAPER-CARDBOARD"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Corrugated cardboard and heavy paper products"
            }
          ]
        },
        {
          "id": "product_baling_service",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Paper Baling Service"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "25.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "15.00"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "SVC-BALING"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Professional paper baling and compression service"
            }
          ]
        },
        {
          "id": "product_load_transport",
          "model": "product.product",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "Load Transportation"
            },
            {
              "name": "type",
              "ref": "",
              "eval": "",
              "value": "service"
            },
            {
              "name": "categ_id",
              "ref": "product.product_category_all",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "uom_po_id",
              "ref": "uom.product_uom_unit",
              "eval": "",
              "value": ""
            },
            {
              "name": "list_price",
              "ref": "",
              "eval": "",
              "value": "150.00"
            },
            {
              "name": "standard_price",
              "ref": "",
              "eval": "",
              "value": "100.00"
            },
            {
              "name": "default_code",
              "ref": "",
              "eval": "",
              "value": "SVC-TRANSPORT"
            },
            {
              "name": "description",
              "ref": "",
              "eval": "",
              "value": "Trailer load pickup and transportation service"
            }
          ]
        },
        {
          "id": "mail_template_fsm_day_of_service",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "FSM: Day of Service Notification"
            },
            {
              "name": "model_id",
              "ref": "industry_fsm.model_fsm_task",
              "eval": "",
              "value": ""
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Your Service is Scheduled for Today"
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "\"${object.company_id.email}\""
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "\"${object.partner_id.email}\""
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n<p>Dear ${object.partner_id.name},</p>\n<p>This is a reminder that your service (${object.name}) is scheduled for today, ${object.schedule_date}.</p>\n<p>Our team will be on-site to perform the requested services. If you have any questions, please contact us.</p>\n<p>Thank you,<br/>\n${object.company_id.name}</p>\n            "
            }
          ]
        },
        {
          "id": "mail_template_fsm_driver_nearby",
          "model": "mail.template",
          "fields": [
            {
              "name": "name",
              "ref": "",
              "eval": "",
              "value": "FSM: Driver Nearby Notification"
            },
            {
              "name": "model_id",
              "ref": "industry_fsm.model_fsm_task",
              "eval": "",
              "value": ""
            },
            {
              "name": "subject",
              "ref": "",
              "eval": "",
              "value": "Your Driver is Nearby"
            },
            {
              "name": "email_from",
              "ref": "",
              "eval": "",
              "value": "\"${object.company_id.email}\""
            },
            {
              "name": "email_to",
              "ref": "",
              "eval": "",
              "value": "\"${object.partner_id.email}\""
            },
            {
              "name": "body_html",
              "ref": "",
              "eval": "",
              "value": "\n<p>Dear ${object.partner_id.name},</p>\n<p>Our driver is nearby and will be arriving shortly for your service (${object.name}).</p>\n<p>Please be prepared for our arrival.</p>\n<p>Thank you,<br/>\n${object.company_id.name}</p>\n            "
            }
          ]
        }
      ],
      "external_references": []
    }
  },
  "dependencies": {
    "relationships": {
      "many2one": [
        {
          "model": "installer",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "installer",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "account.move.records.extension",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "account.move.records.extension",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "bin.key.history",
          "field": "partner_bin_key_id",
          "comodel": "Partner Bin Key"
        },
        {
          "model": "bin.key.history",
          "field": "user_id",
          "comodel": "User"
        },
        {
          "model": "bin.key.history",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "naid.destruction.record",
          "field": "certificate_id",
          "comodel": "Certificate"
        },
        {
          "model": "naid.destruction.record",
          "field": "responsible_user_id",
          "comodel": "Destruction Manager"
        },
        {
          "model": "records.advanced.billing.period",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.advanced.billing.period",
          "field": "user_id",
          "comodel": "User"
        },
        {
          "model": "records.approval.step",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.approval.step",
          "field": "user_id",
          "comodel": "Step Manager"
        },
        {
          "model": "records.approval.step",
          "field": "approver_user_id",
          "comodel": "Approver"
        },
        {
          "model": "records.approval.step",
          "field": "approval_group_id",
          "comodel": "Approval Group"
        },
        {
          "model": "field.label.customization",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "field.label.customization",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.container.transfer",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.container.transfer",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "partner.bin.key",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "partner.bin.key",
          "field": "user_id",
          "comodel": "Key Manager"
        },
        {
          "model": "partner.bin.key",
          "field": "partner_id",
          "comodel": "Customer"
        },
        {
          "model": "partner.bin.key",
          "field": "assigned_to_contact",
          "comodel": "Assigned To"
        },
        {
          "model": "partner.bin.key",
          "field": "category_id",
          "comodel": "Partner Category"
        },
        {
          "model": "partner.bin.key",
          "field": "country_id",
          "comodel": "Country"
        },
        {
          "model": "transitory.items",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "transitory.items",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "revenue.forecaster",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "revenue.forecaster",
          "field": "user_id",
          "comodel": "Created By"
        },
        {
          "model": "stock.picking.records.extension",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "stock.picking.records.extension",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.department.billing.enhanced",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.department.billing.enhanced",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.chain.of.custody",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.chain.of.custody",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.deletion.request.enhanced",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.deletion.request.enhanced",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "barcode.models.enhanced",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "barcode.models.enhanced",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "barcode.product",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "barcode.product",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "naid.compliance",
          "field": "certificate_id",
          "comodel": "Certificate"
        },
        {
          "model": "survey.user.input.enhanced",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "survey.user.input.enhanced",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.management.base.menus",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.management.base.menus",
          "field": "user_id",
          "comodel": "User"
        },
        {
          "model": "survey.improvement.action",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "survey.improvement.action",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.container",
          "field": "location_id",
          "comodel": "Location"
        },
        {
          "model": "records.container",
          "field": "customer_id",
          "comodel": "Customer"
        },
        {
          "model": "records.container",
          "field": "customer_inventory_id",
          "comodel": "Customer Inventory"
        },
        {
          "model": "records.billing.service",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.billing.service",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.billing.service",
          "field": "billing_id",
          "comodel": "Related Billing"
        },
        {
          "model": "document.retrieval.work.order",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "document.retrieval.work.order",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "shredding.hard_drive",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "shredding.hard_drive",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "shredding.rates",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "shredding.rates",
          "field": "user_id",
          "comodel": "User"
        },
        {
          "model": "shredding.rates",
          "field": "partner_id",
          "comodel": "Partner"
        },
        {
          "model": "ir.module.ext",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "ir.module.ext",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.storage.department.user",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.storage.department.user",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "shredding.service.log",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "shredding.service.log",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "paper.bale",
          "field": "load_id",
          "comodel": "Load"
        },
        {
          "model": "records.location",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "stock.report_reception_report_label",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "stock.report_reception_report_label",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "paper.bale.recycling",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "paper.bale.recycling",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "mobile.bin.key.wizard",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "mobile.bin.key.wizard",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "mobile.bin.key.wizard",
          "field": "contact_id",
          "comodel": "Contact"
        },
        {
          "model": "mobile.bin.key.wizard",
          "field": "customer_company_id",
          "comodel": "Customer Company"
        },
        {
          "model": "photo",
          "field": "mobile_bin_key_wizard_id",
          "comodel": "Mobile Bin Key Wizard"
        },
        {
          "model": "photo",
          "field": "user_id",
          "comodel": "Uploaded By"
        },
        {
          "model": "photo",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "scrm.records.management",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "scrm.records.management",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.billing.config",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.billing.config",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.location.inspection",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.location.inspection",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.digital.scan",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.digital.scan",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.digital.scan",
          "field": "document_id",
          "comodel": "Document"
        },
        {
          "model": "records.digital.scan",
          "field": "scanned_by",
          "comodel": "Scanned By"
        },
        {
          "model": "records.digital.scan",
          "field": "search_view_id",
          "comodel": "Search View"
        },
        {
          "model": "bin.unlock.service",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "bin.unlock.service",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "destruction.item",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "destruction.item",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "naid.chain.custody",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "naid.chain.custody",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "naid.audit.log",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "naid.audit.log",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "container.contents",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "container.contents",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "stock.lot.attribute",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "stock.lot.attribute",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "prod.ext",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "prod.ext",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "shredding.picklist.item",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "shredding.picklist.item",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "paper.load.shipment",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "paper.load.shipment",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "shredding.bin",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "shredding.bin",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records_management.bale",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records_management.bale",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.billing",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.billing",
          "field": "user_id",
          "comodel": "Billing Manager"
        },
        {
          "model": "records.billing",
          "field": "partner_id",
          "comodel": "Customer"
        },
        {
          "model": "records.billing",
          "field": "department_id",
          "comodel": "Department"
        },
        {
          "model": "records.billing",
          "field": "invoice_id",
          "comodel": "Related Invoice"
        },
        {
          "model": "res.partner.key.restriction",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "res.partner.key.restriction",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "naid.audit.log",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "naid.audit.log",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.approval.workflow",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.approval.workflow",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "visitor",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "visitor",
          "field": "user_id",
          "comodel": "Host/Escort"
        },
        {
          "model": "visitor",
          "field": "escort_assigned",
          "comodel": "Assigned Escort"
        },
        {
          "model": "visitor",
          "field": "customer_id",
          "comodel": "Related Customer"
        },
        {
          "model": "survey.feedback.theme",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "survey.feedback.theme",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "portal.request",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "portal.request",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "shredding.service",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "shredding.service",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "naid.performance.history",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "naid.performance.history",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "work.order.shredding",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "work.order.shredding",
          "field": "user_id",
          "comodel": "Work Order Manager"
        },
        {
          "model": "work.order.shredding",
          "field": "customer_id",
          "comodel": "Customer"
        },
        {
          "model": "hr.emp.naid",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "hr.emp.naid",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.security.audit",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.security.audit",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.retention.policy",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.retention.policy",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.billing.contact",
          "field": "billing_profile_id",
          "comodel": "Billing Profile"
        },
        {
          "model": "bin.key.management",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "bin.key.management",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.vehicle",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.vehicle",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.vehicle",
          "field": "driver_id",
          "comodel": "Driver"
        },
        {
          "model": "unlock.service.history",
          "field": "partner_bin_key_id",
          "comodel": "Partner Bin Key"
        },
        {
          "model": "unlock.service.history",
          "field": "user_id",
          "comodel": "Service User"
        },
        {
          "model": "unlock.service.history",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "stock.move.sms.validation",
          "field": "move_id",
          "comodel": "Stock Move"
        },
        {
          "model": "records.access.log",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.access.log",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "customer.rate.profile",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "customer.rate.profile",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "portal.feedback",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "portal.feedback",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "pickup.request.item",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "pickup.request.item",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.document",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.document",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.document",
          "field": "customer_inventory_id",
          "comodel": "Customer Inventory"
        },
        {
          "model": "temp.inventory",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "temp.inventory",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "naid.compliance.checklist",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "naid.compliance.checklist",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.audit.log",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.audit.log",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "customer.inventory",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "customer.inventory",
          "field": "user_id",
          "comodel": "User"
        },
        {
          "model": "customer.inventory",
          "field": "customer_id",
          "comodel": "Customer Id"
        },
        {
          "model": "customer.inventory",
          "field": "document_type_id",
          "comodel": "Document Type"
        },
        {
          "model": "customer.inventory",
          "field": "location_id",
          "comodel": "Location"
        },
        {
          "model": "customer.inventory",
          "field": "search_view_id",
          "comodel": "Search View"
        },
        {
          "model": "load",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "load",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "file.retrieval.work.order",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "file.retrieval.work.order",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "customer.retrieval.rates",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "customer.retrieval.rates",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.tag",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.tag",
          "field": "user_id",
          "comodel": "Responsible User"
        },
        {
          "model": "naid.custody.event",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "naid.custody.event",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.department.billing.contact",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.department.billing.contact",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "proj.task.ext",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "proj.task.ext",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "pickup.request",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "pickup.request",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "pickup.route",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "pickup.route",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "pickup.route",
          "field": "vehicle_id",
          "comodel": "Assigned Vehicle"
        },
        {
          "model": "location.report.wizard",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "location.report.wizard",
          "field": "user_id",
          "comodel": "User"
        },
        {
          "model": "location.report.wizard",
          "field": "location_id",
          "comodel": "Location"
        },
        {
          "model": "naid.certificate",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "naid.certificate",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.document.type",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.document.type",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "records.document.type",
          "field": "approved_by",
          "comodel": ""
        },
        {
          "model": "records.container.movement",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.container.movement",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "transitory.field.config",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "transitory.field.config",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "customer.feedback",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "customer.feedback",
          "field": "user_id",
          "comodel": "Assigned User"
        },
        {
          "model": "customer.feedback",
          "field": "customer_id",
          "comodel": "Customer"
        },
        {
          "model": "customer.feedback",
          "field": "contact_person",
          "comodel": "Contact Person"
        },
        {
          "model": "records.department",
          "field": "company_id",
          "comodel": "Company"
        },
        {
          "model": "records.department",
          "field": "user_id",
          "comodel": "Created By"
        },
        {
          "model": "records.department",
          "field": "partner_id",
          "comodel": "Organization"
        },
        {
          "model": "records.department",
          "field": "department_manager_id",
          "comodel": "Department Manager"
        },
        {
          "model": "records.department",
          "field": "records_coordinator_id",
          "comodel": "Records Coordinator"
        },
        {
          "model": "customer.inventory.report",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "customer.inventory.report",
          "field": "user_id",
          "comodel": ""
        },
        {
          "model": "records.policy.version",
          "field": "company_id",
          "comodel": ""
        },
        {
          "model": "records.policy.version",
          "field": "user_id",
          "comodel": ""
        }
      ],
      "one2many": [
        {
          "model": "records.advanced.billing.period",
          "field": "billing_ids",
          "comodel": "Billings",
          "inverse": "Billings"
        },
        {
          "model": "partner.bin.key",
          "field": "bin_key_history_ids",
          "comodel": "Bin Key History Ids",
          "inverse": "Bin Key History Ids"
        },
        {
          "model": "partner.bin.key",
          "field": "unlock_service_history_ids",
          "comodel": "Unlock Service History Ids",
          "inverse": "Unlock Service History Ids"
        },
        {
          "model": "revenue.forecaster",
          "field": "rate_change_wizard_ids",
          "comodel": "Rate Change Wizards",
          "inverse": "Rate Change Wizards"
        },
        {
          "model": "records.management.base.menus",
          "field": "message_ids",
          "comodel": "Messages",
          "inverse": "Messages"
        },
        {
          "model": "records.management.base.menus",
          "field": "activity_ids",
          "comodel": "Activities",
          "inverse": "Activities"
        },
        {
          "model": "records.management.base.menus",
          "field": "message_follower_ids",
          "comodel": "Followers",
          "inverse": "Followers"
        },
        {
          "model": "shredding.rates",
          "field": "message_ids",
          "comodel": "Messages",
          "inverse": "Messages"
        },
        {
          "model": "shredding.rates",
          "field": "activity_ids",
          "comodel": "Activities",
          "inverse": "Activities"
        },
        {
          "model": "shredding.rates",
          "field": "message_follower_ids",
          "comodel": "Followers",
          "inverse": "Followers"
        },
        {
          "model": "records.location",
          "field": "container_ids",
          "comodel": "Containers",
          "inverse": "Containers"
        },
        {
          "model": "mobile.bin.key.wizard",
          "field": "photo_ids",
          "comodel": "Photo Ids",
          "inverse": "Photo Ids"
        },
        {
          "model": "records.digital.scan",
          "field": "activity_ids",
          "comodel": "Activities",
          "inverse": "Activities"
        },
        {
          "model": "records.digital.scan",
          "field": "message_follower_ids",
          "comodel": "Followers",
          "inverse": "Followers"
        },
        {
          "model": "records.digital.scan",
          "field": "message_ids",
          "comodel": "Messages",
          "inverse": "Messages"
        },
        {
          "model": "records.billing",
          "field": "service_ids",
          "comodel": "Billing Services",
          "inverse": "Billing Services"
        },
        {
          "model": "records.vehicle",
          "field": "pickup_route_ids",
          "comodel": "Pickup Routes",
          "inverse": "Pickup Routes"
        },
        {
          "model": "customer.inventory",
          "field": "message_ids",
          "comodel": "Messages",
          "inverse": "Messages"
        },
        {
          "model": "customer.inventory",
          "field": "activity_ids",
          "comodel": "Activities",
          "inverse": "Activities"
        },
        {
          "model": "customer.inventory",
          "field": "message_follower_ids",
          "comodel": "Followers",
          "inverse": "Followers"
        },
        {
          "model": "customer.inventory",
          "field": "box_ids",
          "comodel": "Containers",
          "inverse": "Containers"
        },
        {
          "model": "customer.inventory",
          "field": "document_ids",
          "comodel": "Document Ids",
          "inverse": "Document Ids"
        },
        {
          "model": "location.report.wizard",
          "field": "message_ids",
          "comodel": "Messages",
          "inverse": "Messages"
        },
        {
          "model": "location.report.wizard",
          "field": "activity_ids",
          "comodel": "Activities",
          "inverse": "Activities"
        },
        {
          "model": "location.report.wizard",
          "field": "message_follower_ids",
          "comodel": "Followers",
          "inverse": "Followers"
        }
      ],
      "many2many": [
        {
          "model": "revenue.forecaster",
          "field": "specific_customer_ids",
          "comodel": "Target Customers"
        }
      ],
      "missing_comodels": [],
      "circular_dependencies": []
    },
    "analysis": {
      "manifest_dependencies": [
        "base",
        "mail",
        "web",
        "product",
        "stock",
        "account",
        "sale",
        "purchase",
        "portal",
        "website",
        "point_of_sale",
        "sign",
        "sms",
        "hr",
        "survey"
      ],
      "external_references": [
        "industry_fsm.project_task_view_form",
        "uom.product_uom_unit",
        "uom.product_uom_unit",
        "uom.product_uom_lb",
        "industry_fsm.model_fsm_task"
      ],
      "missing_dependencies": [
        {
          "module": "industry_fsm",
          "reference": "industry_fsm.project_task_view_form",
          "file": "views/fsm_task_views.xml"
        },
        {
          "module": "uom",
          "reference": "uom.product_uom_unit",
          "file": "data/products.xml"
        }
      ]
    }
  },
  "issues": [],
  "statistics": {
    "models": {
      "total": 103,
      "with_inheritance": 94,
      "with_mail_thread": 94
    },
    "fields": {
      "total": 1126,
      "by_type": {
        "Char": 257,
        "Many2one": 222,
        "Boolean": 113,
        "Selection": 129,
        "Text": 167,
        "Date": 77,
        "Datetime": 54,
        "Integer": 35,
        "One2many": 25,
        "Float": 45,
        "Many2many": 1,
        "Binary": 1
      }
    },
    "views": {
      "total": 53,
      "total_records": 233
    },
    "security": {
      "access_rules": 209,
      "models_covered": 0
    },
    "data": {
      "total_files": 18,
      "total_records": 131
    }
  },
  "recommendations": [
    {
      "priority": "medium",
      "category": "inheritance",
      "title": "Add mail.thread inheritance",
      "description": "9 models lack mail.thread inheritance for tracking",
      "affected": [
        "hr_employee.py",
        "fsm.notification.placeholder",
        "res_config_settings.py",
        "fsm.task.placeholder",
        "records.billing.contact",
        "pos_config.py",
        "stock.move.sms.validation",
        "res_partner.py",
        "fsm.route.management.placeholder"
      ]
    },
    {
      "priority": "high",
      "category": "compute_methods",
      "title": "Add @api.depends decorators",
      "description": "55 compute methods missing @api.depends decorators",
      "affected": [
        "installer._compute_display_name",
        "bin.key.history._compute_display_name",
        "records.advanced.billing.period._compute_price_total",
        "hr_employee.py._compute_display_name",
        "field.label.customization._compute_display_name",
        "partner.bin.key._compute_active_bin_key_count",
        "partner.bin.key._compute_total_bin_keys_issued",
        "partner.bin.key._compute_total_unlock_charges",
        "partner.bin.key._compute_unlock_service_count",
        "transitory.items._compute_display_name",
        "revenue.forecaster._compute_projected_revenue",
        "revenue.forecaster._compute_revenue_increase",
        "revenue.forecaster._compute_revenue_increase_percentage",
        "revenue.forecaster._compute_risk_level",
        "records.chain.of.custody._compute_display_name",
        "survey.improvement.action._compute_display_name",
        "document.retrieval.work.order._compute_display_name",
        "shredding.service.log._compute_display_name",
        "paper.bale.recycling._compute_display_name",
        "photo._compute_display_name",
        "bin.unlock.service._compute_display_name",
        "destruction.item._compute_display_name",
        "container.contents._compute_display_name",
        "paper.load.shipment._compute_display_name",
        "records.billing._compute_total_amount",
        "records.billing._compute_balance_due",
        "res.partner.key.restriction._compute_display_name",
        "portal.request._compute_display_name",
        "shredding.service._compute_display_name",
        "records.retention.policy._compute_display_name",
        "records.billing.contact._compute_contact_count",
        "records.billing.contact._compute_contact_count",
        "records.billing.contact._compute_next_storage_billing_date",
        "bin.key.management._compute_display_name",
        "records.vehicle._compute_display_name",
        "pos_config.py._compute_display_name",
        "unlock.service.history._compute_display_name",
        "customer.rate.profile._compute_display_name",
        "portal.feedback._compute_display_name",
        "records.document._compute_display_name",
        "temp.inventory._compute_display_name",
        "customer.inventory._compute_total_boxes",
        "customer.inventory._compute_total_documents",
        "load._compute_display_name",
        "file.retrieval.work.order._compute_display_name",
        "customer.retrieval.rates._compute_display_name",
        "records.tag._compute_display_name",
        "pickup.route._compute_display_name",
        "location.report.wizard._compute_report_data",
        "naid.certificate._compute_display_name",
        "records.document.type._compute_display_name",
        "records.document.type._compute_document_count",
        "records.document.type._compute_document_type_utilization",
        "records.container.movement._compute_display_name",
        "transitory.field.config._compute_display_name"
      ]
    },
    {
      "priority": "high",
      "category": "security",
      "title": "Add missing security rules",
      "description": "22 models lack access control rules",
      "affected": [
        "scrm.records.management",
        "customer.inventory.report",
        "file.retrieval.work.order",
        "naid.compliance",
        "stock.report_reception_report_label",
        "stock.lot.attribute",
        "naid.destruction.record",
        "wizard.template",
        "survey.user.input.enhanced",
        "stock.picking.records.extension",
        "proj.task.ext",
        "records_management.bale",
        "fsm.task.placeholder",
        "records.billing.contact",
        "document.retrieval.work.order",
        "account.move.records.extension",
        "ir.module.ext",
        "hr.emp.naid",
        "photo",
        "shredding.hard_drive",
        "fsm.notification.placeholder",
        "fsm.route.management.placeholder"
      ]
    }
  ],
  "code_quality": {
    "complexity": {
      "installer.py": {
        "classes": 1,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 35
      },
      "account_move.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "bin_key_history.py": {
        "classes": 1,
        "methods": 1,
        "fields": 10,
        "lines_of_code": 69
      },
      "naid_destruction_record.py": {
        "classes": 1,
        "methods": 0,
        "fields": 8,
        "lines_of_code": 22
      },
      "advanced_billing.py": {
        "classes": 3,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 92
      },
      "records_approval_step.py": {
        "classes": 1,
        "methods": 3,
        "fields": 17,
        "lines_of_code": 100
      },
      "hr_employee.py": {
        "classes": 1,
        "methods": 4,
        "fields": 0,
        "lines_of_code": 45
      },
      "field_label_customization.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "records_container_transfer.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "partner_bin_key.py": {
        "classes": 1,
        "methods": 9,
        "fields": 49,
        "lines_of_code": 212
      },
      "transitory_items.py": {
        "classes": 1,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 35
      },
      "revenue_forecaster.py": {
        "classes": 1,
        "methods": 12,
        "fields": 29,
        "lines_of_code": 386
      },
      "stock_picking.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "department_billing.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_chain_of_custody.py": {
        "classes": 1,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 35
      },
      "records_deletion_request.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "barcode_models.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "barcode_product.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "naid_compliance.py": {
        "classes": 1,
        "methods": 0,
        "fields": 8,
        "lines_of_code": 22
      },
      "survey_user_input.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_management_base_menus.py": {
        "classes": 1,
        "methods": 0,
        "fields": 13,
        "lines_of_code": 30
      },
      "survey_improvement_action.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "records_container.py": {
        "classes": 1,
        "methods": 0,
        "fields": 10,
        "lines_of_code": 24
      },
      "billing_automation.py": {
        "classes": 1,
        "methods": 2,
        "fields": 9,
        "lines_of_code": 36
      },
      "document_retrieval_work_order.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "shredding_hard_drive.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "shredding_rates.py": {
        "classes": 1,
        "methods": 1,
        "fields": 21,
        "lines_of_code": 80
      },
      "fsm_notification.py": {
        "classes": 1,
        "methods": 1,
        "fields": 1,
        "lines_of_code": 21
      },
      "ir_module.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_storage_department_user.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "shredding_service_log.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "paper_bale.py": {
        "classes": 1,
        "methods": 0,
        "fields": 6,
        "lines_of_code": 16
      },
      "records_location.py": {
        "classes": 1,
        "methods": 2,
        "fields": 9,
        "lines_of_code": 41
      },
      "ir_actions_report.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "res_config_settings.py": {
        "classes": 1,
        "methods": 0,
        "fields": 0,
        "lines_of_code": 38
      },
      "paper_bale_recycling.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "mobile_bin_key_wizard.py": {
        "classes": 1,
        "methods": 3,
        "fields": 40,
        "lines_of_code": 87
      },
      "photo.py": {
        "classes": 1,
        "methods": 1,
        "fields": 11,
        "lines_of_code": 65
      },
      "scrm_records_management.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "billing_models.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_location_inspection.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_digital_scan.py": {
        "classes": 1,
        "methods": 0,
        "fields": 33,
        "lines_of_code": 72
      },
      "bin_unlock_service.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "destruction_item.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "naid_custody.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "naid_audit.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "container_contents.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "stock_lot.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "product.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "shredding_inventory.py": {
        "classes": 2,
        "methods": 4,
        "fields": 8,
        "lines_of_code": 63
      },
      "paper_load_shipment.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "shredding_bin_models.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "bale.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "billing.py": {
        "classes": 1,
        "methods": 10,
        "fields": 23,
        "lines_of_code": 161
      },
      "res_partner_key_restriction.py": {
        "classes": 1,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 35
      },
      "naid_audit_log.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "fsm_task.py": {
        "classes": 1,
        "methods": 1,
        "fields": 1,
        "lines_of_code": 28
      },
      "records_approval_workflow.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "visitor.py": {
        "classes": 1,
        "methods": 5,
        "fields": 26,
        "lines_of_code": 144
      },
      "survey_feedback_theme.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "portal_request.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "shredding_service.py": {
        "classes": 1,
        "methods": 6,
        "fields": 13,
        "lines_of_code": 82
      },
      "naid_performance_history.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "work_order_shredding.py": {
        "classes": 1,
        "methods": 2,
        "fields": 9,
        "lines_of_code": 37
      },
      "hr_employee_naid.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_security_audit.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_retention_policy.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "customer_billing_profile.py": {
        "classes": 2,
        "methods": 17,
        "fields": 11,
        "lines_of_code": 324
      },
      "bin_key_management.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "records_vehicle.py": {
        "classes": 1,
        "methods": 6,
        "fields": 26,
        "lines_of_code": 116
      },
      "pos_config.py": {
        "classes": 1,
        "methods": 6,
        "fields": 0,
        "lines_of_code": 63
      },
      "wizard_template.py": {
        "classes": 1,
        "methods": 1,
        "fields": 1,
        "lines_of_code": 12
      },
      "unlock_service_history.py": {
        "classes": 1,
        "methods": 1,
        "fields": 10,
        "lines_of_code": 67
      },
      "stock_move_sms_validation.py": {
        "classes": 1,
        "methods": 0,
        "fields": 4,
        "lines_of_code": 11
      },
      "records_access_log.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "customer_rate_profile.py": {
        "classes": 1,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 35
      },
      "portal_feedback.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "pickup_request_item.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_document.py": {
        "classes": 1,
        "methods": 6,
        "fields": 12,
        "lines_of_code": 58
      },
      "temp_inventory.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "naid_compliance_checklist.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "res_partner.py": {
        "classes": 1,
        "methods": 1,
        "fields": 0,
        "lines_of_code": 39
      },
      "records_audit_log.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "customer_inventory.py": {
        "classes": 1,
        "methods": 2,
        "fields": 50,
        "lines_of_code": 75
      },
      "load.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "file_retrieval_work_order.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "customer_retrieval_rates.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "records_tag.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "naid_custody_event.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_department_billing_contact.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "project_task.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "pickup_request.py": {
        "classes": 1,
        "methods": 2,
        "fields": 11,
        "lines_of_code": 37
      },
      "fsm_route_management.py": {
        "classes": 1,
        "methods": 1,
        "fields": 1,
        "lines_of_code": 24
      },
      "pickup_route.py": {
        "classes": 1,
        "methods": 6,
        "fields": 12,
        "lines_of_code": 58
      },
      "location_report_wizard.py": {
        "classes": 1,
        "methods": 4,
        "fields": 18,
        "lines_of_code": 124
      },
      "naid_certificate.py": {
        "classes": 1,
        "methods": 6,
        "fields": 11,
        "lines_of_code": 56
      },
      "records_document_type.py": {
        "classes": 1,
        "methods": 8,
        "fields": 31,
        "lines_of_code": 196
      },
      "records_container_movement.py": {
        "classes": 1,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 35
      },
      "transitory_field_config.py": {
        "classes": 1,
        "methods": 4,
        "fields": 7,
        "lines_of_code": 35
      },
      "customer_feedback.py": {
        "classes": 1,
        "methods": 5,
        "fields": 18,
        "lines_of_code": 138
      },
      "records_department.py": {
        "classes": 1,
        "methods": 2,
        "fields": 14,
        "lines_of_code": 67
      },
      "customer_inventory_report.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      },
      "records_policy_version.py": {
        "classes": 1,
        "methods": 2,
        "fields": 8,
        "lines_of_code": 34
      }
    },
    "duplications": [],
    "naming_conventions": [],
    "documentation": {}
  },
  "patterns": {
    "common_patterns": [
      {
        "type": "common_fields",
        "data": [
          [
            "name",
            97
          ],
          [
            "active",
            90
          ],
          [
            "company_id",
            89
          ],
          [
            "user_id",
            88
          ],
          [
            "state",
            87
          ],
          [
            "notes",
            82
          ],
          [
            "description",
            74
          ],
          [
            "date",
            43
          ],
          [
            "display_name",
            34
          ],
          [
            "date_created",
            27
          ]
        ]
      }
    ],
    "anti_patterns": [
      {
        "type": "missing_mail_thread",
        "data": [
          "hr_employee.py",
          "fsm.notification.placeholder",
          "res_config_settings.py",
          "fsm.task.placeholder",
          "records.billing.contact",
          "pos_config.py",
          "stock.move.sms.validation",
          "res_partner.py",
          "fsm.route.management.placeholder"
        ]
      }
    ],
    "best_practices": []
  }
}