# -*- coding: utf-8 -*-

from odoo import models, fields



class BarcodeGenerationHistory(models.Model):
    _name = "barcode.generation.history"
    _description = "Barcode Generation History"
    _inherit = ["mail.thread", "mail.activity.mixin"]
    _order = "generation_date desc"

        # ============================================================================
    # CORE IDENTIFICATION FIELDS
        # ============================================================================
    name = fields.Char(string="Reference", required=True, tracking=True,,
    index=True),
    company_id = fields.Many2one(
        "res.company", default=lambda self: self.env.company, required=True
    
    user_id = fields.Many2one(
        "res.users", default=lambda self: self.env.user, tracking=True
    
    active = fields.Boolean(string="Active",,
    default=True),
    state = fields.Selection(
        [)
            ("draft", "Draft"),
            ("generated", "Generated"),
            ("printed", "Printed"),
            ("applied", "Applied"),
            ("cancelled", "Cancelled"),
        
        default="draft",
        tracking=True,
    

        # ============================================================================
    # GENERATION DETAILS
        # ============================================================================
    product_id = fields.Many2one("barcode.product", string="Product",,
    required=True),
    barcode_generated = fields.Char(string="Generated Barcode",,
    index=True),
    generation_date = fields.Datetime(
        string="Generation Date", default=fields.Datetime.now, required=True
    
    generated_by_id = fields.Many2one(
        "res.users", string="Generated By", default=lambda self: self.env.user
    

    ,
    generation_method = fields.Selection(
        [)
            ("automatic", "Automatic"),
            ("manual", "Manual"),
            ("batch", "Batch Generation"),
            ("import", "Import"),
        
        string="Generation Method",
        default="automatic",
    

        # ============================================================================
    # TECHNICAL DETAILS
        # ============================================================================
    barcode_format = fields.Selection(
        [)
            ("ean13", "EAN-13"),
            ("ean8", "EAN-8"),
            ("code128", "Code 128"),
            ("code39", "Code 39"),
            ("qr", "QR Code"),
        
        string="Barcode Format",
        default="code128",
    

    sequence_number = fields.Integer(string="Sequence Number",,
    default=1),
    batch_id = fields.Char(string="Batch ID",,
    index=True)

        # ============================================================================
    # USAGE TRACKING
        # ============================================================================
    printed_date = fields.Datetime(string="Printed Date"),
    applied_date = fields.Datetime(string="Applied Date"),
    print_count = fields.Integer(string="Print Count",,
    default=0)

        # ============================================================================
    # NOTES & DOCUMENTATION
        # ============================================================================
    description = fields.Text(string="Description"),
    notes = fields.Text(string="Notes")

        # ============================================================================
    # RELATIONSHIP FIELDS
        # ============================================================================
    # Mail Thread Framework Fields (REQUIRED for mail.thread inheritance):
        pass
    activity_ids = fields.One2many("mail.activity", "res_id",,
    string="Activities"),
    message_follower_ids = fields.One2many(
        "mail.followers", "res_id", string="Followers"
    
    message_ids = fields.One2many("mail.message", "res_id",,
    string="Messages")

        # ============================================================================
    # ADDITIONAL RELATIONSHIP FIELDS
        # ============================================================================
    partner_id = fields.Many2one(
        "res.partner",
        string="Partner",
        help="Associated partner for this record",:
    
    ,
    context = fields.Char(string='Context'),
    domain = fields.Char(string='Domain'),
    help = fields.Char(string='Help'),
    res_model = fields.Char(string='Res Model'),
    type = fields.Selection([), string='Type')  # TODO: Define selection options
    view_mode = fields.Char(string='View Mode')

        # ============================================================================
    # ACTION METHODS
        # ============================================================================
    def action_generate(self):
        """Mark as generated"""
        self.ensure_one()
        self.write({"state": "generated", "generation_date": fields.Datetime.now()})

    def action_print(self):
        """Mark as printed"""
        self.ensure_one()
        self.write()
            {}
                "state": "printed",
                "printed_date": fields.Datetime.now(),
                "print_count": self.print_count + 1,
            
        

    def action_apply(self):
        """Mark as applied"""
        self.ensure_one()
        self.write({"state": "applied", "applied_date": fields.Datetime.now()})
)))))