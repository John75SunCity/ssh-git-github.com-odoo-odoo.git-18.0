from odoo import http
import logging

_logger = logging.getLogger(__name__)

CUSTOMER_FIELD = 'customer_id'
INTERNAL_USAGE = 'internal'


class MyController(http.Controller):

    def _get_partner_inventory(self, partner):
        serials = http.request.env['stock.production.lot'].search([(CUSTOMER_FIELD, '=', partner.id)])
        return http.request.env['stock.quant'].search([
            ('lot_id', 'in', serials.ids),
            ('location_id.usage', '=', INTERNAL_USAGE)
        ])

    @http.route('/my/inventory/request_pickup', type='http', auth='user', methods=['POST'], csrf=True)
    def request_pickup(self, **kw):
        user = http.request.env.user
        partner = user.partner_id
        _logger.info('Inventory accessed by partner %s', partner.id)
        try:
            item_ids = [int(id) for id in http.request.httprequest.form.getlist('item_ids')]
        except ValueError:
            _logger.warning("User %s (ID: %s) provided invalid item_ids: %s", user.login, user.id, http.request.httprequest.form.getlist('item_ids'))
            return http.request.redirect('/my/inventory?error=invalid_item_ids')
        _logger.info('Pickup requested for items %s by partner %s', item_ids, partner.id)
        # ...existing code...

    @http.route('/my/inventory', type='http', auth='user', website=True, methods=['GET'], csrf=True)
    def my_inventory(self, **kw):
        user = http.request.env.user
        partner = user.partner_id
        quants = self._get_partner_inventory(partner)
        return http.request.render(
            'records_management.inventory_template',
            {
                'quants': quants,
                'message': 'No inventory items found.' if not quants else ''
            }
        )

    # ...existing code...

